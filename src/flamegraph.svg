<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1686" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1669.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1669.00"> </text><svg id="frames" x="10" width="1180" total_samples="2000"><g><title>arvz`config::file::format::FileFormat::parse (1 samples, 0.05%)</title><rect x="0.0000%" y="1621" width="0.0500%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1631.50"></text></g><g><title>arvz`config::file::format::json5::parse (1 samples, 0.05%)</title><rect x="0.0000%" y="1605" width="0.0500%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1615.50"></text></g><g><title>arvz`json5::de::from_str (1 samples, 0.05%)</title><rect x="0.0000%" y="1589" width="0.0500%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1599.50"></text></g><g><title>arvz`json5::de::Deserializer::from_str (1 samples, 0.05%)</title><rect x="0.0000%" y="1573" width="0.0500%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1583.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse (1 samples, 0.05%)</title><rect x="0.0000%" y="1557" width="0.0500%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1567.50"></text></g><g><title>arvz`pest::parser_state::state (1 samples, 0.05%)</title><rect x="0.0000%" y="1541" width="0.0500%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1551.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1525" width="0.0500%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1535.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::text (1 samples, 0.05%)</title><rect x="0.0000%" y="1509" width="0.0500%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1519.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="1493" width="0.0500%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1503.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::text::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1477" width="0.0500%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1487.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="1461" width="0.0500%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1471.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::text::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1445" width="0.0500%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1455.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::value (1 samples, 0.05%)</title><rect x="0.0000%" y="1429" width="0.0500%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1439.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::or_else (1 samples, 0.05%)</title><rect x="0.0000%" y="1413" width="0.0500%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1423.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::value::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1397" width="0.0500%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1407.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object (1 samples, 0.05%)</title><rect x="0.0000%" y="1381" width="0.0500%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1391.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::rule (1 samples, 0.05%)</title><rect x="0.0000%" y="1365" width="0.0500%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1375.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1349" width="0.0500%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1359.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="1333" width="0.0500%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1343.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1317" width="0.0500%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1327.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="1301" width="0.0500%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1311.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1285" width="0.0500%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1295.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::or_else (1 samples, 0.05%)</title><rect x="0.0000%" y="1269" width="0.0500%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1279.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1253" width="0.0500%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1263.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="1237" width="0.0500%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1247.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1221" width="0.0500%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1231.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::pair (1 samples, 0.05%)</title><rect x="0.0000%" y="1205" width="0.0500%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1215.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="1189" width="0.0500%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1199.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::pair::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1173" width="0.0500%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1183.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="1157" width="0.0500%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::pair::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1141" width="0.0500%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::value (1 samples, 0.05%)</title><rect x="0.0000%" y="1125" width="0.0500%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::or_else (1 samples, 0.05%)</title><rect x="0.0000%" y="1109" width="0.0500%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1119.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::value::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1093" width="0.0500%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1103.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object (1 samples, 0.05%)</title><rect x="0.0000%" y="1077" width="0.0500%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1087.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::rule (1 samples, 0.05%)</title><rect x="0.0000%" y="1061" width="0.0500%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1071.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1045" width="0.0500%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1055.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="1029" width="0.0500%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="1013" width="0.0500%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="997" width="0.0500%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="981" width="0.0500%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::or_else (1 samples, 0.05%)</title><rect x="0.0000%" y="965" width="0.0500%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="949" width="0.0500%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="933" width="0.0500%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="917" width="0.0500%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::pair (1 samples, 0.05%)</title><rect x="0.0000%" y="901" width="0.0500%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="885" width="0.0500%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::pair::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="869" width="0.0500%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="853" width="0.0500%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::pair::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="837" width="0.0500%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::value (1 samples, 0.05%)</title><rect x="0.0000%" y="821" width="0.0500%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::or_else (1 samples, 0.05%)</title><rect x="0.0000%" y="805" width="0.0500%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::value::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="789" width="0.0500%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object (1 samples, 0.05%)</title><rect x="0.0000%" y="773" width="0.0500%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::rule (1 samples, 0.05%)</title><rect x="0.0000%" y="757" width="0.0500%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="741" width="0.0500%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="725" width="0.0500%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="709" width="0.0500%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="693" width="0.0500%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="677" width="0.0500%" height="15" fill="rgb(227,1,9)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::or_else (1 samples, 0.05%)</title><rect x="0.0000%" y="661" width="0.0500%" height="15" fill="rgb(248,47,43)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="645" width="0.0500%" height="15" fill="rgb(221,10,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="629" width="0.0500%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="613" width="0.0500%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="597" width="0.0500%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="581" width="0.0500%" height="15" fill="rgb(247,98,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="565" width="0.0500%" height="15" fill="rgb(247,138,52)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="549" width="0.0500%" height="15" fill="rgb(213,79,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::optional (1 samples, 0.05%)</title><rect x="0.0000%" y="533" width="0.0500%" height="15" fill="rgb(246,177,23)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="517" width="0.0500%" height="15" fill="rgb(230,62,27)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="501" width="0.0500%" height="15" fill="rgb(216,154,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="485" width="0.0500%" height="15" fill="rgb(244,35,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::repeat (1 samples, 0.05%)</title><rect x="0.0000%" y="469" width="0.0500%" height="15" fill="rgb(251,115,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="453" width="0.0500%" height="15" fill="rgb(240,54,50)" fg:x="0" fg:w="1"/><text x="0.2500%" y="463.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="437" width="0.0500%" height="15" fill="rgb(233,84,52)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="421" width="0.0500%" height="15" fill="rgb(207,117,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="405" width="0.0500%" height="15" fill="rgb(249,43,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="389" width="0.0500%" height="15" fill="rgb(209,38,44)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="373" width="0.0500%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="357" width="0.0500%" height="15" fill="rgb(242,79,21)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="341" width="0.0500%" height="15" fill="rgb(211,96,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::object::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="325" width="0.0500%" height="15" fill="rgb(253,215,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::hidden::skip (1 samples, 0.05%)</title><rect x="0.0000%" y="309" width="0.0500%" height="15" fill="rgb(211,81,21)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="293" width="0.0500%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::hidden::skip::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="277" width="0.0500%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="261" width="0.0500%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::hidden::skip::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="245" width="0.0500%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::repeat (1 samples, 0.05%)</title><rect x="0.0000%" y="229" width="0.0500%" height="15" fill="rgb(240,68,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="239.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::hidden::skip::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="213" width="0.0500%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="223.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.05%)</title><rect x="0.0000%" y="197" width="0.0500%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="207.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::hidden::skip::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="181" width="0.0500%" height="15" fill="rgb(224,169,11)" fg:x="0" fg:w="1"/><text x="0.2500%" y="191.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.05%)</title><rect x="0.0000%" y="165" width="0.0500%" height="15" fill="rgb(250,166,2)" fg:x="0" fg:w="1"/><text x="0.2500%" y="175.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::hidden::skip::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="149" width="0.0500%" height="15" fill="rgb(242,216,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="159.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::repeat (1 samples, 0.05%)</title><rect x="0.0000%" y="133" width="0.0500%" height="15" fill="rgb(230,116,27)" fg:x="0" fg:w="1"/><text x="0.2500%" y="143.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::hidden::skip::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0000%" y="117" width="0.0500%" height="15" fill="rgb(228,99,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="127.50"></text></g><g><title>arvz`&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::WHITESPACE (1 samples, 0.05%)</title><rect x="0.0000%" y="101" width="0.0500%" height="15" fill="rgb(253,11,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="111.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::atomic (1 samples, 0.05%)</title><rect x="0.0000%" y="85" width="0.0500%" height="15" fill="rgb(247,143,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="95.50"></text></g><g><title>arvz`pest::parser_state::ParserState&lt;R&gt;::inc_call_check_limit (1 samples, 0.05%)</title><rect x="0.0000%" y="69" width="0.0500%" height="15" fill="rgb(236,97,10)" fg:x="0" fg:w="1"/><text x="0.2500%" y="79.50"></text></g><g><title>arvz`pest::parser_state::CallLimitTracker::limit_reached (1 samples, 0.05%)</title><rect x="0.0000%" y="53" width="0.0500%" height="15" fill="rgb(233,208,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="63.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::map_or (1 samples, 0.05%)</title><rect x="0.0000%" y="37" width="0.0500%" height="15" fill="rgb(216,164,2)" fg:x="0" fg:w="1"/><text x="0.2500%" y="47.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="741" width="0.0500%" height="15" fill="rgb(220,129,5)" fg:x="1" fg:w="1"/><text x="0.3000%" y="751.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="725" width="0.0500%" height="15" fill="rgb(242,17,10)" fg:x="1" fg:w="1"/><text x="0.3000%" y="735.50"></text></g><g><title>arvz`&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="709" width="0.0500%" height="15" fill="rgb(242,107,0)" fg:x="1" fg:w="1"/><text x="0.3000%" y="719.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0500%" y="693" width="0.0500%" height="15" fill="rgb(251,28,31)" fg:x="1" fg:w="1"/><text x="0.3000%" y="703.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::send_request::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0500%" y="677" width="0.0500%" height="15" fill="rgb(233,223,10)" fg:x="1" fg:w="1"/><text x="0.3000%" y="687.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::connection_for::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0500%" y="661" width="0.0500%" height="15" fill="rgb(215,21,27)" fg:x="1" fg:w="1"/><text x="0.3000%" y="671.50"></text></g><g><title>arvz`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="645" width="0.0500%" height="15" fill="rgb(232,23,21)" fg:x="1" fg:w="1"/><text x="0.3000%" y="655.50"></text></g><g><title>arvz`futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.05%)</title><rect x="0.0500%" y="629" width="0.0500%" height="15" fill="rgb(244,5,23)" fg:x="1" fg:w="1"/><text x="0.3000%" y="639.50"></text></g><g><title>arvz`&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="613" width="0.0500%" height="15" fill="rgb(226,81,46)" fg:x="1" fg:w="1"/><text x="0.3000%" y="623.50"></text></g><g><title>arvz`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="597" width="0.0500%" height="15" fill="rgb(247,70,30)" fg:x="1" fg:w="1"/><text x="0.3000%" y="607.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="581" width="0.0500%" height="15" fill="rgb(212,68,19)" fg:x="1" fg:w="1"/><text x="0.3000%" y="591.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="565" width="0.0500%" height="15" fill="rgb(240,187,13)" fg:x="1" fg:w="1"/><text x="0.3000%" y="575.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="549" width="0.0500%" height="15" fill="rgb(223,113,26)" fg:x="1" fg:w="1"/><text x="0.3000%" y="559.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="0.0500%" y="533" width="0.0500%" height="15" fill="rgb(206,192,2)" fg:x="1" fg:w="1"/><text x="0.3000%" y="543.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="517" width="0.0500%" height="15" fill="rgb(241,108,4)" fg:x="1" fg:w="1"/><text x="0.3000%" y="527.50"></text></g><g><title>arvz`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="501" width="0.0500%" height="15" fill="rgb(247,173,49)" fg:x="1" fg:w="1"/><text x="0.3000%" y="511.50"></text></g><g><title>arvz`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="485" width="0.0500%" height="15" fill="rgb(224,114,35)" fg:x="1" fg:w="1"/><text x="0.3000%" y="495.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="469" width="0.0500%" height="15" fill="rgb(245,159,27)" fg:x="1" fg:w="1"/><text x="0.3000%" y="479.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="0.0500%" y="453" width="0.0500%" height="15" fill="rgb(245,172,44)" fg:x="1" fg:w="1"/><text x="0.3000%" y="463.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="437" width="0.0500%" height="15" fill="rgb(236,23,11)" fg:x="1" fg:w="1"/><text x="0.3000%" y="447.50"></text></g><g><title>arvz`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="421" width="0.0500%" height="15" fill="rgb(205,117,38)" fg:x="1" fg:w="1"/><text x="0.3000%" y="431.50"></text></g><g><title>arvz`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="405" width="0.0500%" height="15" fill="rgb(237,72,25)" fg:x="1" fg:w="1"/><text x="0.3000%" y="415.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="389" width="0.0500%" height="15" fill="rgb(244,70,9)" fg:x="1" fg:w="1"/><text x="0.3000%" y="399.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="0.0500%" y="373" width="0.0500%" height="15" fill="rgb(217,125,39)" fg:x="1" fg:w="1"/><text x="0.3000%" y="383.50"></text></g><g><title>arvz`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="357" width="0.0500%" height="15" fill="rgb(235,36,10)" fg:x="1" fg:w="1"/><text x="0.3000%" y="367.50"></text></g><g><title>arvz`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="341" width="0.0500%" height="15" fill="rgb(251,123,47)" fg:x="1" fg:w="1"/><text x="0.3000%" y="351.50"></text></g><g><title>arvz`reqwest::connect::with_timeout::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0500%" y="325" width="0.0500%" height="15" fill="rgb(221,13,13)" fg:x="1" fg:w="1"/><text x="0.3000%" y="335.50"></text></g><g><title>arvz`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0500%" y="309" width="0.0500%" height="15" fill="rgb(238,131,9)" fg:x="1" fg:w="1"/><text x="0.3000%" y="319.50"></text></g><g><title>arvz`&lt;hyper_tls::client::HttpsConnecting&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="293" width="0.0500%" height="15" fill="rgb(211,50,8)" fg:x="1" fg:w="1"/><text x="0.3000%" y="303.50"></text></g><g><title>arvz`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="277" width="0.0500%" height="15" fill="rgb(245,182,24)" fg:x="1" fg:w="1"/><text x="0.3000%" y="287.50"></text></g><g><title>arvz`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0500%" y="261" width="0.0500%" height="15" fill="rgb(242,14,37)" fg:x="1" fg:w="1"/><text x="0.3000%" y="271.50"></text></g><g><title>arvz`tokio_native_tls::TlsConnector::connect::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0500%" y="245" width="0.0500%" height="15" fill="rgb(246,228,12)" fg:x="1" fg:w="1"/><text x="0.3000%" y="255.50"></text></g><g><title>arvz`tokio_native_tls::handshake::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0500%" y="229" width="0.0500%" height="15" fill="rgb(213,55,15)" fg:x="1" fg:w="1"/><text x="0.3000%" y="239.50"></text></g><g><title>arvz`&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.0500%" y="213" width="0.0500%" height="15" fill="rgb(209,9,3)" fg:x="1" fg:w="1"/><text x="0.3000%" y="223.50"></text></g><g><title>arvz`tokio_native_tls::TlsConnector::connect::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.0500%" y="197" width="0.0500%" height="15" fill="rgb(230,59,30)" fg:x="1" fg:w="1"/><text x="0.3000%" y="207.50"></text></g><g><title>arvz`native_tls::TlsConnector::connect (1 samples, 0.05%)</title><rect x="0.0500%" y="181" width="0.0500%" height="15" fill="rgb(209,121,21)" fg:x="1" fg:w="1"/><text x="0.3000%" y="191.50"></text></g><g><title>arvz`native_tls::imp::TlsConnector::connect (1 samples, 0.05%)</title><rect x="0.0500%" y="165" width="0.0500%" height="15" fill="rgb(220,109,13)" fg:x="1" fg:w="1"/><text x="0.3000%" y="175.50"></text></g><g><title>arvz`security_framework::secure_transport::ClientBuilder::handshake (1 samples, 0.05%)</title><rect x="0.0500%" y="149" width="0.0500%" height="15" fill="rgb(232,18,1)" fg:x="1" fg:w="1"/><text x="0.3000%" y="159.50"></text></g><g><title>arvz`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (1 samples, 0.05%)</title><rect x="0.0500%" y="133" width="0.0500%" height="15" fill="rgb(215,41,42)" fg:x="1" fg:w="1"/><text x="0.3000%" y="143.50"></text></g><g><title>arvz`security_framework::secure_transport::SslStream&lt;S&gt;::handshake (1 samples, 0.05%)</title><rect x="0.0500%" y="117" width="0.0500%" height="15" fill="rgb(224,123,36)" fg:x="1" fg:w="1"/><text x="0.3000%" y="127.50"></text></g><g><title>Security`SSLHandshake (1 samples, 0.05%)</title><rect x="0.0500%" y="101" width="0.0500%" height="15" fill="rgb(240,125,3)" fg:x="1" fg:w="1"/><text x="0.3000%" y="111.50"></text></g><g><title>Security`SSLHandshakeProceed (1 samples, 0.05%)</title><rect x="0.0500%" y="85" width="0.0500%" height="15" fill="rgb(205,98,50)" fg:x="1" fg:w="1"/><text x="0.3000%" y="95.50"></text></g><g><title>Security`SSLRecordReadInternal (1 samples, 0.05%)</title><rect x="0.0500%" y="69" width="0.0500%" height="15" fill="rgb(205,185,37)" fg:x="1" fg:w="1"/><text x="0.3000%" y="79.50"></text></g><g><title>arvz`security_framework::secure_transport::read_func (1 samples, 0.05%)</title><rect x="0.0500%" y="53" width="0.0500%" height="15" fill="rgb(238,207,15)" fg:x="1" fg:w="1"/><text x="0.3000%" y="63.50"></text></g><g><title>arvz`std::panicking::try (1 samples, 0.05%)</title><rect x="0.0500%" y="37" width="0.0500%" height="15" fill="rgb(213,199,42)" fg:x="1" fg:w="1"/><text x="0.3000%" y="47.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.10%)</title><rect x="0.0500%" y="1621" width="0.1000%" height="15" fill="rgb(235,201,11)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1631.50"></text></g><g><title>arvz`std::thread::Builder::spawn_unchecked_::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="1605" width="0.1000%" height="15" fill="rgb(207,46,11)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1615.50"></text></g><g><title>arvz`std::panicking::try (2 samples, 0.10%)</title><rect x="0.0500%" y="1589" width="0.1000%" height="15" fill="rgb(241,35,35)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1599.50"></text></g><g><title>arvz`__rust_try (2 samples, 0.10%)</title><rect x="0.0500%" y="1573" width="0.1000%" height="15" fill="rgb(243,32,47)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1583.50"></text></g><g><title>arvz`std::panicking::try::do_call (2 samples, 0.10%)</title><rect x="0.0500%" y="1557" width="0.1000%" height="15" fill="rgb(247,202,23)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1567.50"></text></g><g><title>arvz`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.10%)</title><rect x="0.0500%" y="1541" width="0.1000%" height="15" fill="rgb(219,102,11)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1551.50"></text></g><g><title>arvz`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="1525" width="0.1000%" height="15" fill="rgb(243,110,44)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1535.50"></text></g><g><title>arvz`std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.10%)</title><rect x="0.0500%" y="1509" width="0.1000%" height="15" fill="rgb(222,74,54)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1519.50"></text></g><g><title>arvz`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="1493" width="0.1000%" height="15" fill="rgb(216,99,12)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1503.50"></text></g><g><title>arvz`tokio::runtime::blocking::pool::Inner::run (2 samples, 0.10%)</title><rect x="0.0500%" y="1477" width="0.1000%" height="15" fill="rgb(226,22,26)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1487.50"></text></g><g><title>arvz`tokio::runtime::blocking::pool::Task::run (2 samples, 0.10%)</title><rect x="0.0500%" y="1461" width="0.1000%" height="15" fill="rgb(217,163,10)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1471.50"></text></g><g><title>arvz`tokio::runtime::task::UnownedTask&lt;S&gt;::run (2 samples, 0.10%)</title><rect x="0.0500%" y="1445" width="0.1000%" height="15" fill="rgb(213,25,53)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1455.50"></text></g><g><title>arvz`tokio::runtime::task::raw::RawTask::poll (2 samples, 0.10%)</title><rect x="0.0500%" y="1429" width="0.1000%" height="15" fill="rgb(252,105,26)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1439.50"></text></g><g><title>arvz`tokio::runtime::task::raw::poll (2 samples, 0.10%)</title><rect x="0.0500%" y="1413" width="0.1000%" height="15" fill="rgb(220,39,43)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1423.50"></text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.10%)</title><rect x="0.0500%" y="1397" width="0.1000%" height="15" fill="rgb(229,68,48)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1407.50"></text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.10%)</title><rect x="0.0500%" y="1381" width="0.1000%" height="15" fill="rgb(252,8,32)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1391.50"></text></g><g><title>arvz`tokio::runtime::task::harness::poll_future (2 samples, 0.10%)</title><rect x="0.0500%" y="1365" width="0.1000%" height="15" fill="rgb(223,20,43)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1375.50"></text></g><g><title>arvz`std::panic::catch_unwind (2 samples, 0.10%)</title><rect x="0.0500%" y="1349" width="0.1000%" height="15" fill="rgb(229,81,49)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1359.50"></text></g><g><title>arvz`std::panicking::try (2 samples, 0.10%)</title><rect x="0.0500%" y="1333" width="0.1000%" height="15" fill="rgb(236,28,36)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1343.50"></text></g><g><title>arvz`__rust_try (2 samples, 0.10%)</title><rect x="0.0500%" y="1317" width="0.1000%" height="15" fill="rgb(249,185,26)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1327.50"></text></g><g><title>arvz`std::panicking::try::do_call (2 samples, 0.10%)</title><rect x="0.0500%" y="1301" width="0.1000%" height="15" fill="rgb(249,174,33)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1311.50"></text></g><g><title>arvz`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.10%)</title><rect x="0.0500%" y="1285" width="0.1000%" height="15" fill="rgb(233,201,37)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1295.50"></text></g><g><title>arvz`tokio::runtime::task::harness::poll_future::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="1269" width="0.1000%" height="15" fill="rgb(221,78,26)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1279.50"></text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.10%)</title><rect x="0.0500%" y="1253" width="0.1000%" height="15" fill="rgb(250,127,30)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1263.50"></text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="1237" width="0.1000%" height="15" fill="rgb(230,49,44)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1247.50"></text></g><g><title>arvz`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.10%)</title><rect x="0.0500%" y="1221" width="0.1000%" height="15" fill="rgb(229,67,23)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1231.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="1205" width="0.1000%" height="15" fill="rgb(249,83,47)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1215.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run (2 samples, 0.10%)</title><rect x="0.0500%" y="1189" width="0.1000%" height="15" fill="rgb(215,43,3)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1199.50"></text></g><g><title>arvz`tokio::runtime::context::runtime::enter_runtime (2 samples, 0.10%)</title><rect x="0.0500%" y="1173" width="0.1000%" height="15" fill="rgb(238,154,13)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1183.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="1157" width="0.1000%" height="15" fill="rgb(219,56,2)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1167.50"></text></g><g><title>arvz`tokio::runtime::context::set_scheduler (2 samples, 0.10%)</title><rect x="0.0500%" y="1141" width="0.1000%" height="15" fill="rgb(233,0,4)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1151.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.10%)</title><rect x="0.0500%" y="1125" width="0.1000%" height="15" fill="rgb(235,30,7)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1135.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.10%)</title><rect x="0.0500%" y="1109" width="0.1000%" height="15" fill="rgb(250,79,13)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1119.50"></text></g><g><title>arvz`tokio::runtime::context::set_scheduler::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="1093" width="0.1000%" height="15" fill="rgb(211,146,34)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1103.50"></text></g><g><title>arvz`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (2 samples, 0.10%)</title><rect x="0.0500%" y="1077" width="0.1000%" height="15" fill="rgb(228,22,38)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1087.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="1061" width="0.1000%" height="15" fill="rgb(235,168,5)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1071.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run (2 samples, 0.10%)</title><rect x="0.0500%" y="1045" width="0.1000%" height="15" fill="rgb(221,155,16)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1055.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (2 samples, 0.10%)</title><rect x="0.0500%" y="1029" width="0.1000%" height="15" fill="rgb(215,215,53)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1039.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="1013" width="0.1000%" height="15" fill="rgb(223,4,10)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1023.50"></text></g><g><title>arvz`tokio::runtime::task::LocalNotified&lt;S&gt;::run (2 samples, 0.10%)</title><rect x="0.0500%" y="997" width="0.1000%" height="15" fill="rgb(234,103,6)" fg:x="1" fg:w="2"/><text x="0.3000%" y="1007.50"></text></g><g><title>arvz`tokio::runtime::task::raw::RawTask::poll (2 samples, 0.10%)</title><rect x="0.0500%" y="981" width="0.1000%" height="15" fill="rgb(227,97,0)" fg:x="1" fg:w="2"/><text x="0.3000%" y="991.50"></text></g><g><title>arvz`tokio::runtime::task::raw::poll (2 samples, 0.10%)</title><rect x="0.0500%" y="965" width="0.1000%" height="15" fill="rgb(234,150,53)" fg:x="1" fg:w="2"/><text x="0.3000%" y="975.50"></text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.10%)</title><rect x="0.0500%" y="949" width="0.1000%" height="15" fill="rgb(228,201,54)" fg:x="1" fg:w="2"/><text x="0.3000%" y="959.50"></text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.10%)</title><rect x="0.0500%" y="933" width="0.1000%" height="15" fill="rgb(222,22,37)" fg:x="1" fg:w="2"/><text x="0.3000%" y="943.50"></text></g><g><title>arvz`tokio::runtime::task::harness::poll_future (2 samples, 0.10%)</title><rect x="0.0500%" y="917" width="0.1000%" height="15" fill="rgb(237,53,32)" fg:x="1" fg:w="2"/><text x="0.3000%" y="927.50"></text></g><g><title>arvz`std::panic::catch_unwind (2 samples, 0.10%)</title><rect x="0.0500%" y="901" width="0.1000%" height="15" fill="rgb(233,25,53)" fg:x="1" fg:w="2"/><text x="0.3000%" y="911.50"></text></g><g><title>arvz`std::panicking::try (2 samples, 0.10%)</title><rect x="0.0500%" y="885" width="0.1000%" height="15" fill="rgb(210,40,34)" fg:x="1" fg:w="2"/><text x="0.3000%" y="895.50"></text></g><g><title>arvz`__rust_try (2 samples, 0.10%)</title><rect x="0.0500%" y="869" width="0.1000%" height="15" fill="rgb(241,220,44)" fg:x="1" fg:w="2"/><text x="0.3000%" y="879.50"></text></g><g><title>arvz`std::panicking::try::do_call (2 samples, 0.10%)</title><rect x="0.0500%" y="853" width="0.1000%" height="15" fill="rgb(235,28,35)" fg:x="1" fg:w="2"/><text x="0.3000%" y="863.50"></text></g><g><title>arvz`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.10%)</title><rect x="0.0500%" y="837" width="0.1000%" height="15" fill="rgb(210,56,17)" fg:x="1" fg:w="2"/><text x="0.3000%" y="847.50"></text></g><g><title>arvz`tokio::runtime::task::harness::poll_future::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="821" width="0.1000%" height="15" fill="rgb(224,130,29)" fg:x="1" fg:w="2"/><text x="0.3000%" y="831.50"></text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.10%)</title><rect x="0.0500%" y="805" width="0.1000%" height="15" fill="rgb(235,212,8)" fg:x="1" fg:w="2"/><text x="0.3000%" y="815.50"></text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="789" width="0.1000%" height="15" fill="rgb(223,33,50)" fg:x="1" fg:w="2"/><text x="0.3000%" y="799.50"></text></g><g><title>arvz`arvz::app::App::run::_{{closure}}::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="773" width="0.1000%" height="15" fill="rgb(219,149,13)" fg:x="1" fg:w="2"/><text x="0.3000%" y="783.50"></text></g><g><title>arvz`arvz::context_data::ContextData::refresh::_{{closure}} (2 samples, 0.10%)</title><rect x="0.0500%" y="757" width="0.1000%" height="15" fill="rgb(250,156,29)" fg:x="1" fg:w="2"/><text x="0.3000%" y="767.50"></text></g><g><title>arvz`reqwest::async_impl::response::Response::text::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1000%" y="741" width="0.0500%" height="15" fill="rgb(216,193,19)" fg:x="2" fg:w="1"/><text x="0.3500%" y="751.50"></text></g><g><title>arvz`reqwest::async_impl::response::Response::text_with_charset::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1000%" y="725" width="0.0500%" height="15" fill="rgb(216,135,14)" fg:x="2" fg:w="1"/><text x="0.3500%" y="735.50"></text></g><g><title>arvz`reqwest::async_impl::response::Response::bytes::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1000%" y="709" width="0.0500%" height="15" fill="rgb(241,47,5)" fg:x="2" fg:w="1"/><text x="0.3500%" y="719.50"></text></g><g><title>arvz`hyper::body::to_bytes::to_bytes::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1000%" y="693" width="0.0500%" height="15" fill="rgb(233,42,35)" fg:x="2" fg:w="1"/><text x="0.3500%" y="703.50"></text></g><g><title>arvz`&lt;http_body::next::Data&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.1000%" y="677" width="0.0500%" height="15" fill="rgb(231,13,6)" fg:x="2" fg:w="1"/><text x="0.3500%" y="687.50"></text></g><g><title>arvz`&lt;&amp;mut T as http_body::Body&gt;::poll_data (1 samples, 0.05%)</title><rect x="0.1000%" y="661" width="0.0500%" height="15" fill="rgb(207,181,40)" fg:x="2" fg:w="1"/><text x="0.3500%" y="671.50"></text></g><g><title>arvz`&lt;core::pin::Pin&lt;P&gt; as http_body::Body&gt;::poll_data (1 samples, 0.05%)</title><rect x="0.1000%" y="645" width="0.0500%" height="15" fill="rgb(254,173,49)" fg:x="2" fg:w="1"/><text x="0.3500%" y="655.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::decoder::Decoder as http_body::Body&gt;::poll_data (1 samples, 0.05%)</title><rect x="0.1000%" y="629" width="0.0500%" height="15" fill="rgb(221,1,38)" fg:x="2" fg:w="1"/><text x="0.3500%" y="639.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::decoder::Decoder as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.05%)</title><rect x="0.1000%" y="613" width="0.0500%" height="15" fill="rgb(206,124,46)" fg:x="2" fg:w="1"/><text x="0.3500%" y="623.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::body::ImplStream as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.05%)</title><rect x="0.1000%" y="597" width="0.0500%" height="15" fill="rgb(249,21,11)" fg:x="2" fg:w="1"/><text x="0.3500%" y="607.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::body::ImplStream as http_body::Body&gt;::poll_data (1 samples, 0.05%)</title><rect x="0.1000%" y="581" width="0.0500%" height="15" fill="rgb(222,201,40)" fg:x="2" fg:w="1"/><text x="0.3500%" y="591.50"></text></g><g><title>arvz`&lt;core::pin::Pin&lt;P&gt; as http_body::Body&gt;::poll_data (1 samples, 0.05%)</title><rect x="0.1000%" y="565" width="0.0500%" height="15" fill="rgb(235,61,29)" fg:x="2" fg:w="1"/><text x="0.3500%" y="575.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::body::WrapHyper as http_body::Body&gt;::poll_data (1 samples, 0.05%)</title><rect x="0.1000%" y="549" width="0.0500%" height="15" fill="rgb(219,207,3)" fg:x="2" fg:w="1"/><text x="0.3500%" y="559.50"></text></g><g><title>arvz`&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (1 samples, 0.05%)</title><rect x="0.1000%" y="533" width="0.0500%" height="15" fill="rgb(222,56,46)" fg:x="2" fg:w="1"/><text x="0.3500%" y="543.50"></text></g><g><title>arvz`hyper::body::body::Body::poll_eof (1 samples, 0.05%)</title><rect x="0.1000%" y="517" width="0.0500%" height="15" fill="rgb(239,76,54)" fg:x="2" fg:w="1"/><text x="0.3500%" y="527.50"></text></g><g><title>arvz`hyper::body::body::Body::poll_inner (1 samples, 0.05%)</title><rect x="0.1000%" y="501" width="0.0500%" height="15" fill="rgb(231,124,27)" fg:x="2" fg:w="1"/><text x="0.3500%" y="511.50"></text></g><g><title>arvz`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.05%)</title><rect x="0.1000%" y="485" width="0.0500%" height="15" fill="rgb(249,195,6)" fg:x="2" fg:w="1"/><text x="0.3500%" y="495.50"></text></g><g><title>arvz`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1 samples, 0.05%)</title><rect x="0.1000%" y="469" width="0.0500%" height="15" fill="rgb(237,174,47)" fg:x="2" fg:w="1"/><text x="0.3500%" y="479.50"></text></g><g><title>arvz`futures_channel::mpsc::Receiver&lt;T&gt;::unpark_one (1 samples, 0.05%)</title><rect x="0.1000%" y="453" width="0.0500%" height="15" fill="rgb(206,201,31)" fg:x="2" fg:w="1"/><text x="0.3500%" y="463.50"></text></g><g><title>arvz`futures_channel::mpsc::SenderTask::notify (1 samples, 0.05%)</title><rect x="0.1000%" y="437" width="0.0500%" height="15" fill="rgb(231,57,52)" fg:x="2" fg:w="1"/><text x="0.3500%" y="447.50"></text></g><g><title>arvz`core::task::wake::Waker::wake (1 samples, 0.05%)</title><rect x="0.1000%" y="421" width="0.0500%" height="15" fill="rgb(248,177,22)" fg:x="2" fg:w="1"/><text x="0.3500%" y="431.50"></text></g><g><title>arvz`tokio::runtime::task::waker::wake_by_val (1 samples, 0.05%)</title><rect x="0.1000%" y="405" width="0.0500%" height="15" fill="rgb(215,211,37)" fg:x="2" fg:w="1"/><text x="0.3500%" y="415.50"></text></g><g><title>arvz`tokio::runtime::task::harness::_&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 0.05%)</title><rect x="0.1000%" y="389" width="0.0500%" height="15" fill="rgb(241,128,51)" fg:x="2" fg:w="1"/><text x="0.3500%" y="399.50"></text></g><g><title>arvz`tokio::runtime::task::raw::RawTask::schedule (1 samples, 0.05%)</title><rect x="0.1000%" y="373" width="0.0500%" height="15" fill="rgb(227,165,31)" fg:x="2" fg:w="1"/><text x="0.3500%" y="383.50"></text></g><g><title>arvz`tokio::runtime::task::raw::schedule (1 samples, 0.05%)</title><rect x="0.1000%" y="357" width="0.0500%" height="15" fill="rgb(228,167,24)" fg:x="2" fg:w="1"/><text x="0.3500%" y="367.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 0.05%)</title><rect x="0.1000%" y="341" width="0.0500%" height="15" fill="rgb(228,143,12)" fg:x="2" fg:w="1"/><text x="0.3500%" y="351.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.05%)</title><rect x="0.1000%" y="325" width="0.0500%" height="15" fill="rgb(249,149,8)" fg:x="2" fg:w="1"/><text x="0.3500%" y="335.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::with_current (1 samples, 0.05%)</title><rect x="0.1000%" y="309" width="0.0500%" height="15" fill="rgb(243,35,44)" fg:x="2" fg:w="1"/><text x="0.3500%" y="319.50"></text></g><g><title>arvz`tokio::runtime::context::with_scheduler (1 samples, 0.05%)</title><rect x="0.1000%" y="293" width="0.0500%" height="15" fill="rgb(246,89,9)" fg:x="2" fg:w="1"/><text x="0.3500%" y="303.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="0.1000%" y="277" width="0.0500%" height="15" fill="rgb(233,213,13)" fg:x="2" fg:w="1"/><text x="0.3500%" y="287.50"></text></g><g><title>arvz`tokio::runtime::context::with_scheduler::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1000%" y="261" width="0.0500%" height="15" fill="rgb(233,141,41)" fg:x="2" fg:w="1"/><text x="0.3500%" y="271.50"></text></g><g><title>arvz`tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="0.1000%" y="245" width="0.0500%" height="15" fill="rgb(239,167,4)" fg:x="2" fg:w="1"/><text x="0.3500%" y="255.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1000%" y="229" width="0.0500%" height="15" fill="rgb(209,217,16)" fg:x="2" fg:w="1"/><text x="0.3500%" y="239.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1000%" y="213" width="0.0500%" height="15" fill="rgb(219,88,35)" fg:x="2" fg:w="1"/><text x="0.3500%" y="223.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.05%)</title><rect x="0.1000%" y="197" width="0.0500%" height="15" fill="rgb(220,193,23)" fg:x="2" fg:w="1"/><text x="0.3500%" y="207.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (1 samples, 0.05%)</title><rect x="0.1000%" y="181" width="0.0500%" height="15" fill="rgb(230,90,52)" fg:x="2" fg:w="1"/><text x="0.3500%" y="191.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1 samples, 0.05%)</title><rect x="0.1000%" y="165" width="0.0500%" height="15" fill="rgb(252,106,19)" fg:x="2" fg:w="1"/><text x="0.3500%" y="175.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::park::Inner::unpark (1 samples, 0.05%)</title><rect x="0.1000%" y="149" width="0.0500%" height="15" fill="rgb(206,74,20)" fg:x="2" fg:w="1"/><text x="0.3500%" y="159.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (1 samples, 0.05%)</title><rect x="0.1000%" y="133" width="0.0500%" height="15" fill="rgb(230,138,44)" fg:x="2" fg:w="1"/><text x="0.3500%" y="143.50"></text></g><g><title>arvz`tokio::loom::std::parking_lot::Condvar::notify_one (1 samples, 0.05%)</title><rect x="0.1000%" y="117" width="0.0500%" height="15" fill="rgb(235,182,43)" fg:x="2" fg:w="1"/><text x="0.3500%" y="127.50"></text></g><g><title>arvz`parking_lot::condvar::Condvar::notify_one (1 samples, 0.05%)</title><rect x="0.1000%" y="101" width="0.0500%" height="15" fill="rgb(242,16,51)" fg:x="2" fg:w="1"/><text x="0.3500%" y="111.50"></text></g><g><title>arvz`parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.05%)</title><rect x="0.1000%" y="85" width="0.0500%" height="15" fill="rgb(248,9,4)" fg:x="2" fg:w="1"/><text x="0.3500%" y="95.50"></text></g><g><title>arvz`parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.05%)</title><rect x="0.1000%" y="69" width="0.0500%" height="15" fill="rgb(210,31,22)" fg:x="2" fg:w="1"/><text x="0.3500%" y="79.50"></text></g><g><title>arvz`&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.05%)</title><rect x="0.1000%" y="53" width="0.0500%" height="15" fill="rgb(239,54,39)" fg:x="2" fg:w="1"/><text x="0.3500%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.05%)</title><rect x="0.1000%" y="37" width="0.0500%" height="15" fill="rgb(230,99,41)" fg:x="2" fg:w="1"/><text x="0.3500%" y="47.50"></text></g><g><title>arvz`std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.05%)</title><rect x="0.1500%" y="1621" width="0.0500%" height="15" fill="rgb(253,106,12)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1631.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (1 samples, 0.05%)</title><rect x="0.1500%" y="1605" width="0.0500%" height="15" fill="rgb(213,46,41)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1615.50"></text></g><g><title>arvz`arvz::main (1 samples, 0.05%)</title><rect x="0.1500%" y="1589" width="0.0500%" height="15" fill="rgb(215,133,35)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1599.50"></text></g><g><title>arvz`tokio::runtime::runtime::Runtime::block_on (1 samples, 0.05%)</title><rect x="0.1500%" y="1573" width="0.0500%" height="15" fill="rgb(213,28,5)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1583.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::MultiThread::block_on (1 samples, 0.05%)</title><rect x="0.1500%" y="1557" width="0.0500%" height="15" fill="rgb(215,77,49)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1567.50"></text></g><g><title>arvz`tokio::runtime::context::runtime::enter_runtime (1 samples, 0.05%)</title><rect x="0.1500%" y="1541" width="0.0500%" height="15" fill="rgb(248,100,22)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1551.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="1525" width="0.0500%" height="15" fill="rgb(208,67,9)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1535.50"></text></g><g><title>arvz`tokio::runtime::context::blocking::BlockingRegionGuard::block_on (1 samples, 0.05%)</title><rect x="0.1500%" y="1509" width="0.0500%" height="15" fill="rgb(219,133,21)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1519.50"></text></g><g><title>arvz`tokio::runtime::park::CachedParkThread::block_on (1 samples, 0.05%)</title><rect x="0.1500%" y="1493" width="0.0500%" height="15" fill="rgb(246,46,29)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1503.50"></text></g><g><title>arvz`tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="1477" width="0.0500%" height="15" fill="rgb(246,185,52)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1487.50"></text></g><g><title>arvz`arvz::main::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="1461" width="0.0500%" height="15" fill="rgb(252,136,11)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1471.50"></text></g><g><title>arvz`arvz::tokio_main::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="1445" width="0.0500%" height="15" fill="rgb(219,138,53)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1455.50"></text></g><g><title>arvz`arvz::utils::initialize_logging (1 samples, 0.05%)</title><rect x="0.1500%" y="1429" width="0.0500%" height="15" fill="rgb(211,51,23)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1439.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::EnvFilter::from_default_env (1 samples, 0.05%)</title><rect x="0.1500%" y="1413" width="0.0500%" height="15" fill="rgb(247,221,28)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1423.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::builder::Builder::from_env_lossy (1 samples, 0.05%)</title><rect x="0.1500%" y="1397" width="0.0500%" height="15" fill="rgb(251,222,45)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1407.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::builder::Builder::parse_lossy (1 samples, 0.05%)</title><rect x="0.1500%" y="1381" width="0.0500%" height="15" fill="rgb(217,162,53)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1391.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::builder::Builder::from_directives (1 samples, 0.05%)</title><rect x="0.1500%" y="1365" width="0.0500%" height="15" fill="rgb(229,93,14)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1375.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::collect (1 samples, 0.05%)</title><rect x="0.1500%" y="1349" width="0.0500%" height="15" fill="rgb(209,67,49)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1359.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="0.1500%" y="1333" width="0.0500%" height="15" fill="rgb(213,87,29)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1343.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="0.1500%" y="1317" width="0.0500%" height="15" fill="rgb(205,151,52)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1327.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="0.1500%" y="1301" width="0.0500%" height="15" fill="rgb(253,215,39)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1311.50"></text></g><g><title>arvz`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="0.1500%" y="1285" width="0.0500%" height="15" fill="rgb(221,220,41)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1295.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::find_map (1 samples, 0.05%)</title><rect x="0.1500%" y="1269" width="0.0500%" height="15" fill="rgb(218,133,21)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1279.50"></text></g><g><title>arvz`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.05%)</title><rect x="0.1500%" y="1253" width="0.0500%" height="15" fill="rgb(221,193,43)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1263.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.05%)</title><rect x="0.1500%" y="1237" width="0.0500%" height="15" fill="rgb(240,128,52)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1247.50"></text></g><g><title>arvz`core::iter::adapters::filter::filter_try_fold::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="1221" width="0.0500%" height="15" fill="rgb(253,114,12)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1231.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="1205" width="0.0500%" height="15" fill="rgb(215,223,47)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1215.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.05%)</title><rect x="0.1500%" y="1189" width="0.0500%" height="15" fill="rgb(248,225,23)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1199.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::builder::Builder::parse_lossy::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="1173" width="0.0500%" height="15" fill="rgb(250,108,0)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1183.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::directive::Directive::parse (1 samples, 0.05%)</title><rect x="0.1500%" y="1157" width="0.0500%" height="15" fill="rgb(228,208,7)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1167.50"></text></g><g><title>arvz`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="0.1500%" y="1141" width="0.0500%" height="15" fill="rgb(244,45,10)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1151.50"></text></g><g><title>arvz`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.05%)</title><rect x="0.1500%" y="1125" width="0.0500%" height="15" fill="rgb(207,125,25)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1135.50"></text></g><g><title>arvz`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.05%)</title><rect x="0.1500%" y="1109" width="0.0500%" height="15" fill="rgb(210,195,18)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1119.50"></text></g><g><title>arvz`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.05%)</title><rect x="0.1500%" y="1093" width="0.0500%" height="15" fill="rgb(249,80,12)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1103.50"></text></g><g><title>arvz`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.05%)</title><rect x="0.1500%" y="1077" width="0.0500%" height="15" fill="rgb(221,65,9)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1087.50"></text></g><g><title>arvz`once_cell::imp::initialize_or_wait (1 samples, 0.05%)</title><rect x="0.1500%" y="1061" width="0.0500%" height="15" fill="rgb(235,49,36)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1071.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.05%)</title><rect x="0.1500%" y="1045" width="0.0500%" height="15" fill="rgb(225,32,20)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1055.50"></text></g><g><title>arvz`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="1029" width="0.0500%" height="15" fill="rgb(215,141,46)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1039.50"></text></g><g><title>arvz`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="1013" width="0.0500%" height="15" fill="rgb(250,160,47)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1023.50"></text></g><g><title>arvz`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="997" width="0.0500%" height="15" fill="rgb(216,222,40)" fg:x="3" fg:w="1"/><text x="0.4000%" y="1007.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (1 samples, 0.05%)</title><rect x="0.1500%" y="981" width="0.0500%" height="15" fill="rgb(234,217,39)" fg:x="3" fg:w="1"/><text x="0.4000%" y="991.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (1 samples, 0.05%)</title><rect x="0.1500%" y="965" width="0.0500%" height="15" fill="rgb(207,178,40)" fg:x="3" fg:w="1"/><text x="0.4000%" y="975.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::directive::Directive::parse::DIRECTIVE_RE::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="949" width="0.0500%" height="15" fill="rgb(221,136,13)" fg:x="3" fg:w="1"/><text x="0.4000%" y="959.50"></text></g><g><title>arvz`regex::regex::string::Regex::new (1 samples, 0.05%)</title><rect x="0.1500%" y="933" width="0.0500%" height="15" fill="rgb(249,199,10)" fg:x="3" fg:w="1"/><text x="0.4000%" y="943.50"></text></g><g><title>arvz`regex::builders::string::RegexBuilder::build (1 samples, 0.05%)</title><rect x="0.1500%" y="917" width="0.0500%" height="15" fill="rgb(249,222,13)" fg:x="3" fg:w="1"/><text x="0.4000%" y="927.50"></text></g><g><title>arvz`regex::builders::Builder::build_one_string (1 samples, 0.05%)</title><rect x="0.1500%" y="901" width="0.0500%" height="15" fill="rgb(244,185,38)" fg:x="3" fg:w="1"/><text x="0.4000%" y="911.50"></text></g><g><title>arvz`regex_automata::meta::regex::Builder::build (1 samples, 0.05%)</title><rect x="0.1500%" y="885" width="0.0500%" height="15" fill="rgb(236,202,9)" fg:x="3" fg:w="1"/><text x="0.4000%" y="895.50"></text></g><g><title>arvz`regex_automata::meta::regex::Builder::build_many (1 samples, 0.05%)</title><rect x="0.1500%" y="869" width="0.0500%" height="15" fill="rgb(250,229,37)" fg:x="3" fg:w="1"/><text x="0.4000%" y="879.50"></text></g><g><title>arvz`regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.05%)</title><rect x="0.1500%" y="853" width="0.0500%" height="15" fill="rgb(206,174,23)" fg:x="3" fg:w="1"/><text x="0.4000%" y="863.50"></text></g><g><title>arvz`regex_automata::meta::strategy::new (1 samples, 0.05%)</title><rect x="0.1500%" y="837" width="0.0500%" height="15" fill="rgb(211,33,43)" fg:x="3" fg:w="1"/><text x="0.4000%" y="847.50"></text></g><g><title>arvz`regex_automata::meta::strategy::Core::new (1 samples, 0.05%)</title><rect x="0.1500%" y="821" width="0.0500%" height="15" fill="rgb(245,58,50)" fg:x="3" fg:w="1"/><text x="0.4000%" y="831.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.05%)</title><rect x="0.1500%" y="805" width="0.0500%" height="15" fill="rgb(244,68,36)" fg:x="3" fg:w="1"/><text x="0.4000%" y="815.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.05%)</title><rect x="0.1500%" y="789" width="0.0500%" height="15" fill="rgb(232,229,15)" fg:x="3" fg:w="1"/><text x="0.4000%" y="799.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.05%)</title><rect x="0.1500%" y="773" width="0.0500%" height="15" fill="rgb(254,30,23)" fg:x="3" fg:w="1"/><text x="0.4000%" y="783.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="0.1500%" y="757" width="0.0500%" height="15" fill="rgb(235,160,14)" fg:x="3" fg:w="1"/><text x="0.4000%" y="767.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="0.1500%" y="741" width="0.0500%" height="15" fill="rgb(212,155,44)" fg:x="3" fg:w="1"/><text x="0.4000%" y="751.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::compile::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="725" width="0.0500%" height="15" fill="rgb(226,2,50)" fg:x="3" fg:w="1"/><text x="0.4000%" y="735.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.05%)</title><rect x="0.1500%" y="709" width="0.0500%" height="15" fill="rgb(234,177,6)" fg:x="3" fg:w="1"/><text x="0.4000%" y="719.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="0.1500%" y="693" width="0.0500%" height="15" fill="rgb(217,24,9)" fg:x="3" fg:w="1"/><text x="0.4000%" y="703.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.05%)</title><rect x="0.1500%" y="677" width="0.0500%" height="15" fill="rgb(220,13,46)" fg:x="3" fg:w="1"/><text x="0.4000%" y="687.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="0.1500%" y="661" width="0.0500%" height="15" fill="rgb(239,221,27)" fg:x="3" fg:w="1"/><text x="0.4000%" y="671.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="0.1500%" y="645" width="0.0500%" height="15" fill="rgb(222,198,25)" fg:x="3" fg:w="1"/><text x="0.4000%" y="655.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="629" width="0.0500%" height="15" fill="rgb(211,99,13)" fg:x="3" fg:w="1"/><text x="0.4000%" y="639.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="0.1500%" y="613" width="0.0500%" height="15" fill="rgb(232,111,31)" fg:x="3" fg:w="1"/><text x="0.4000%" y="623.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.05%)</title><rect x="0.1500%" y="597" width="0.0500%" height="15" fill="rgb(245,82,37)" fg:x="3" fg:w="1"/><text x="0.4000%" y="607.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.05%)</title><rect x="0.1500%" y="581" width="0.0500%" height="15" fill="rgb(227,149,46)" fg:x="3" fg:w="1"/><text x="0.4000%" y="591.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="0.1500%" y="565" width="0.0500%" height="15" fill="rgb(218,36,50)" fg:x="3" fg:w="1"/><text x="0.4000%" y="575.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="0.1500%" y="549" width="0.0500%" height="15" fill="rgb(226,80,48)" fg:x="3" fg:w="1"/><text x="0.4000%" y="559.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="533" width="0.0500%" height="15" fill="rgb(238,224,15)" fg:x="3" fg:w="1"/><text x="0.4000%" y="543.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="0.1500%" y="517" width="0.0500%" height="15" fill="rgb(241,136,10)" fg:x="3" fg:w="1"/><text x="0.4000%" y="527.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.05%)</title><rect x="0.1500%" y="501" width="0.0500%" height="15" fill="rgb(208,32,45)" fg:x="3" fg:w="1"/><text x="0.4000%" y="511.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="0.1500%" y="485" width="0.0500%" height="15" fill="rgb(207,135,9)" fg:x="3" fg:w="1"/><text x="0.4000%" y="495.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="0.1500%" y="469" width="0.0500%" height="15" fill="rgb(206,86,44)" fg:x="3" fg:w="1"/><text x="0.4000%" y="479.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="453" width="0.0500%" height="15" fill="rgb(245,177,15)" fg:x="3" fg:w="1"/><text x="0.4000%" y="463.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="0.1500%" y="437" width="0.0500%" height="15" fill="rgb(206,64,50)" fg:x="3" fg:w="1"/><text x="0.4000%" y="447.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_repetition (1 samples, 0.05%)</title><rect x="0.1500%" y="421" width="0.0500%" height="15" fill="rgb(234,36,40)" fg:x="3" fg:w="1"/><text x="0.4000%" y="431.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_bounded (1 samples, 0.05%)</title><rect x="0.1500%" y="405" width="0.0500%" height="15" fill="rgb(213,64,8)" fg:x="3" fg:w="1"/><text x="0.4000%" y="415.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_exactly (1 samples, 0.05%)</title><rect x="0.1500%" y="389" width="0.0500%" height="15" fill="rgb(210,75,36)" fg:x="3" fg:w="1"/><text x="0.4000%" y="399.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.05%)</title><rect x="0.1500%" y="373" width="0.0500%" height="15" fill="rgb(229,88,21)" fg:x="3" fg:w="1"/><text x="0.4000%" y="383.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="0.1500%" y="357" width="0.0500%" height="15" fill="rgb(252,204,47)" fg:x="3" fg:w="1"/><text x="0.4000%" y="367.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="0.1500%" y="341" width="0.0500%" height="15" fill="rgb(208,77,27)" fg:x="3" fg:w="1"/><text x="0.4000%" y="351.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_exactly::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="325" width="0.0500%" height="15" fill="rgb(221,76,26)" fg:x="3" fg:w="1"/><text x="0.4000%" y="335.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="0.1500%" y="309" width="0.0500%" height="15" fill="rgb(225,139,18)" fg:x="3" fg:w="1"/><text x="0.4000%" y="319.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.05%)</title><rect x="0.1500%" y="293" width="0.0500%" height="15" fill="rgb(230,137,11)" fg:x="3" fg:w="1"/><text x="0.4000%" y="303.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.05%)</title><rect x="0.1500%" y="277" width="0.0500%" height="15" fill="rgb(212,28,1)" fg:x="3" fg:w="1"/><text x="0.4000%" y="287.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="0.1500%" y="261" width="0.0500%" height="15" fill="rgb(248,164,17)" fg:x="3" fg:w="1"/><text x="0.4000%" y="271.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="0.1500%" y="245" width="0.0500%" height="15" fill="rgb(222,171,42)" fg:x="3" fg:w="1"/><text x="0.4000%" y="255.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::_{{closure}} (1 samples, 0.05%)</title><rect x="0.1500%" y="229" width="0.0500%" height="15" fill="rgb(243,84,45)" fg:x="3" fg:w="1"/><text x="0.4000%" y="239.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="0.1500%" y="213" width="0.0500%" height="15" fill="rgb(252,49,23)" fg:x="3" fg:w="1"/><text x="0.4000%" y="223.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.05%)</title><rect x="0.1500%" y="197" width="0.0500%" height="15" fill="rgb(215,19,7)" fg:x="3" fg:w="1"/><text x="0.4000%" y="207.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="0.1500%" y="181" width="0.0500%" height="15" fill="rgb(238,81,41)" fg:x="3" fg:w="1"/><text x="0.4000%" y="191.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_repetition (1 samples, 0.05%)</title><rect x="0.1500%" y="165" width="0.0500%" height="15" fill="rgb(210,199,37)" fg:x="3" fg:w="1"/><text x="0.4000%" y="175.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.05%)</title><rect x="0.1500%" y="149" width="0.0500%" height="15" fill="rgb(244,192,49)" fg:x="3" fg:w="1"/><text x="0.4000%" y="159.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="0.1500%" y="133" width="0.0500%" height="15" fill="rgb(226,211,11)" fg:x="3" fg:w="1"/><text x="0.4000%" y="143.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.05%)</title><rect x="0.1500%" y="117" width="0.0500%" height="15" fill="rgb(236,162,54)" fg:x="3" fg:w="1"/><text x="0.4000%" y="127.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Utf8Compiler::add (1 samples, 0.05%)</title><rect x="0.1500%" y="101" width="0.0500%" height="15" fill="rgb(220,229,9)" fg:x="3" fg:w="1"/><text x="0.4000%" y="111.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::zip (1 samples, 0.05%)</title><rect x="0.1500%" y="85" width="0.0500%" height="15" fill="rgb(250,87,22)" fg:x="3" fg:w="1"/><text x="0.4000%" y="95.50"></text></g><g><title>arvz`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.05%)</title><rect x="0.1500%" y="69" width="0.0500%" height="15" fill="rgb(239,43,17)" fg:x="3" fg:w="1"/><text x="0.4000%" y="79.50"></text></g><g><title>arvz`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.05%)</title><rect x="0.1500%" y="53" width="0.0500%" height="15" fill="rgb(231,177,25)" fg:x="3" fg:w="1"/><text x="0.4000%" y="63.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.05%)</title><rect x="0.1500%" y="37" width="0.0500%" height="15" fill="rgb(219,179,1)" fg:x="3" fg:w="1"/><text x="0.4000%" y="47.50"></text></g><g><title>arvz`tokio::runtime::blocking::pool::Inner::run (1 samples, 0.05%)</title><rect x="0.2000%" y="1621" width="0.0500%" height="15" fill="rgb(238,219,53)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1631.50"></text></g><g><title>arvz`tokio::runtime::blocking::pool::Task::run (1 samples, 0.05%)</title><rect x="0.2000%" y="1605" width="0.0500%" height="15" fill="rgb(232,167,36)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1615.50"></text></g><g><title>arvz`tokio::runtime::task::UnownedTask&lt;S&gt;::run (1 samples, 0.05%)</title><rect x="0.2000%" y="1589" width="0.0500%" height="15" fill="rgb(244,19,51)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1599.50"></text></g><g><title>arvz`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="1573" width="0.0500%" height="15" fill="rgb(224,6,22)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1583.50"></text></g><g><title>arvz`tokio::runtime::task::raw::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="1557" width="0.0500%" height="15" fill="rgb(224,145,5)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1567.50"></text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="1541" width="0.0500%" height="15" fill="rgb(234,130,49)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1551.50"></text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.05%)</title><rect x="0.2000%" y="1525" width="0.0500%" height="15" fill="rgb(254,6,2)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1535.50"></text></g><g><title>arvz`tokio::runtime::task::harness::poll_future (1 samples, 0.05%)</title><rect x="0.2000%" y="1509" width="0.0500%" height="15" fill="rgb(208,96,46)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1519.50"></text></g><g><title>arvz`std::panic::catch_unwind (1 samples, 0.05%)</title><rect x="0.2000%" y="1493" width="0.0500%" height="15" fill="rgb(239,3,39)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1503.50"></text></g><g><title>arvz`std::panicking::try (1 samples, 0.05%)</title><rect x="0.2000%" y="1477" width="0.0500%" height="15" fill="rgb(233,210,1)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1487.50"></text></g><g><title>arvz`__rust_try (1 samples, 0.05%)</title><rect x="0.2000%" y="1461" width="0.0500%" height="15" fill="rgb(244,137,37)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1471.50"></text></g><g><title>arvz`std::panicking::try::do_call (1 samples, 0.05%)</title><rect x="0.2000%" y="1445" width="0.0500%" height="15" fill="rgb(240,136,2)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1455.50"></text></g><g><title>arvz`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.05%)</title><rect x="0.2000%" y="1429" width="0.0500%" height="15" fill="rgb(239,18,37)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1439.50"></text></g><g><title>arvz`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="1413" width="0.0500%" height="15" fill="rgb(218,185,22)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1423.50"></text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="1397" width="0.0500%" height="15" fill="rgb(225,218,4)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1407.50"></text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="1381" width="0.0500%" height="15" fill="rgb(230,182,32)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1391.50"></text></g><g><title>arvz`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="1365" width="0.0500%" height="15" fill="rgb(242,56,43)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1375.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="1349" width="0.0500%" height="15" fill="rgb(233,99,24)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1359.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run (1 samples, 0.05%)</title><rect x="0.2000%" y="1333" width="0.0500%" height="15" fill="rgb(234,209,42)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1343.50"></text></g><g><title>arvz`tokio::runtime::context::runtime::enter_runtime (1 samples, 0.05%)</title><rect x="0.2000%" y="1317" width="0.0500%" height="15" fill="rgb(227,7,12)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1327.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="1301" width="0.0500%" height="15" fill="rgb(245,203,43)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1311.50"></text></g><g><title>arvz`tokio::runtime::context::set_scheduler (1 samples, 0.05%)</title><rect x="0.2000%" y="1285" width="0.0500%" height="15" fill="rgb(238,205,33)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1295.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="0.2000%" y="1269" width="0.0500%" height="15" fill="rgb(231,56,7)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1279.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="0.2000%" y="1253" width="0.0500%" height="15" fill="rgb(244,186,29)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1263.50"></text></g><g><title>arvz`tokio::runtime::context::set_scheduler::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="1237" width="0.0500%" height="15" fill="rgb(234,111,31)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1247.50"></text></g><g><title>arvz`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1 samples, 0.05%)</title><rect x="0.2000%" y="1221" width="0.0500%" height="15" fill="rgb(241,149,10)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1231.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="1205" width="0.0500%" height="15" fill="rgb(249,206,44)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1215.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run (1 samples, 0.05%)</title><rect x="0.2000%" y="1189" width="0.0500%" height="15" fill="rgb(251,153,30)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1199.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1 samples, 0.05%)</title><rect x="0.2000%" y="1173" width="0.0500%" height="15" fill="rgb(239,152,38)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1183.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="1157" width="0.0500%" height="15" fill="rgb(249,139,47)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1167.50"></text></g><g><title>arvz`tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.05%)</title><rect x="0.2000%" y="1141" width="0.0500%" height="15" fill="rgb(244,64,35)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1151.50"></text></g><g><title>arvz`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="1125" width="0.0500%" height="15" fill="rgb(216,46,15)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1135.50"></text></g><g><title>arvz`tokio::runtime::task::raw::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="1109" width="0.0500%" height="15" fill="rgb(250,74,19)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1119.50"></text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="1093" width="0.0500%" height="15" fill="rgb(249,42,33)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1103.50"></text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.05%)</title><rect x="0.2000%" y="1077" width="0.0500%" height="15" fill="rgb(242,149,17)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1087.50"></text></g><g><title>arvz`tokio::runtime::task::harness::poll_future (1 samples, 0.05%)</title><rect x="0.2000%" y="1061" width="0.0500%" height="15" fill="rgb(244,29,21)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1071.50"></text></g><g><title>arvz`std::panic::catch_unwind (1 samples, 0.05%)</title><rect x="0.2000%" y="1045" width="0.0500%" height="15" fill="rgb(220,130,37)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1055.50"></text></g><g><title>arvz`std::panicking::try (1 samples, 0.05%)</title><rect x="0.2000%" y="1029" width="0.0500%" height="15" fill="rgb(211,67,2)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1039.50"></text></g><g><title>arvz`__rust_try (1 samples, 0.05%)</title><rect x="0.2000%" y="1013" width="0.0500%" height="15" fill="rgb(235,68,52)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1023.50"></text></g><g><title>arvz`std::panicking::try::do_call (1 samples, 0.05%)</title><rect x="0.2000%" y="997" width="0.0500%" height="15" fill="rgb(246,142,3)" fg:x="4" fg:w="1"/><text x="0.4500%" y="1007.50"></text></g><g><title>arvz`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.05%)</title><rect x="0.2000%" y="981" width="0.0500%" height="15" fill="rgb(241,25,7)" fg:x="4" fg:w="1"/><text x="0.4500%" y="991.50"></text></g><g><title>arvz`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="965" width="0.0500%" height="15" fill="rgb(242,119,39)" fg:x="4" fg:w="1"/><text x="0.4500%" y="975.50"></text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="949" width="0.0500%" height="15" fill="rgb(241,98,45)" fg:x="4" fg:w="1"/><text x="0.4500%" y="959.50"></text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="933" width="0.0500%" height="15" fill="rgb(254,28,30)" fg:x="4" fg:w="1"/><text x="0.4500%" y="943.50"></text></g><g><title>arvz`arvz::app::App::run::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="917" width="0.0500%" height="15" fill="rgb(241,142,54)" fg:x="4" fg:w="1"/><text x="0.4500%" y="927.50"></text></g><g><title>arvz`arvz::context_data::ContextData::refresh::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="901" width="0.0500%" height="15" fill="rgb(222,85,15)" fg:x="4" fg:w="1"/><text x="0.4500%" y="911.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="885" width="0.0500%" height="15" fill="rgb(210,85,47)" fg:x="4" fg:w="1"/><text x="0.4500%" y="895.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="869" width="0.0500%" height="15" fill="rgb(224,206,25)" fg:x="4" fg:w="1"/><text x="0.4500%" y="879.50"></text></g><g><title>arvz`&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="853" width="0.0500%" height="15" fill="rgb(243,201,19)" fg:x="4" fg:w="1"/><text x="0.4500%" y="863.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="837" width="0.0500%" height="15" fill="rgb(236,59,4)" fg:x="4" fg:w="1"/><text x="0.4500%" y="847.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::send_request::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="821" width="0.0500%" height="15" fill="rgb(254,179,45)" fg:x="4" fg:w="1"/><text x="0.4500%" y="831.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::connection_for::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="805" width="0.0500%" height="15" fill="rgb(226,14,10)" fg:x="4" fg:w="1"/><text x="0.4500%" y="815.50"></text></g><g><title>arvz`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="789" width="0.0500%" height="15" fill="rgb(244,27,41)" fg:x="4" fg:w="1"/><text x="0.4500%" y="799.50"></text></g><g><title>arvz`futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.05%)</title><rect x="0.2000%" y="773" width="0.0500%" height="15" fill="rgb(235,35,32)" fg:x="4" fg:w="1"/><text x="0.4500%" y="783.50"></text></g><g><title>arvz`&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="757" width="0.0500%" height="15" fill="rgb(218,68,31)" fg:x="4" fg:w="1"/><text x="0.4500%" y="767.50"></text></g><g><title>arvz`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="741" width="0.0500%" height="15" fill="rgb(207,120,37)" fg:x="4" fg:w="1"/><text x="0.4500%" y="751.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="725" width="0.0500%" height="15" fill="rgb(227,98,0)" fg:x="4" fg:w="1"/><text x="0.4500%" y="735.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="709" width="0.0500%" height="15" fill="rgb(207,7,3)" fg:x="4" fg:w="1"/><text x="0.4500%" y="719.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="693" width="0.0500%" height="15" fill="rgb(206,98,19)" fg:x="4" fg:w="1"/><text x="0.4500%" y="703.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="0.2000%" y="677" width="0.0500%" height="15" fill="rgb(217,5,26)" fg:x="4" fg:w="1"/><text x="0.4500%" y="687.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="661" width="0.0500%" height="15" fill="rgb(235,190,38)" fg:x="4" fg:w="1"/><text x="0.4500%" y="671.50"></text></g><g><title>arvz`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="645" width="0.0500%" height="15" fill="rgb(247,86,24)" fg:x="4" fg:w="1"/><text x="0.4500%" y="655.50"></text></g><g><title>arvz`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="629" width="0.0500%" height="15" fill="rgb(205,101,16)" fg:x="4" fg:w="1"/><text x="0.4500%" y="639.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="613" width="0.0500%" height="15" fill="rgb(246,168,33)" fg:x="4" fg:w="1"/><text x="0.4500%" y="623.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="0.2000%" y="597" width="0.0500%" height="15" fill="rgb(231,114,1)" fg:x="4" fg:w="1"/><text x="0.4500%" y="607.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="581" width="0.0500%" height="15" fill="rgb(207,184,53)" fg:x="4" fg:w="1"/><text x="0.4500%" y="591.50"></text></g><g><title>arvz`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="565" width="0.0500%" height="15" fill="rgb(224,95,51)" fg:x="4" fg:w="1"/><text x="0.4500%" y="575.50"></text></g><g><title>arvz`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="549" width="0.0500%" height="15" fill="rgb(212,188,45)" fg:x="4" fg:w="1"/><text x="0.4500%" y="559.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="533" width="0.0500%" height="15" fill="rgb(223,154,38)" fg:x="4" fg:w="1"/><text x="0.4500%" y="543.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="0.2000%" y="517" width="0.0500%" height="15" fill="rgb(251,22,52)" fg:x="4" fg:w="1"/><text x="0.4500%" y="527.50"></text></g><g><title>arvz`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="501" width="0.0500%" height="15" fill="rgb(229,209,22)" fg:x="4" fg:w="1"/><text x="0.4500%" y="511.50"></text></g><g><title>arvz`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="485" width="0.0500%" height="15" fill="rgb(234,138,34)" fg:x="4" fg:w="1"/><text x="0.4500%" y="495.50"></text></g><g><title>arvz`reqwest::connect::with_timeout::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="469" width="0.0500%" height="15" fill="rgb(212,95,11)" fg:x="4" fg:w="1"/><text x="0.4500%" y="479.50"></text></g><g><title>arvz`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="453" width="0.0500%" height="15" fill="rgb(240,179,47)" fg:x="4" fg:w="1"/><text x="0.4500%" y="463.50"></text></g><g><title>arvz`&lt;hyper_tls::client::HttpsConnecting&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="437" width="0.0500%" height="15" fill="rgb(240,163,11)" fg:x="4" fg:w="1"/><text x="0.4500%" y="447.50"></text></g><g><title>arvz`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="421" width="0.0500%" height="15" fill="rgb(236,37,12)" fg:x="4" fg:w="1"/><text x="0.4500%" y="431.50"></text></g><g><title>arvz`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="405" width="0.0500%" height="15" fill="rgb(232,164,16)" fg:x="4" fg:w="1"/><text x="0.4500%" y="415.50"></text></g><g><title>arvz`tokio_native_tls::TlsConnector::connect::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="389" width="0.0500%" height="15" fill="rgb(244,205,15)" fg:x="4" fg:w="1"/><text x="0.4500%" y="399.50"></text></g><g><title>arvz`tokio_native_tls::handshake::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2000%" y="373" width="0.0500%" height="15" fill="rgb(223,117,47)" fg:x="4" fg:w="1"/><text x="0.4500%" y="383.50"></text></g><g><title>arvz`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2000%" y="357" width="0.0500%" height="15" fill="rgb(244,107,35)" fg:x="4" fg:w="1"/><text x="0.4500%" y="367.50"></text></g><g><title>arvz`native_tls::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 0.05%)</title><rect x="0.2000%" y="341" width="0.0500%" height="15" fill="rgb(205,140,8)" fg:x="4" fg:w="1"/><text x="0.4500%" y="351.50"></text></g><g><title>arvz`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 0.05%)</title><rect x="0.2000%" y="325" width="0.0500%" height="15" fill="rgb(228,84,46)" fg:x="4" fg:w="1"/><text x="0.4500%" y="335.50"></text></g><g><title>arvz`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (1 samples, 0.05%)</title><rect x="0.2000%" y="309" width="0.0500%" height="15" fill="rgb(254,188,9)" fg:x="4" fg:w="1"/><text x="0.4500%" y="319.50"></text></g><g><title>arvz`security_framework::secure_transport::SslStream&lt;S&gt;::handshake (1 samples, 0.05%)</title><rect x="0.2000%" y="293" width="0.0500%" height="15" fill="rgb(206,112,54)" fg:x="4" fg:w="1"/><text x="0.4500%" y="303.50"></text></g><g><title>Security`SSLHandshake (1 samples, 0.05%)</title><rect x="0.2000%" y="277" width="0.0500%" height="15" fill="rgb(216,84,49)" fg:x="4" fg:w="1"/><text x="0.4500%" y="287.50"></text></g><g><title>Security`SSLHandshakeProceed (1 samples, 0.05%)</title><rect x="0.2000%" y="261" width="0.0500%" height="15" fill="rgb(214,194,35)" fg:x="4" fg:w="1"/><text x="0.4500%" y="271.50"></text></g><g><title>libcoretls.dylib`tls_handshake_continue (1 samples, 0.05%)</title><rect x="0.2000%" y="245" width="0.0500%" height="15" fill="rgb(249,28,3)" fg:x="4" fg:w="1"/><text x="0.4500%" y="255.50"></text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (1 samples, 0.05%)</title><rect x="0.2000%" y="229" width="0.0500%" height="15" fill="rgb(222,56,52)" fg:x="4" fg:w="1"/><text x="0.4500%" y="239.50"></text></g><g><title>libcoretls.dylib`SSLPrepareAndQueueMessage (1 samples, 0.05%)</title><rect x="0.2000%" y="213" width="0.0500%" height="15" fill="rgb(245,217,50)" fg:x="4" fg:w="1"/><text x="0.4500%" y="223.50"></text></g><g><title>libcoretls.dylib`SSLEncodeKeyExchange (1 samples, 0.05%)</title><rect x="0.2000%" y="197" width="0.0500%" height="15" fill="rgb(213,201,24)" fg:x="4" fg:w="1"/><text x="0.4500%" y="207.50"></text></g><g><title>libcoretls.dylib`sslEcdhCreateKey (1 samples, 0.05%)</title><rect x="0.2000%" y="181" width="0.0500%" height="15" fill="rgb(248,116,28)" fg:x="4" fg:w="1"/><text x="0.4500%" y="191.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key (1 samples, 0.05%)</title><rect x="0.2000%" y="165" width="0.0500%" height="15" fill="rgb(219,72,43)" fg:x="4" fg:w="1"/><text x="0.4500%" y="175.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips (1 samples, 0.05%)</title><rect x="0.2000%" y="149" width="0.0500%" height="15" fill="rgb(209,138,14)" fg:x="4" fg:w="1"/><text x="0.4500%" y="159.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips_ws (1 samples, 0.05%)</title><rect x="0.2000%" y="133" width="0.0500%" height="15" fill="rgb(222,18,33)" fg:x="4" fg:w="1"/><text x="0.4500%" y="143.50"></text></g><g><title>libcorecrypto.dylib`ccec_pairwise_consistency_check_ws (1 samples, 0.05%)</title><rect x="0.2000%" y="117" width="0.0500%" height="15" fill="rgb(213,199,7)" fg:x="4" fg:w="1"/><text x="0.4500%" y="127.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_ws (1 samples, 0.05%)</title><rect x="0.2000%" y="101" width="0.0500%" height="15" fill="rgb(250,110,10)" fg:x="4" fg:w="1"/><text x="0.4500%" y="111.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_inner_ws (1 samples, 0.05%)</title><rect x="0.2000%" y="85" width="0.0500%" height="15" fill="rgb(248,123,6)" fg:x="4" fg:w="1"/><text x="0.4500%" y="95.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (1 samples, 0.05%)</title><rect x="0.2000%" y="69" width="0.0500%" height="15" fill="rgb(206,91,31)" fg:x="4" fg:w="1"/><text x="0.4500%" y="79.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_default_ws (1 samples, 0.05%)</title><rect x="0.2000%" y="53" width="0.0500%" height="15" fill="rgb(211,154,13)" fg:x="4" fg:w="1"/><text x="0.4500%" y="63.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (1 samples, 0.05%)</title><rect x="0.2000%" y="37" width="0.0500%" height="15" fill="rgb(225,148,7)" fg:x="4" fg:w="1"/><text x="0.4500%" y="47.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1621" width="0.0500%" height="15" fill="rgb(220,160,43)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1631.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run (1 samples, 0.05%)</title><rect x="0.2500%" y="1605" width="0.0500%" height="15" fill="rgb(213,52,39)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1615.50"></text></g><g><title>arvz`tokio::runtime::context::runtime::enter_runtime (1 samples, 0.05%)</title><rect x="0.2500%" y="1589" width="0.0500%" height="15" fill="rgb(243,137,7)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1599.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1573" width="0.0500%" height="15" fill="rgb(230,79,13)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1583.50"></text></g><g><title>arvz`tokio::runtime::context::set_scheduler (1 samples, 0.05%)</title><rect x="0.2500%" y="1557" width="0.0500%" height="15" fill="rgb(247,105,23)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1567.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="0.2500%" y="1541" width="0.0500%" height="15" fill="rgb(223,179,41)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1551.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="0.2500%" y="1525" width="0.0500%" height="15" fill="rgb(218,9,34)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1535.50"></text></g><g><title>arvz`tokio::runtime::context::set_scheduler::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1509" width="0.0500%" height="15" fill="rgb(222,106,8)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1519.50"></text></g><g><title>arvz`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1 samples, 0.05%)</title><rect x="0.2500%" y="1493" width="0.0500%" height="15" fill="rgb(211,220,0)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1503.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1477" width="0.0500%" height="15" fill="rgb(229,52,16)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1487.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run (1 samples, 0.05%)</title><rect x="0.2500%" y="1461" width="0.0500%" height="15" fill="rgb(212,155,18)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1471.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1 samples, 0.05%)</title><rect x="0.2500%" y="1445" width="0.0500%" height="15" fill="rgb(242,21,14)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1455.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1429" width="0.0500%" height="15" fill="rgb(222,19,48)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1439.50"></text></g><g><title>arvz`tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.05%)</title><rect x="0.2500%" y="1413" width="0.0500%" height="15" fill="rgb(232,45,27)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1423.50"></text></g><g><title>arvz`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="1397" width="0.0500%" height="15" fill="rgb(249,103,42)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1407.50"></text></g><g><title>arvz`tokio::runtime::task::raw::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="1381" width="0.0500%" height="15" fill="rgb(246,81,33)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1391.50"></text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="1365" width="0.0500%" height="15" fill="rgb(252,33,42)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1375.50"></text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.05%)</title><rect x="0.2500%" y="1349" width="0.0500%" height="15" fill="rgb(209,212,41)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1359.50"></text></g><g><title>arvz`tokio::runtime::task::harness::poll_future (1 samples, 0.05%)</title><rect x="0.2500%" y="1333" width="0.0500%" height="15" fill="rgb(207,154,6)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1343.50"></text></g><g><title>arvz`std::panic::catch_unwind (1 samples, 0.05%)</title><rect x="0.2500%" y="1317" width="0.0500%" height="15" fill="rgb(223,64,47)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1327.50"></text></g><g><title>arvz`std::panicking::try (1 samples, 0.05%)</title><rect x="0.2500%" y="1301" width="0.0500%" height="15" fill="rgb(211,161,38)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1311.50"></text></g><g><title>arvz`__rust_try (1 samples, 0.05%)</title><rect x="0.2500%" y="1285" width="0.0500%" height="15" fill="rgb(219,138,40)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1295.50"></text></g><g><title>arvz`std::panicking::try::do_call (1 samples, 0.05%)</title><rect x="0.2500%" y="1269" width="0.0500%" height="15" fill="rgb(241,228,46)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1279.50"></text></g><g><title>arvz`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.05%)</title><rect x="0.2500%" y="1253" width="0.0500%" height="15" fill="rgb(223,209,38)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1263.50"></text></g><g><title>arvz`tokio::runtime::task::harness::poll_future::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1237" width="0.0500%" height="15" fill="rgb(236,164,45)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1247.50"></text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="1221" width="0.0500%" height="15" fill="rgb(231,15,5)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1231.50"></text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1205" width="0.0500%" height="15" fill="rgb(252,35,15)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1215.50"></text></g><g><title>arvz`arvz::app::App::run::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1189" width="0.0500%" height="15" fill="rgb(248,181,18)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1199.50"></text></g><g><title>arvz`arvz::context_data::ContextData::refresh::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1173" width="0.0500%" height="15" fill="rgb(233,39,42)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1183.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="1157" width="0.0500%" height="15" fill="rgb(238,110,33)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1167.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="1141" width="0.0500%" height="15" fill="rgb(233,195,10)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1151.50"></text></g><g><title>arvz`&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="1125" width="0.0500%" height="15" fill="rgb(254,105,3)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1135.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1109" width="0.0500%" height="15" fill="rgb(221,225,9)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1119.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::send_request::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1093" width="0.0500%" height="15" fill="rgb(224,227,45)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1103.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::connection_for::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="1077" width="0.0500%" height="15" fill="rgb(229,198,43)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1087.50"></text></g><g><title>arvz`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="1061" width="0.0500%" height="15" fill="rgb(206,209,35)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1071.50"></text></g><g><title>arvz`futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.05%)</title><rect x="0.2500%" y="1045" width="0.0500%" height="15" fill="rgb(245,195,53)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1055.50"></text></g><g><title>arvz`&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="1029" width="0.0500%" height="15" fill="rgb(240,92,26)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1039.50"></text></g><g><title>arvz`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="1013" width="0.0500%" height="15" fill="rgb(207,40,23)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1023.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="997" width="0.0500%" height="15" fill="rgb(223,111,35)" fg:x="5" fg:w="1"/><text x="0.5000%" y="1007.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="981" width="0.0500%" height="15" fill="rgb(229,147,28)" fg:x="5" fg:w="1"/><text x="0.5000%" y="991.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="965" width="0.0500%" height="15" fill="rgb(211,29,28)" fg:x="5" fg:w="1"/><text x="0.5000%" y="975.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="0.2500%" y="949" width="0.0500%" height="15" fill="rgb(228,72,33)" fg:x="5" fg:w="1"/><text x="0.5000%" y="959.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="933" width="0.0500%" height="15" fill="rgb(205,214,31)" fg:x="5" fg:w="1"/><text x="0.5000%" y="943.50"></text></g><g><title>arvz`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="917" width="0.0500%" height="15" fill="rgb(224,111,15)" fg:x="5" fg:w="1"/><text x="0.5000%" y="927.50"></text></g><g><title>arvz`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="901" width="0.0500%" height="15" fill="rgb(253,21,26)" fg:x="5" fg:w="1"/><text x="0.5000%" y="911.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="885" width="0.0500%" height="15" fill="rgb(245,139,43)" fg:x="5" fg:w="1"/><text x="0.5000%" y="895.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="0.2500%" y="869" width="0.0500%" height="15" fill="rgb(252,170,7)" fg:x="5" fg:w="1"/><text x="0.5000%" y="879.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="853" width="0.0500%" height="15" fill="rgb(231,118,14)" fg:x="5" fg:w="1"/><text x="0.5000%" y="863.50"></text></g><g><title>arvz`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="837" width="0.0500%" height="15" fill="rgb(238,83,0)" fg:x="5" fg:w="1"/><text x="0.5000%" y="847.50"></text></g><g><title>arvz`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="821" width="0.0500%" height="15" fill="rgb(221,39,39)" fg:x="5" fg:w="1"/><text x="0.5000%" y="831.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="805" width="0.0500%" height="15" fill="rgb(222,119,46)" fg:x="5" fg:w="1"/><text x="0.5000%" y="815.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="0.2500%" y="789" width="0.0500%" height="15" fill="rgb(222,165,49)" fg:x="5" fg:w="1"/><text x="0.5000%" y="799.50"></text></g><g><title>arvz`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="773" width="0.0500%" height="15" fill="rgb(219,113,52)" fg:x="5" fg:w="1"/><text x="0.5000%" y="783.50"></text></g><g><title>arvz`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="757" width="0.0500%" height="15" fill="rgb(214,7,15)" fg:x="5" fg:w="1"/><text x="0.5000%" y="767.50"></text></g><g><title>arvz`reqwest::connect::with_timeout::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="741" width="0.0500%" height="15" fill="rgb(235,32,4)" fg:x="5" fg:w="1"/><text x="0.5000%" y="751.50"></text></g><g><title>arvz`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="725" width="0.0500%" height="15" fill="rgb(238,90,54)" fg:x="5" fg:w="1"/><text x="0.5000%" y="735.50"></text></g><g><title>arvz`&lt;hyper_tls::client::HttpsConnecting&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="709" width="0.0500%" height="15" fill="rgb(213,208,19)" fg:x="5" fg:w="1"/><text x="0.5000%" y="719.50"></text></g><g><title>arvz`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="693" width="0.0500%" height="15" fill="rgb(233,156,4)" fg:x="5" fg:w="1"/><text x="0.5000%" y="703.50"></text></g><g><title>arvz`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="677" width="0.0500%" height="15" fill="rgb(207,194,5)" fg:x="5" fg:w="1"/><text x="0.5000%" y="687.50"></text></g><g><title>arvz`tokio_native_tls::TlsConnector::connect::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="661" width="0.0500%" height="15" fill="rgb(206,111,30)" fg:x="5" fg:w="1"/><text x="0.5000%" y="671.50"></text></g><g><title>arvz`tokio_native_tls::handshake::_{{closure}} (1 samples, 0.05%)</title><rect x="0.2500%" y="645" width="0.0500%" height="15" fill="rgb(243,70,54)" fg:x="5" fg:w="1"/><text x="0.5000%" y="655.50"></text></g><g><title>arvz`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.2500%" y="629" width="0.0500%" height="15" fill="rgb(242,28,8)" fg:x="5" fg:w="1"/><text x="0.5000%" y="639.50"></text></g><g><title>arvz`native_tls::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 0.05%)</title><rect x="0.2500%" y="613" width="0.0500%" height="15" fill="rgb(219,106,18)" fg:x="5" fg:w="1"/><text x="0.5000%" y="623.50"></text></g><g><title>arvz`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 0.05%)</title><rect x="0.2500%" y="597" width="0.0500%" height="15" fill="rgb(244,222,10)" fg:x="5" fg:w="1"/><text x="0.5000%" y="607.50"></text></g><g><title>arvz`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (1 samples, 0.05%)</title><rect x="0.2500%" y="581" width="0.0500%" height="15" fill="rgb(236,179,52)" fg:x="5" fg:w="1"/><text x="0.5000%" y="591.50"></text></g><g><title>arvz`security_framework::secure_transport::SslStream&lt;S&gt;::handshake (1 samples, 0.05%)</title><rect x="0.2500%" y="565" width="0.0500%" height="15" fill="rgb(213,23,39)" fg:x="5" fg:w="1"/><text x="0.5000%" y="575.50"></text></g><g><title>Security`SSLHandshake (1 samples, 0.05%)</title><rect x="0.2500%" y="549" width="0.0500%" height="15" fill="rgb(238,48,10)" fg:x="5" fg:w="1"/><text x="0.5000%" y="559.50"></text></g><g><title>Security`SSLHandshakeProceed (1 samples, 0.05%)</title><rect x="0.2500%" y="533" width="0.0500%" height="15" fill="rgb(251,196,23)" fg:x="5" fg:w="1"/><text x="0.5000%" y="543.50"></text></g><g><title>libcoretls.dylib`tls_handshake_process (1 samples, 0.05%)</title><rect x="0.2500%" y="517" width="0.0500%" height="15" fill="rgb(250,152,24)" fg:x="5" fg:w="1"/><text x="0.5000%" y="527.50"></text></g><g><title>libcoretls.dylib`SSLProcessHandshakeRecordInner (1 samples, 0.05%)</title><rect x="0.2500%" y="501" width="0.0500%" height="15" fill="rgb(209,150,17)" fg:x="5" fg:w="1"/><text x="0.5000%" y="511.50"></text></g><g><title>Security`tls_handshake_message_callback (1 samples, 0.05%)</title><rect x="0.2500%" y="485" width="0.0500%" height="15" fill="rgb(234,202,34)" fg:x="5" fg:w="1"/><text x="0.5000%" y="495.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_set_peer_pubkey (1 samples, 0.05%)</title><rect x="0.2500%" y="469" width="0.0500%" height="15" fill="rgb(253,148,53)" fg:x="5" fg:w="1"/><text x="0.5000%" y="479.50"></text></g><g><title>Security`SecTrustCopyPublicKey (1 samples, 0.05%)</title><rect x="0.2500%" y="453" width="0.0500%" height="15" fill="rgb(218,129,16)" fg:x="5" fg:w="1"/><text x="0.5000%" y="463.50"></text></g><g><title>Security`SecCertificateCopyPublicKey$LEGACYMAC (1 samples, 0.05%)</title><rect x="0.2500%" y="437" width="0.0500%" height="15" fill="rgb(216,85,19)" fg:x="5" fg:w="1"/><text x="0.5000%" y="447.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::publicKey (1 samples, 0.05%)</title><rect x="0.2500%" y="421" width="0.0500%" height="15" fill="rgb(235,228,7)" fg:x="5" fg:w="1"/><text x="0.5000%" y="431.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::copyFirstFieldValue (1 samples, 0.05%)</title><rect x="0.2500%" y="405" width="0.0500%" height="15" fill="rgb(245,175,0)" fg:x="5" fg:w="1"/><text x="0.5000%" y="415.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::clHandle (1 samples, 0.05%)</title><rect x="0.2500%" y="389" width="0.0500%" height="15" fill="rgb(208,168,36)" fg:x="5" fg:w="1"/><text x="0.5000%" y="399.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::activate (1 samples, 0.05%)</title><rect x="0.2500%" y="373" width="0.0500%" height="15" fill="rgb(246,171,24)" fg:x="5" fg:w="1"/><text x="0.5000%" y="383.50"></text></g><g><title>Security`Security::CssmClient::ModuleImpl::activate (1 samples, 0.05%)</title><rect x="0.2500%" y="357" width="0.0500%" height="15" fill="rgb(215,142,24)" fg:x="5" fg:w="1"/><text x="0.5000%" y="367.50"></text></g><g><title>Security`CSSM_ModuleLoad (1 samples, 0.05%)</title><rect x="0.2500%" y="341" width="0.0500%" height="15" fill="rgb(250,187,7)" fg:x="5" fg:w="1"/><text x="0.5000%" y="351.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::fetch (1 samples, 0.05%)</title><rect x="0.2500%" y="325" width="0.0500%" height="15" fill="rgb(228,66,33)" fg:x="5" fg:w="1"/><text x="0.5000%" y="335.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::startQuery (1 samples, 0.05%)</title><rect x="0.2500%" y="309" width="0.0500%" height="15" fill="rgb(234,215,21)" fg:x="5" fg:w="1"/><text x="0.5000%" y="319.50"></text></g><g><title>Security`Security::MDSClient::Directory::dlGetFirst (1 samples, 0.05%)</title><rect x="0.2500%" y="293" width="0.0500%" height="15" fill="rgb(222,191,20)" fg:x="5" fg:w="1"/><text x="0.5000%" y="303.50"></text></g><g><title>Security`Security::MDSClient::Directory::cdsa (1 samples, 0.05%)</title><rect x="0.2500%" y="277" width="0.0500%" height="15" fill="rgb(245,79,54)" fg:x="5" fg:w="1"/><text x="0.5000%" y="287.50"></text></g><g><title>Security`mds_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (1 samples, 0.05%)</title><rect x="0.2500%" y="261" width="0.0500%" height="15" fill="rgb(240,10,37)" fg:x="5" fg:w="1"/><text x="0.5000%" y="271.50"></text></g><g><title>Security`Security::MDSSession::DbOpen (1 samples, 0.05%)</title><rect x="0.2500%" y="245" width="0.0500%" height="15" fill="rgb(214,192,32)" fg:x="5" fg:w="1"/><text x="0.5000%" y="255.50"></text></g><g><title>Security`Security::MDSSession::updateDataBases (1 samples, 0.05%)</title><rect x="0.2500%" y="229" width="0.0500%" height="15" fill="rgb(209,36,54)" fg:x="5" fg:w="1"/><text x="0.5000%" y="239.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundleDir (1 samples, 0.05%)</title><rect x="0.2500%" y="213" width="0.0500%" height="15" fill="rgb(220,10,11)" fg:x="5" fg:w="1"/><text x="0.5000%" y="223.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundle (1 samples, 0.05%)</title><rect x="0.2500%" y="197" width="0.0500%" height="15" fill="rgb(221,106,17)" fg:x="5" fg:w="1"/><text x="0.5000%" y="207.50"></text></g><g><title>Security`Security::MDSAttrParser::parseAttrs (1 samples, 0.05%)</title><rect x="0.2500%" y="181" width="0.0500%" height="15" fill="rgb(251,142,44)" fg:x="5" fg:w="1"/><text x="0.5000%" y="191.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURLsOfType (1 samples, 0.05%)</title><rect x="0.2500%" y="165" width="0.0500%" height="15" fill="rgb(238,13,15)" fg:x="5" fg:w="1"/><text x="0.5000%" y="175.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.05%)</title><rect x="0.2500%" y="149" width="0.0500%" height="15" fill="rgb(208,107,27)" fg:x="5" fg:w="1"/><text x="0.5000%" y="159.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.05%)</title><rect x="0.2500%" y="133" width="0.0500%" height="15" fill="rgb(205,136,37)" fg:x="5" fg:w="1"/><text x="0.5000%" y="143.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.05%)</title><rect x="0.2500%" y="117" width="0.0500%" height="15" fill="rgb(250,205,27)" fg:x="5" fg:w="1"/><text x="0.5000%" y="127.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.05%)</title><rect x="0.2500%" y="101" width="0.0500%" height="15" fill="rgb(210,80,43)" fg:x="5" fg:w="1"/><text x="0.5000%" y="111.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.05%)</title><rect x="0.2500%" y="85" width="0.0500%" height="15" fill="rgb(247,160,36)" fg:x="5" fg:w="1"/><text x="0.5000%" y="95.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.05%)</title><rect x="0.2500%" y="69" width="0.0500%" height="15" fill="rgb(234,13,49)" fg:x="5" fg:w="1"/><text x="0.5000%" y="79.50"></text></g><g><title>libsystem_c.dylib`readdir (1 samples, 0.05%)</title><rect x="0.2500%" y="53" width="0.0500%" height="15" fill="rgb(234,122,0)" fg:x="5" fg:w="1"/><text x="0.5000%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__getdirentries64 (1 samples, 0.05%)</title><rect x="0.2500%" y="37" width="0.0500%" height="15" fill="rgb(207,146,38)" fg:x="5" fg:w="1"/><text x="0.5000%" y="47.50"></text></g><g><title>arvz`tokio::runtime::builder::Builder::build (1 samples, 0.05%)</title><rect x="0.3000%" y="1493" width="0.0500%" height="15" fill="rgb(207,177,25)" fg:x="6" fg:w="1"/><text x="0.5500%" y="1503.50"></text></g><g><title>arvz`tokio::runtime::builder::Builder::build_threaded_runtime (1 samples, 0.05%)</title><rect x="0.3000%" y="1477" width="0.0500%" height="15" fill="rgb(211,178,42)" fg:x="6" fg:w="1"/><text x="0.5500%" y="1487.50"></text></g><g><title>arvz`tokio::runtime::handle::Handle::enter (1 samples, 0.05%)</title><rect x="0.3000%" y="1461" width="0.0500%" height="15" fill="rgb(230,69,54)" fg:x="6" fg:w="1"/><text x="0.5500%" y="1471.50"></text></g><g><title>arvz`tokio::runtime::context::current::try_set_current (1 samples, 0.05%)</title><rect x="0.3000%" y="1445" width="0.0500%" height="15" fill="rgb(214,135,41)" fg:x="6" fg:w="1"/><text x="0.5500%" y="1455.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="0.3000%" y="1429" width="0.0500%" height="15" fill="rgb(237,67,25)" fg:x="6" fg:w="1"/><text x="0.5500%" y="1439.50"></text></g><g><title>arvz`&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.05%)</title><rect x="0.3500%" y="1397" width="0.0500%" height="15" fill="rgb(222,189,50)" fg:x="7" fg:w="1"/><text x="0.6000%" y="1407.50"></text></g><g><title>arvz`arvz::config::Config::new (1 samples, 0.05%)</title><rect x="0.4000%" y="1333" width="0.0500%" height="15" fill="rgb(245,148,34)" fg:x="8" fg:w="1"/><text x="0.6500%" y="1343.50"></text></g><g><title>arvz`config::builder::ConfigBuilder&lt;config::builder::DefaultState&gt;::build (1 samples, 0.05%)</title><rect x="0.4000%" y="1317" width="0.0500%" height="15" fill="rgb(222,29,6)" fg:x="8" fg:w="1"/><text x="0.6500%" y="1327.50"></text></g><g><title>arvz`config::builder::ConfigBuilder&lt;config::builder::DefaultState&gt;::build_internal (1 samples, 0.05%)</title><rect x="0.4000%" y="1301" width="0.0500%" height="15" fill="rgb(221,189,43)" fg:x="8" fg:w="1"/><text x="0.6500%" y="1311.50"></text></g><g><title>arvz`config::source::Source::collect_to (1 samples, 0.05%)</title><rect x="0.4000%" y="1285" width="0.0500%" height="15" fill="rgb(207,36,27)" fg:x="8" fg:w="1"/><text x="0.6500%" y="1295.50"></text></g><g><title>arvz`&lt;[alloc::boxed::Box&lt;dyn config::source::Source+core::marker::Sync+core::marker::Send&gt;] as config::source::Source&gt;::collect (1 samples, 0.05%)</title><rect x="0.4000%" y="1269" width="0.0500%" height="15" fill="rgb(217,90,24)" fg:x="8" fg:w="1"/><text x="0.6500%" y="1279.50"></text></g><g><title>arvz`config::source::Source::collect_to (1 samples, 0.05%)</title><rect x="0.4000%" y="1253" width="0.0500%" height="15" fill="rgb(224,66,35)" fg:x="8" fg:w="1"/><text x="0.6500%" y="1263.50"></text></g><g><title>arvz`&lt;config::file::File&lt;T,F&gt; as config::source::Source&gt;::collect (1 samples, 0.05%)</title><rect x="0.4000%" y="1237" width="0.0500%" height="15" fill="rgb(221,13,50)" fg:x="8" fg:w="1"/><text x="0.6500%" y="1247.50"></text></g><g><title>arvz`&lt;config::file::source::file::FileSourceFile as config::file::source::FileSource&lt;F&gt;&gt;::resolve (1 samples, 0.05%)</title><rect x="0.4000%" y="1221" width="0.0500%" height="15" fill="rgb(236,68,49)" fg:x="8" fg:w="1"/><text x="0.6500%" y="1231.50"></text></g><g><title>arvz`config::file::source::file::FileSourceFile::find_file (1 samples, 0.05%)</title><rect x="0.4000%" y="1205" width="0.0500%" height="15" fill="rgb(229,146,28)" fg:x="8" fg:w="1"/><text x="0.6500%" y="1215.50"></text></g><g><title>arvz`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.05%)</title><rect x="0.4000%" y="1189" width="0.0500%" height="15" fill="rgb(225,31,38)" fg:x="8" fg:w="1"/><text x="0.6500%" y="1199.50"></text></g><g><title>arvz`arvz::app::App::new::_{{closure}} (2 samples, 0.10%)</title><rect x="0.4000%" y="1349" width="0.1000%" height="15" fill="rgb(250,208,3)" fg:x="8" fg:w="2"/><text x="0.6500%" y="1359.50"></text></g><g><title>arvz`reqwest::async_impl::client::Client::new (1 samples, 0.05%)</title><rect x="0.4500%" y="1333" width="0.0500%" height="15" fill="rgb(246,54,23)" fg:x="9" fg:w="1"/><text x="0.7000%" y="1343.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::decoder::Accepts as core::default::Default&gt;::default (1 samples, 0.05%)</title><rect x="0.4500%" y="1317" width="0.0500%" height="15" fill="rgb(243,76,11)" fg:x="9" fg:w="1"/><text x="0.7000%" y="1327.50"></text></g><g><title>arvz`arvz::components::LinkedComponent::handle_events (1 samples, 0.05%)</title><rect x="0.5000%" y="1333" width="0.0500%" height="15" fill="rgb(245,21,50)" fg:x="10" fg:w="1"/><text x="0.7500%" y="1343.50"></text></g><g><title>arvz`arvz::components::Component::handle_events (1 samples, 0.05%)</title><rect x="0.5000%" y="1317" width="0.0500%" height="15" fill="rgb(228,9,43)" fg:x="10" fg:w="1"/><text x="0.7500%" y="1327.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_constraint (1 samples, 0.05%)</title><rect x="0.5500%" y="1189" width="0.0500%" height="15" fill="rgb(208,100,47)" fg:x="11" fg:w="1"/><text x="0.8000%" y="1199.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::create_row (1 samples, 0.05%)</title><rect x="0.5500%" y="1173" width="0.0500%" height="15" fill="rgb(232,26,8)" fg:x="11" fg:w="1"/><text x="0.8000%" y="1183.50"></text></g><g><title>arvz`cassowary::Row::insert_row (1 samples, 0.05%)</title><rect x="0.5500%" y="1157" width="0.0500%" height="15" fill="rgb(216,166,38)" fg:x="11" fg:w="1"/><text x="0.8000%" y="1167.50"></text></g><g><title>arvz`&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="0.5500%" y="1141" width="0.0500%" height="15" fill="rgb(251,202,51)" fg:x="11" fg:w="1"/><text x="0.8000%" y="1151.50"></text></g><g><title>arvz`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="0.5500%" y="1125" width="0.0500%" height="15" fill="rgb(254,216,34)" fg:x="11" fg:w="1"/><text x="0.8000%" y="1135.50"></text></g><g><title>arvz`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="0.5500%" y="1109" width="0.0500%" height="15" fill="rgb(251,32,27)" fg:x="11" fg:w="1"/><text x="0.8000%" y="1119.50"></text></g><g><title>arvz`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.05%)</title><rect x="0.5500%" y="1093" width="0.0500%" height="15" fill="rgb(208,127,28)" fg:x="11" fg:w="1"/><text x="0.8000%" y="1103.50"></text></g><g><title>arvz`hashbrown::raw::neon::Group::match_full (1 samples, 0.05%)</title><rect x="0.5500%" y="1077" width="0.0500%" height="15" fill="rgb(224,137,22)" fg:x="11" fg:w="1"/><text x="0.8000%" y="1087.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_with_artificial_variable (1 samples, 0.05%)</title><rect x="0.6000%" y="1157" width="0.0500%" height="15" fill="rgb(254,70,32)" fg:x="12" fg:w="1"/><text x="0.8500%" y="1167.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::optimise (1 samples, 0.05%)</title><rect x="0.6000%" y="1141" width="0.0500%" height="15" fill="rgb(229,75,37)" fg:x="12" fg:w="1"/><text x="0.8500%" y="1151.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::substitute (1 samples, 0.05%)</title><rect x="0.6000%" y="1125" width="0.0500%" height="15" fill="rgb(252,64,23)" fg:x="12" fg:w="1"/><text x="0.8500%" y="1135.50"></text></g><g><title>arvz`cassowary::Row::substitute (1 samples, 0.05%)</title><rect x="0.6000%" y="1109" width="0.0500%" height="15" fill="rgb(232,162,48)" fg:x="12" fg:w="1"/><text x="0.8500%" y="1119.50"></text></g><g><title>arvz`cassowary::Row::insert_row (1 samples, 0.05%)</title><rect x="0.6000%" y="1093" width="0.0500%" height="15" fill="rgb(246,160,12)" fg:x="12" fg:w="1"/><text x="0.8500%" y="1103.50"></text></g><g><title>arvz`cassowary::Row::insert_symbol (1 samples, 0.05%)</title><rect x="0.6000%" y="1077" width="0.0500%" height="15" fill="rgb(247,166,0)" fg:x="12" fg:w="1"/><text x="0.8500%" y="1087.50"></text></g><g><title>arvz`std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.05%)</title><rect x="0.6000%" y="1061" width="0.0500%" height="15" fill="rgb(249,219,21)" fg:x="12" fg:w="1"/><text x="0.8500%" y="1071.50"></text></g><g><title>arvz`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.05%)</title><rect x="0.6000%" y="1045" width="0.0500%" height="15" fill="rgb(205,209,3)" fg:x="12" fg:w="1"/><text x="0.8500%" y="1055.50"></text></g><g><title>arvz`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="0.6000%" y="1029" width="0.0500%" height="15" fill="rgb(243,44,1)" fg:x="12" fg:w="1"/><text x="0.8500%" y="1039.50"></text></g><g><title>arvz`arvz::main_layout::MainLayout::set_main_layout (3 samples, 0.15%)</title><rect x="0.5500%" y="1333" width="0.1500%" height="15" fill="rgb(206,159,16)" fg:x="11" fg:w="3"/><text x="0.8000%" y="1343.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split (3 samples, 0.15%)</title><rect x="0.5500%" y="1317" width="0.1500%" height="15" fill="rgb(244,77,30)" fg:x="11" fg:w="3"/><text x="0.8000%" y="1327.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split_with_spacers (3 samples, 0.15%)</title><rect x="0.5500%" y="1301" width="0.1500%" height="15" fill="rgb(218,69,12)" fg:x="11" fg:w="3"/><text x="0.8000%" y="1311.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.15%)</title><rect x="0.5500%" y="1285" width="0.1500%" height="15" fill="rgb(212,87,7)" fg:x="11" fg:w="3"/><text x="0.8000%" y="1295.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.15%)</title><rect x="0.5500%" y="1269" width="0.1500%" height="15" fill="rgb(245,114,25)" fg:x="11" fg:w="3"/><text x="0.8000%" y="1279.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split_with_spacers::_{{closure}} (3 samples, 0.15%)</title><rect x="0.5500%" y="1253" width="0.1500%" height="15" fill="rgb(210,61,42)" fg:x="11" fg:w="3"/><text x="0.8000%" y="1263.50"></text></g><g><title>arvz`lru::LruCache&lt;K,V,S&gt;::get_or_insert (3 samples, 0.15%)</title><rect x="0.5500%" y="1237" width="0.1500%" height="15" fill="rgb(211,52,33)" fg:x="11" fg:w="3"/><text x="0.8000%" y="1247.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split_with_spacers::_{{closure}}::_{{closure}} (3 samples, 0.15%)</title><rect x="0.5500%" y="1221" width="0.1500%" height="15" fill="rgb(234,58,33)" fg:x="11" fg:w="3"/><text x="0.8000%" y="1231.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::try_split (3 samples, 0.15%)</title><rect x="0.5500%" y="1205" width="0.1500%" height="15" fill="rgb(220,115,36)" fg:x="11" fg:w="3"/><text x="0.8000%" y="1215.50"></text></g><g><title>arvz`ratatui::layout::layout::configure_variable_constraints (2 samples, 0.10%)</title><rect x="0.6000%" y="1189" width="0.1000%" height="15" fill="rgb(243,153,54)" fg:x="12" fg:w="2"/><text x="0.8500%" y="1199.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_constraint (2 samples, 0.10%)</title><rect x="0.6000%" y="1173" width="0.1000%" height="15" fill="rgb(251,47,18)" fg:x="12" fg:w="2"/><text x="0.8500%" y="1183.50"></text></g><g><title>arvz`std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.05%)</title><rect x="0.6500%" y="1157" width="0.0500%" height="15" fill="rgb(242,102,42)" fg:x="13" fg:w="1"/><text x="0.9000%" y="1167.50"></text></g><g><title>arvz`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.05%)</title><rect x="0.6500%" y="1141" width="0.0500%" height="15" fill="rgb(234,31,38)" fg:x="13" fg:w="1"/><text x="0.9000%" y="1151.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.05%)</title><rect x="0.6500%" y="1125" width="0.0500%" height="15" fill="rgb(221,117,51)" fg:x="13" fg:w="1"/><text x="0.9000%" y="1135.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.05%)</title><rect x="0.6500%" y="1109" width="0.0500%" height="15" fill="rgb(212,20,18)" fg:x="13" fg:w="1"/><text x="0.9000%" y="1119.50"></text></g><g><title>arvz`&lt;ratatui::backend::crossterm::CrosstermBackend&lt;W&gt; as ratatui::backend::Backend&gt;::draw (1 samples, 0.05%)</title><rect x="0.7000%" y="1301" width="0.0500%" height="15" fill="rgb(245,133,36)" fg:x="14" fg:w="1"/><text x="0.9500%" y="1311.50"></text></g><g><title>arvz`&lt;ratatui::style::color::Color as core::cmp::PartialEq&gt;::eq (1 samples, 0.05%)</title><rect x="0.7000%" y="1285" width="0.0500%" height="15" fill="rgb(212,6,19)" fg:x="14" fg:w="1"/><text x="0.9500%" y="1295.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.05%)</title><rect x="0.8000%" y="1285" width="0.0500%" height="15" fill="rgb(218,1,36)" fg:x="16" fg:w="1"/><text x="1.0500%" y="1295.50"></text></g><g><title>arvz`core::cmp::PartialEq::ne (1 samples, 0.05%)</title><rect x="0.8000%" y="1269" width="0.0500%" height="15" fill="rgb(246,84,54)" fg:x="16" fg:w="1"/><text x="1.0500%" y="1279.50"></text></g><g><title>arvz`&lt;ratatui::buffer::cell::Cell as core::cmp::PartialEq&gt;::eq (1 samples, 0.05%)</title><rect x="0.8000%" y="1253" width="0.0500%" height="15" fill="rgb(242,110,6)" fg:x="16" fg:w="1"/><text x="1.0500%" y="1263.50"></text></g><g><title>arvz`&lt;compact_str::CompactString as core::cmp::PartialEq&lt;T&gt;&gt;::eq (1 samples, 0.05%)</title><rect x="0.8000%" y="1237" width="0.0500%" height="15" fill="rgb(214,47,5)" fg:x="16" fg:w="1"/><text x="1.0500%" y="1247.50"></text></g><g><title>arvz`compact_str::CompactString::as_str (1 samples, 0.05%)</title><rect x="0.8000%" y="1221" width="0.0500%" height="15" fill="rgb(218,159,25)" fg:x="16" fg:w="1"/><text x="1.0500%" y="1231.50"></text></g><g><title>arvz`compact_str::repr::Repr::as_str (1 samples, 0.05%)</title><rect x="0.8000%" y="1205" width="0.0500%" height="15" fill="rgb(215,211,28)" fg:x="16" fg:w="1"/><text x="1.0500%" y="1215.50"></text></g><g><title>arvz`core::slice::raw::from_raw_parts (1 samples, 0.05%)</title><rect x="0.8000%" y="1189" width="0.0500%" height="15" fill="rgb(238,59,32)" fg:x="16" fg:w="1"/><text x="1.0500%" y="1199.50"></text></g><g><title>arvz`arvz::tui::Tui::exit (4 samples, 0.20%)</title><rect x="0.7000%" y="1333" width="0.2000%" height="15" fill="rgb(226,82,3)" fg:x="14" fg:w="4"/><text x="0.9500%" y="1343.50"></text></g><g><title>arvz`ratatui::terminal::terminal::Terminal&lt;B&gt;::flush (4 samples, 0.20%)</title><rect x="0.7000%" y="1317" width="0.2000%" height="15" fill="rgb(240,164,32)" fg:x="14" fg:w="4"/><text x="0.9500%" y="1327.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::diff (3 samples, 0.15%)</title><rect x="0.7500%" y="1301" width="0.1500%" height="15" fill="rgb(232,46,7)" fg:x="15" fg:w="3"/><text x="1.0000%" y="1311.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::chars (1 samples, 0.05%)</title><rect x="0.8500%" y="1285" width="0.0500%" height="15" fill="rgb(229,129,53)" fg:x="17" fg:w="1"/><text x="1.1000%" y="1295.50"></text></g><g><title>arvz`arvz::tui::Tui::new (1 samples, 0.05%)</title><rect x="0.9000%" y="1333" width="0.0500%" height="15" fill="rgb(234,188,29)" fg:x="18" fg:w="1"/><text x="1.1500%" y="1343.50"></text></g><g><title>arvz`ratatui::terminal::terminal::Terminal&lt;B&gt;::new (1 samples, 0.05%)</title><rect x="0.9000%" y="1317" width="0.0500%" height="15" fill="rgb(246,141,4)" fg:x="18" fg:w="1"/><text x="1.1500%" y="1327.50"></text></g><g><title>arvz`ratatui::terminal::terminal::Terminal&lt;B&gt;::with_options (1 samples, 0.05%)</title><rect x="0.9000%" y="1301" width="0.0500%" height="15" fill="rgb(229,23,39)" fg:x="18" fg:w="1"/><text x="1.1500%" y="1311.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::empty (1 samples, 0.05%)</title><rect x="0.9000%" y="1285" width="0.0500%" height="15" fill="rgb(206,12,3)" fg:x="18" fg:w="1"/><text x="1.1500%" y="1295.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="0.9000%" y="1269" width="0.0500%" height="15" fill="rgb(252,226,20)" fg:x="18" fg:w="1"/><text x="1.1500%" y="1279.50"></text></g><g><title>arvz`arvz::tui::Tui::next::_{{closure}} (1 samples, 0.05%)</title><rect x="0.9500%" y="1333" width="0.0500%" height="15" fill="rgb(216,123,35)" fg:x="19" fg:w="1"/><text x="1.2000%" y="1343.50"></text></g><g><title>arvz`tokio::sync::mpsc::unbounded::UnboundedReceiver&lt;T&gt;::recv::_{{closure}} (1 samples, 0.05%)</title><rect x="0.9500%" y="1317" width="0.0500%" height="15" fill="rgb(212,68,40)" fg:x="19" fg:w="1"/><text x="1.2000%" y="1327.50"></text></g><g><title>arvz`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="0.9500%" y="1301" width="0.0500%" height="15" fill="rgb(254,125,32)" fg:x="19" fg:w="1"/><text x="1.2000%" y="1311.50"></text></g><g><title>arvz`tokio::sync::mpsc::unbounded::UnboundedReceiver&lt;T&gt;::recv::_{{closure}}::_{{closure}} (1 samples, 0.05%)</title><rect x="0.9500%" y="1285" width="0.0500%" height="15" fill="rgb(253,97,22)" fg:x="19" fg:w="1"/><text x="1.2000%" y="1295.50"></text></g><g><title>arvz`tokio::sync::mpsc::unbounded::UnboundedReceiver&lt;T&gt;::poll_recv (1 samples, 0.05%)</title><rect x="0.9500%" y="1269" width="0.0500%" height="15" fill="rgb(241,101,14)" fg:x="19" fg:w="1"/><text x="1.2000%" y="1279.50"></text></g><g><title>arvz`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (1 samples, 0.05%)</title><rect x="0.9500%" y="1253" width="0.0500%" height="15" fill="rgb(238,103,29)" fg:x="19" fg:w="1"/><text x="1.2000%" y="1263.50"></text></g><g><title>arvz`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::_{{closure}} (1 samples, 0.05%)</title><rect x="0.9500%" y="1237" width="0.0500%" height="15" fill="rgb(233,195,47)" fg:x="19" fg:w="1"/><text x="1.2000%" y="1247.50"></text></g><g><title>arvz`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.05%)</title><rect x="0.9500%" y="1221" width="0.0500%" height="15" fill="rgb(246,218,30)" fg:x="19" fg:w="1"/><text x="1.2000%" y="1231.50"></text></g><g><title>arvz`tokio::sync::mpsc::block::Block&lt;T&gt;::read (1 samples, 0.05%)</title><rect x="0.9500%" y="1205" width="0.0500%" height="15" fill="rgb(219,145,47)" fg:x="19" fg:w="1"/><text x="1.2000%" y="1215.50"></text></g><g><title>arvz`core::array::_&lt;impl core::ops::index::Index&lt;I&gt; for [T (1 samples, 0.05%)</title><rect x="0.9500%" y="1189" width="0.0500%" height="15" fill="rgb(243,12,26)" fg:x="19" fg:w="1"/><text x="1.2000%" y="1199.50"></text></g><g><title> N]&gt;::index (1 samples, 0.05%)</title><rect x="0.9500%" y="1173" width="0.0500%" height="15" fill="rgb(214,87,16)" fg:x="19" fg:w="1"/><text x="1.2000%" y="1183.50"></text></g><g><title>arvz`core::array::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T (1 samples, 0.05%)</title><rect x="1.0000%" y="1333" width="0.0500%" height="15" fill="rgb(208,99,42)" fg:x="20" fg:w="1"/><text x="1.2500%" y="1343.50"></text></g><g><title> N]&gt;::into_iter (1 samples, 0.05%)</title><rect x="1.0000%" y="1317" width="0.0500%" height="15" fill="rgb(253,99,2)" fg:x="20" fg:w="1"/><text x="1.2500%" y="1327.50"></text></g><g><title>arvz`&lt;core::option::Option&lt;W&gt; as ratatui::widgets::WidgetRef&gt;::render_ref (1 samples, 0.05%)</title><rect x="1.0500%" y="1221" width="0.0500%" height="15" fill="rgb(220,168,23)" fg:x="21" fg:w="1"/><text x="1.3000%" y="1231.50"></text></g><g><title>arvz`&lt;ratatui::widgets::block::Block as ratatui::widgets::WidgetRef&gt;::render_ref (1 samples, 0.05%)</title><rect x="1.0500%" y="1205" width="0.0500%" height="15" fill="rgb(242,38,24)" fg:x="21" fg:w="1"/><text x="1.3000%" y="1215.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (1 samples, 0.05%)</title><rect x="1.0500%" y="1189" width="0.0500%" height="15" fill="rgb(225,182,9)" fg:x="21" fg:w="1"/><text x="1.3000%" y="1199.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (1 samples, 0.05%)</title><rect x="1.0500%" y="1173" width="0.0500%" height="15" fill="rgb(243,178,37)" fg:x="21" fg:w="1"/><text x="1.3000%" y="1183.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::bottom (1 samples, 0.05%)</title><rect x="1.0500%" y="1157" width="0.0500%" height="15" fill="rgb(232,139,19)" fg:x="21" fg:w="1"/><text x="1.3000%" y="1167.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (1 samples, 0.05%)</title><rect x="1.1000%" y="1221" width="0.0500%" height="15" fill="rgb(225,201,24)" fg:x="22" fg:w="1"/><text x="1.3500%" y="1231.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (1 samples, 0.05%)</title><rect x="1.1000%" y="1205" width="0.0500%" height="15" fill="rgb(221,47,46)" fg:x="22" fg:w="1"/><text x="1.3500%" y="1215.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (1 samples, 0.05%)</title><rect x="1.1000%" y="1189" width="0.0500%" height="15" fill="rgb(249,23,13)" fg:x="22" fg:w="1"/><text x="1.3500%" y="1199.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (1 samples, 0.05%)</title><rect x="1.1000%" y="1173" width="0.0500%" height="15" fill="rgb(219,9,5)" fg:x="22" fg:w="1"/><text x="1.3500%" y="1183.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::union (1 samples, 0.05%)</title><rect x="1.1000%" y="1157" width="0.0500%" height="15" fill="rgb(254,171,16)" fg:x="22" fg:w="1"/><text x="1.3500%" y="1167.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="1.1500%" y="1205" width="0.0500%" height="15" fill="rgb(230,171,20)" fg:x="23" fg:w="1"/><text x="1.4000%" y="1215.50"></text></g><g><title>arvz`&lt;unicode_segmentation::grapheme::Graphemes as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.10%)</title><rect x="1.2500%" y="1029" width="0.1000%" height="15" fill="rgb(210,71,41)" fg:x="25" fg:w="2"/><text x="1.5000%" y="1039.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.10%)</title><rect x="1.2500%" y="1013" width="0.1000%" height="15" fill="rgb(206,173,20)" fg:x="25" fg:w="2"/><text x="1.5000%" y="1023.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (1 samples, 0.05%)</title><rect x="1.3000%" y="997" width="0.0500%" height="15" fill="rgb(233,88,34)" fg:x="26" fg:w="1"/><text x="1.5500%" y="1007.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (1 samples, 0.05%)</title><rect x="1.3000%" y="981" width="0.0500%" height="15" fill="rgb(223,209,46)" fg:x="26" fg:w="1"/><text x="1.5500%" y="991.50"></text></g><g><title>arvz`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.25%)</title><rect x="1.2000%" y="1173" width="0.2500%" height="15" fill="rgb(250,43,18)" fg:x="24" fg:w="5"/><text x="1.4500%" y="1183.50"></text></g><g><title>arvz`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.25%)</title><rect x="1.2000%" y="1157" width="0.2500%" height="15" fill="rgb(208,13,10)" fg:x="24" fg:w="5"/><text x="1.4500%" y="1167.50"></text></g><g><title>arvz`&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.25%)</title><rect x="1.2000%" y="1141" width="0.2500%" height="15" fill="rgb(212,200,36)" fg:x="24" fg:w="5"/><text x="1.4500%" y="1151.50"></text></g><g><title>arvz`core::iter::adapters::flatten::and_then_or_clear (5 samples, 0.25%)</title><rect x="1.2000%" y="1125" width="0.2500%" height="15" fill="rgb(225,90,30)" fg:x="24" fg:w="5"/><text x="1.4500%" y="1135.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (5 samples, 0.25%)</title><rect x="1.2000%" y="1109" width="0.2500%" height="15" fill="rgb(236,182,39)" fg:x="24" fg:w="5"/><text x="1.4500%" y="1119.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.25%)</title><rect x="1.2000%" y="1093" width="0.2500%" height="15" fill="rgb(212,144,35)" fg:x="24" fg:w="5"/><text x="1.4500%" y="1103.50"></text></g><g><title>arvz`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.25%)</title><rect x="1.2000%" y="1077" width="0.2500%" height="15" fill="rgb(228,63,44)" fg:x="24" fg:w="5"/><text x="1.4500%" y="1087.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::find (5 samples, 0.25%)</title><rect x="1.2000%" y="1061" width="0.2500%" height="15" fill="rgb(228,109,6)" fg:x="24" fg:w="5"/><text x="1.4500%" y="1071.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.25%)</title><rect x="1.2000%" y="1045" width="0.2500%" height="15" fill="rgb(238,117,24)" fg:x="24" fg:w="5"/><text x="1.4500%" y="1055.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::find::check::_{{closure}} (2 samples, 0.10%)</title><rect x="1.3500%" y="1029" width="0.1000%" height="15" fill="rgb(242,26,26)" fg:x="27" fg:w="2"/><text x="1.6000%" y="1039.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.05%)</title><rect x="1.4000%" y="1013" width="0.0500%" height="15" fill="rgb(221,92,48)" fg:x="28" fg:w="1"/><text x="1.6500%" y="1023.50"></text></g><g><title>arvz`ratatui::text::span::Span::styled_graphemes::_{{closure}} (1 samples, 0.05%)</title><rect x="1.4000%" y="997" width="0.0500%" height="15" fill="rgb(209,209,32)" fg:x="28" fg:w="1"/><text x="1.6500%" y="1007.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.05%)</title><rect x="1.4000%" y="981" width="0.0500%" height="15" fill="rgb(221,70,22)" fg:x="28" fg:w="1"/><text x="1.6500%" y="991.50"></text></g><g><title>arvz`core::cmp::PartialEq::ne (1 samples, 0.05%)</title><rect x="1.4000%" y="965" width="0.0500%" height="15" fill="rgb(248,145,5)" fg:x="28" fg:w="1"/><text x="1.6500%" y="975.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.05%)</title><rect x="1.4000%" y="949" width="0.0500%" height="15" fill="rgb(226,116,26)" fg:x="28" fg:w="1"/><text x="1.6500%" y="959.50"></text></g><g><title>arvz`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.05%)</title><rect x="1.4000%" y="933" width="0.0500%" height="15" fill="rgb(244,5,17)" fg:x="28" fg:w="1"/><text x="1.6500%" y="943.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (2 samples, 0.10%)</title><rect x="1.4500%" y="1173" width="0.1000%" height="15" fill="rgb(252,159,33)" fg:x="29" fg:w="2"/><text x="1.7000%" y="1183.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (2 samples, 0.10%)</title><rect x="1.4500%" y="1157" width="0.1000%" height="15" fill="rgb(206,71,0)" fg:x="29" fg:w="2"/><text x="1.7000%" y="1167.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.10%)</title><rect x="1.4500%" y="1141" width="0.1000%" height="15" fill="rgb(233,118,54)" fg:x="29" fg:w="2"/><text x="1.7000%" y="1151.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.10%)</title><rect x="1.4500%" y="1125" width="0.1000%" height="15" fill="rgb(234,83,48)" fg:x="29" fg:w="2"/><text x="1.7000%" y="1135.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (2 samples, 0.10%)</title><rect x="1.4500%" y="1109" width="0.1000%" height="15" fill="rgb(228,3,54)" fg:x="29" fg:w="2"/><text x="1.7000%" y="1119.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.10%)</title><rect x="1.4500%" y="1093" width="0.1000%" height="15" fill="rgb(226,155,13)" fg:x="29" fg:w="2"/><text x="1.7000%" y="1103.50"></text></g><g><title>arvz`core::str::validations::next_code_point (2 samples, 0.10%)</title><rect x="1.4500%" y="1077" width="0.1000%" height="15" fill="rgb(241,28,37)" fg:x="29" fg:w="2"/><text x="1.7000%" y="1087.50"></text></g><g><title>arvz`&lt;ratatui::widgets::reflow::LineTruncator&lt;O,I&gt; as ratatui::widgets::reflow::LineComposer&gt;::next_line (9 samples, 0.45%)</title><rect x="1.2000%" y="1189" width="0.4500%" height="15" fill="rgb(233,93,10)" fg:x="24" fg:w="9"/><text x="1.4500%" y="1199.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.10%)</title><rect x="1.5500%" y="1173" width="0.1000%" height="15" fill="rgb(225,113,19)" fg:x="31" fg:w="2"/><text x="1.8000%" y="1183.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.10%)</title><rect x="1.5500%" y="1157" width="0.1000%" height="15" fill="rgb(241,2,18)" fg:x="31" fg:w="2"/><text x="1.8000%" y="1167.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.10%)</title><rect x="1.5500%" y="1141" width="0.1000%" height="15" fill="rgb(228,207,21)" fg:x="31" fg:w="2"/><text x="1.8000%" y="1151.50"></text></g><g><title>arvz`alloc::raw_vec::finish_grow (2 samples, 0.10%)</title><rect x="1.5500%" y="1125" width="0.1000%" height="15" fill="rgb(213,211,35)" fg:x="31" fg:w="2"/><text x="1.8000%" y="1135.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.10%)</title><rect x="1.5500%" y="1109" width="0.1000%" height="15" fill="rgb(209,83,10)" fg:x="31" fg:w="2"/><text x="1.8000%" y="1119.50"></text></g><g><title>arvz`alloc::alloc::Global::grow_impl (2 samples, 0.10%)</title><rect x="1.5500%" y="1093" width="0.1000%" height="15" fill="rgb(209,164,1)" fg:x="31" fg:w="2"/><text x="1.8000%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.05%)</title><rect x="1.6000%" y="1077" width="0.0500%" height="15" fill="rgb(213,184,43)" fg:x="32" fg:w="1"/><text x="1.8500%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.05%)</title><rect x="1.6000%" y="1061" width="0.0500%" height="15" fill="rgb(231,61,34)" fg:x="32" fg:w="1"/><text x="1.8500%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="1.6000%" y="1045" width="0.0500%" height="15" fill="rgb(235,75,3)" fg:x="32" fg:w="1"/><text x="1.8500%" y="1055.50"></text></g><g><title>arvz`ratatui::terminal::frame::Frame::render_widget (13 samples, 0.65%)</title><rect x="1.0500%" y="1269" width="0.6500%" height="15" fill="rgb(220,106,47)" fg:x="21" fg:w="13"/><text x="1.3000%" y="1279.50"></text></g><g><title>arvz`&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::Widget&gt;::render (13 samples, 0.65%)</title><rect x="1.0500%" y="1253" width="0.6500%" height="15" fill="rgb(210,196,33)" fg:x="21" fg:w="13"/><text x="1.3000%" y="1263.50"></text></g><g><title>arvz`&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::WidgetRef&gt;::render_ref (13 samples, 0.65%)</title><rect x="1.0500%" y="1237" width="0.6500%" height="15" fill="rgb(229,154,42)" fg:x="21" fg:w="13"/><text x="1.3000%" y="1247.50"></text></g><g><title>arvz`ratatui::widgets::paragraph::Paragraph::render_paragraph (11 samples, 0.55%)</title><rect x="1.1500%" y="1221" width="0.5500%" height="15" fill="rgb(228,114,26)" fg:x="23" fg:w="11"/><text x="1.4000%" y="1231.50"></text></g><g><title>arvz`ratatui::widgets::paragraph::Paragraph::render_text (10 samples, 0.50%)</title><rect x="1.2000%" y="1205" width="0.5000%" height="15" fill="rgb(208,144,1)" fg:x="24" fg:w="10"/><text x="1.4500%" y="1215.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.05%)</title><rect x="1.6500%" y="1189" width="0.0500%" height="15" fill="rgb(239,112,37)" fg:x="33" fg:w="1"/><text x="1.9000%" y="1199.50"></text></g><g><title>arvz`&lt;arvz::components::ascii::Ascii as arvz::components::Component&gt;::draw (14 samples, 0.70%)</title><rect x="1.0500%" y="1285" width="0.7000%" height="15" fill="rgb(210,96,50)" fg:x="21" fg:w="14"/><text x="1.3000%" y="1295.50"></text></g><g><title>arvz`ratatui::widgets::paragraph::Paragraph::new (1 samples, 0.05%)</title><rect x="1.7000%" y="1269" width="0.0500%" height="15" fill="rgb(222,178,2)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1279.50"></text></g><g><title>arvz`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.05%)</title><rect x="1.7000%" y="1253" width="0.0500%" height="15" fill="rgb(226,74,18)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1263.50"></text></g><g><title>arvz`&lt;ratatui::text::text::Text as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.05%)</title><rect x="1.7000%" y="1237" width="0.0500%" height="15" fill="rgb(225,67,54)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1247.50"></text></g><g><title>arvz`ratatui::text::text::Text::raw (1 samples, 0.05%)</title><rect x="1.7000%" y="1221" width="0.0500%" height="15" fill="rgb(251,92,32)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1231.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::collect (1 samples, 0.05%)</title><rect x="1.7000%" y="1205" width="0.0500%" height="15" fill="rgb(228,149,22)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1215.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="1.7000%" y="1189" width="0.0500%" height="15" fill="rgb(243,54,13)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1199.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="1.7000%" y="1173" width="0.0500%" height="15" fill="rgb(243,180,28)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1183.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="1.7000%" y="1157" width="0.0500%" height="15" fill="rgb(208,167,24)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1167.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="1.7000%" y="1141" width="0.0500%" height="15" fill="rgb(245,73,45)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1151.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.05%)</title><rect x="1.7000%" y="1125" width="0.0500%" height="15" fill="rgb(237,203,48)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1135.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="1.7000%" y="1109" width="0.0500%" height="15" fill="rgb(211,197,16)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1119.50"></text></g><g><title>arvz`&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="1.7000%" y="1093" width="0.0500%" height="15" fill="rgb(243,99,51)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1103.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="1.7000%" y="1077" width="0.0500%" height="15" fill="rgb(215,123,29)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1087.50"></text></g><g><title>arvz`&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="1.7000%" y="1061" width="0.0500%" height="15" fill="rgb(239,186,37)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1071.50"></text></g><g><title>arvz`core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1 samples, 0.05%)</title><rect x="1.7000%" y="1045" width="0.0500%" height="15" fill="rgb(252,136,39)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1055.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.05%)</title><rect x="1.7000%" y="1029" width="0.0500%" height="15" fill="rgb(223,213,32)" fg:x="34" fg:w="1"/><text x="1.9500%" y="1039.50"></text></g><g><title>arvz`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.05%)</title><rect x="1.7500%" y="1269" width="0.0500%" height="15" fill="rgb(233,115,5)" fg:x="35" fg:w="1"/><text x="2.0000%" y="1279.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (1 samples, 0.05%)</title><rect x="1.8000%" y="1173" width="0.0500%" height="15" fill="rgb(207,226,44)" fg:x="36" fg:w="1"/><text x="2.0500%" y="1183.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.05%)</title><rect x="1.8000%" y="1157" width="0.0500%" height="15" fill="rgb(208,126,0)" fg:x="36" fg:w="1"/><text x="2.0500%" y="1167.50"></text></g><g><title>arvz`&lt;core::option::Option&lt;W&gt; as ratatui::widgets::WidgetRef&gt;::render_ref (2 samples, 0.10%)</title><rect x="1.8000%" y="1221" width="0.1000%" height="15" fill="rgb(244,66,21)" fg:x="36" fg:w="2"/><text x="2.0500%" y="1231.50"></text></g><g><title>arvz`&lt;ratatui::widgets::block::Block as ratatui::widgets::WidgetRef&gt;::render_ref (2 samples, 0.10%)</title><rect x="1.8000%" y="1205" width="0.1000%" height="15" fill="rgb(222,97,12)" fg:x="36" fg:w="2"/><text x="2.0500%" y="1215.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (2 samples, 0.10%)</title><rect x="1.8000%" y="1189" width="0.1000%" height="15" fill="rgb(219,213,19)" fg:x="36" fg:w="2"/><text x="2.0500%" y="1199.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (1 samples, 0.05%)</title><rect x="1.8500%" y="1173" width="0.0500%" height="15" fill="rgb(252,169,30)" fg:x="37" fg:w="1"/><text x="2.1000%" y="1183.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (1 samples, 0.05%)</title><rect x="1.8500%" y="1157" width="0.0500%" height="15" fill="rgb(206,32,51)" fg:x="37" fg:w="1"/><text x="2.1000%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (1 samples, 0.05%)</title><rect x="1.8500%" y="1141" width="0.0500%" height="15" fill="rgb(250,172,42)" fg:x="37" fg:w="1"/><text x="2.1000%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (1 samples, 0.05%)</title><rect x="1.8500%" y="1125" width="0.0500%" height="15" fill="rgb(209,34,43)" fg:x="37" fg:w="1"/><text x="2.1000%" y="1135.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (1 samples, 0.05%)</title><rect x="1.9000%" y="1221" width="0.0500%" height="15" fill="rgb(223,11,35)" fg:x="38" fg:w="1"/><text x="2.1500%" y="1231.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (1 samples, 0.05%)</title><rect x="1.9000%" y="1205" width="0.0500%" height="15" fill="rgb(251,219,26)" fg:x="38" fg:w="1"/><text x="2.1500%" y="1215.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.10%)</title><rect x="2.0500%" y="1013" width="0.1000%" height="15" fill="rgb(231,119,3)" fg:x="41" fg:w="2"/><text x="2.3000%" y="1023.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (2 samples, 0.10%)</title><rect x="2.0500%" y="997" width="0.1000%" height="15" fill="rgb(216,97,11)" fg:x="41" fg:w="2"/><text x="2.3000%" y="1007.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::is_char_boundary (2 samples, 0.10%)</title><rect x="2.0500%" y="981" width="0.1000%" height="15" fill="rgb(223,59,9)" fg:x="41" fg:w="2"/><text x="2.3000%" y="991.50"></text></g><g><title>arvz`&lt;unicode_segmentation::grapheme::Graphemes as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.25%)</title><rect x="2.0500%" y="1029" width="0.2500%" height="15" fill="rgb(233,93,31)" fg:x="41" fg:w="5"/><text x="2.3000%" y="1039.50"></text></g><g><title>arvz`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (3 samples, 0.15%)</title><rect x="2.1500%" y="1013" width="0.1500%" height="15" fill="rgb(239,81,33)" fg:x="43" fg:w="3"/><text x="2.4000%" y="1023.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="2.2500%" y="997" width="0.0500%" height="15" fill="rgb(213,120,34)" fg:x="45" fg:w="1"/><text x="2.5000%" y="1007.50"></text></g><g><title>arvz`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.35%)</title><rect x="2.0000%" y="1173" width="0.3500%" height="15" fill="rgb(243,49,53)" fg:x="40" fg:w="7"/><text x="2.2500%" y="1183.50"></text></g><g><title>arvz`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.35%)</title><rect x="2.0000%" y="1157" width="0.3500%" height="15" fill="rgb(247,216,33)" fg:x="40" fg:w="7"/><text x="2.2500%" y="1167.50"></text></g><g><title>arvz`&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.35%)</title><rect x="2.0000%" y="1141" width="0.3500%" height="15" fill="rgb(226,26,14)" fg:x="40" fg:w="7"/><text x="2.2500%" y="1151.50"></text></g><g><title>arvz`core::iter::adapters::flatten::and_then_or_clear (7 samples, 0.35%)</title><rect x="2.0000%" y="1125" width="0.3500%" height="15" fill="rgb(215,49,53)" fg:x="40" fg:w="7"/><text x="2.2500%" y="1135.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (7 samples, 0.35%)</title><rect x="2.0000%" y="1109" width="0.3500%" height="15" fill="rgb(245,162,40)" fg:x="40" fg:w="7"/><text x="2.2500%" y="1119.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.30%)</title><rect x="2.0500%" y="1093" width="0.3000%" height="15" fill="rgb(229,68,17)" fg:x="41" fg:w="6"/><text x="2.3000%" y="1103.50"></text></g><g><title>arvz`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.30%)</title><rect x="2.0500%" y="1077" width="0.3000%" height="15" fill="rgb(213,182,10)" fg:x="41" fg:w="6"/><text x="2.3000%" y="1087.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::find (6 samples, 0.30%)</title><rect x="2.0500%" y="1061" width="0.3000%" height="15" fill="rgb(245,125,30)" fg:x="41" fg:w="6"/><text x="2.3000%" y="1071.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.30%)</title><rect x="2.0500%" y="1045" width="0.3000%" height="15" fill="rgb(232,202,2)" fg:x="41" fg:w="6"/><text x="2.3000%" y="1055.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.05%)</title><rect x="2.3000%" y="1029" width="0.0500%" height="15" fill="rgb(237,140,51)" fg:x="46" fg:w="1"/><text x="2.5500%" y="1039.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.10%)</title><rect x="2.3500%" y="1093" width="0.1000%" height="15" fill="rgb(236,157,25)" fg:x="47" fg:w="2"/><text x="2.6000%" y="1103.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="2.4000%" y="1077" width="0.0500%" height="15" fill="rgb(219,209,0)" fg:x="48" fg:w="1"/><text x="2.6500%" y="1087.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (4 samples, 0.20%)</title><rect x="2.3500%" y="1173" width="0.2000%" height="15" fill="rgb(240,116,54)" fg:x="47" fg:w="4"/><text x="2.6000%" y="1183.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (4 samples, 0.20%)</title><rect x="2.3500%" y="1157" width="0.2000%" height="15" fill="rgb(216,10,36)" fg:x="47" fg:w="4"/><text x="2.6000%" y="1167.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4 samples, 0.20%)</title><rect x="2.3500%" y="1141" width="0.2000%" height="15" fill="rgb(222,72,44)" fg:x="47" fg:w="4"/><text x="2.6000%" y="1151.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.20%)</title><rect x="2.3500%" y="1125" width="0.2000%" height="15" fill="rgb(232,159,9)" fg:x="47" fg:w="4"/><text x="2.6000%" y="1135.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (4 samples, 0.20%)</title><rect x="2.3500%" y="1109" width="0.2000%" height="15" fill="rgb(210,39,32)" fg:x="47" fg:w="4"/><text x="2.6000%" y="1119.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.10%)</title><rect x="2.4500%" y="1093" width="0.1000%" height="15" fill="rgb(216,194,45)" fg:x="49" fg:w="2"/><text x="2.7000%" y="1103.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (1 samples, 0.05%)</title><rect x="2.5000%" y="1077" width="0.0500%" height="15" fill="rgb(218,18,35)" fg:x="50" fg:w="1"/><text x="2.7500%" y="1087.50"></text></g><g><title>arvz`&lt;ratatui::widgets::reflow::LineTruncator&lt;O,I&gt; as ratatui::widgets::reflow::LineComposer&gt;::next_line (13 samples, 0.65%)</title><rect x="1.9500%" y="1189" width="0.6500%" height="15" fill="rgb(207,83,51)" fg:x="39" fg:w="13"/><text x="2.2000%" y="1199.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::map (1 samples, 0.05%)</title><rect x="2.5500%" y="1173" width="0.0500%" height="15" fill="rgb(225,63,43)" fg:x="51" fg:w="1"/><text x="2.8000%" y="1183.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (1 samples, 0.05%)</title><rect x="2.6000%" y="1189" width="0.0500%" height="15" fill="rgb(207,57,36)" fg:x="52" fg:w="1"/><text x="2.8500%" y="1199.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (1 samples, 0.05%)</title><rect x="2.6000%" y="1173" width="0.0500%" height="15" fill="rgb(216,99,33)" fg:x="52" fg:w="1"/><text x="2.8500%" y="1183.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (1 samples, 0.05%)</title><rect x="2.6500%" y="1189" width="0.0500%" height="15" fill="rgb(225,42,16)" fg:x="53" fg:w="1"/><text x="2.9000%" y="1199.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::remove (1 samples, 0.05%)</title><rect x="2.6500%" y="1173" width="0.0500%" height="15" fill="rgb(220,201,45)" fg:x="53" fg:w="1"/><text x="2.9000%" y="1183.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::remove (1 samples, 0.05%)</title><rect x="2.6500%" y="1157" width="0.0500%" height="15" fill="rgb(225,33,4)" fg:x="53" fg:w="1"/><text x="2.9000%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::difference (1 samples, 0.05%)</title><rect x="2.6500%" y="1141" width="0.0500%" height="15" fill="rgb(224,33,50)" fg:x="53" fg:w="1"/><text x="2.9000%" y="1151.50"></text></g><g><title>arvz`&lt;arvz::components::context_informations::ContextInformation as arvz::components::Component&gt;::draw (22 samples, 1.10%)</title><rect x="1.7500%" y="1285" width="1.1000%" height="15" fill="rgb(246,198,51)" fg:x="35" fg:w="22"/><text x="2.0000%" y="1295.50"></text></g><g><title>arvz`ratatui::terminal::frame::Frame::render_widget (21 samples, 1.05%)</title><rect x="1.8000%" y="1269" width="1.0500%" height="15" fill="rgb(205,22,4)" fg:x="36" fg:w="21"/><text x="2.0500%" y="1279.50"></text></g><g><title>arvz`&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::Widget&gt;::render (21 samples, 1.05%)</title><rect x="1.8000%" y="1253" width="1.0500%" height="15" fill="rgb(206,3,8)" fg:x="36" fg:w="21"/><text x="2.0500%" y="1263.50"></text></g><g><title>arvz`&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::WidgetRef&gt;::render_ref (21 samples, 1.05%)</title><rect x="1.8000%" y="1237" width="1.0500%" height="15" fill="rgb(251,23,15)" fg:x="36" fg:w="21"/><text x="2.0500%" y="1247.50"></text></g><g><title>arvz`ratatui::widgets::paragraph::Paragraph::render_paragraph (18 samples, 0.90%)</title><rect x="1.9500%" y="1221" width="0.9000%" height="15" fill="rgb(252,88,28)" fg:x="39" fg:w="18"/><text x="2.2000%" y="1231.50"></text></g><g><title>arvz`ratatui::widgets::paragraph::Paragraph::render_text (18 samples, 0.90%)</title><rect x="1.9500%" y="1205" width="0.9000%" height="15" fill="rgb(212,127,14)" fg:x="39" fg:w="18"/><text x="2.2000%" y="1215.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_symbol (3 samples, 0.15%)</title><rect x="2.7000%" y="1189" width="0.1500%" height="15" fill="rgb(247,145,37)" fg:x="54" fg:w="3"/><text x="2.9500%" y="1199.50"></text></g><g><title>arvz`compact_str::CompactString::new (1 samples, 0.05%)</title><rect x="2.8000%" y="1173" width="0.0500%" height="15" fill="rgb(209,117,53)" fg:x="56" fg:w="1"/><text x="3.0500%" y="1183.50"></text></g><g><title>arvz`compact_str::repr::Repr::new (1 samples, 0.05%)</title><rect x="2.8000%" y="1157" width="0.0500%" height="15" fill="rgb(212,90,42)" fg:x="56" fg:w="1"/><text x="3.0500%" y="1167.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::len (1 samples, 0.05%)</title><rect x="2.8000%" y="1141" width="0.0500%" height="15" fill="rgb(218,164,37)" fg:x="56" fg:w="1"/><text x="3.0500%" y="1151.50"></text></g><g><title>arvz`&lt;arvz::components::status_bar::StatusBar as arvz::components::Component&gt;::draw (1 samples, 0.05%)</title><rect x="2.8500%" y="1285" width="0.0500%" height="15" fill="rgb(246,65,34)" fg:x="57" fg:w="1"/><text x="3.1000%" y="1295.50"></text></g><g><title>arvz`ratatui::terminal::frame::Frame::render_widget (1 samples, 0.05%)</title><rect x="2.8500%" y="1269" width="0.0500%" height="15" fill="rgb(231,100,33)" fg:x="57" fg:w="1"/><text x="3.1000%" y="1279.50"></text></g><g><title>arvz`&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::Widget&gt;::render (1 samples, 0.05%)</title><rect x="2.8500%" y="1253" width="0.0500%" height="15" fill="rgb(228,126,14)" fg:x="57" fg:w="1"/><text x="3.1000%" y="1263.50"></text></g><g><title>arvz`&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::WidgetRef&gt;::render_ref (1 samples, 0.05%)</title><rect x="2.8500%" y="1237" width="0.0500%" height="15" fill="rgb(215,173,21)" fg:x="57" fg:w="1"/><text x="3.1000%" y="1247.50"></text></g><g><title>arvz`ratatui::widgets::paragraph::Paragraph::render_paragraph (1 samples, 0.05%)</title><rect x="2.8500%" y="1221" width="0.0500%" height="15" fill="rgb(210,6,40)" fg:x="57" fg:w="1"/><text x="3.1000%" y="1231.50"></text></g><g><title>arvz`ratatui::widgets::paragraph::Paragraph::render_text (1 samples, 0.05%)</title><rect x="2.8500%" y="1205" width="0.0500%" height="15" fill="rgb(212,48,18)" fg:x="57" fg:w="1"/><text x="3.1000%" y="1215.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (1 samples, 0.05%)</title><rect x="2.8500%" y="1189" width="0.0500%" height="15" fill="rgb(230,214,11)" fg:x="57" fg:w="1"/><text x="3.1000%" y="1199.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.05%)</title><rect x="2.8500%" y="1173" width="0.0500%" height="15" fill="rgb(254,105,39)" fg:x="57" fg:w="1"/><text x="3.1000%" y="1183.50"></text></g><g><title>arvz`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.05%)</title><rect x="2.8500%" y="1157" width="0.0500%" height="15" fill="rgb(245,158,5)" fg:x="57" fg:w="1"/><text x="3.1000%" y="1167.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.05%)</title><rect x="2.9500%" y="1141" width="0.0500%" height="15" fill="rgb(249,208,11)" fg:x="59" fg:w="1"/><text x="3.2000%" y="1151.50"></text></g><g><title>arvz`alloc::raw_vec::finish_grow (3 samples, 0.15%)</title><rect x="3.0000%" y="1125" width="0.1500%" height="15" fill="rgb(210,39,28)" fg:x="60" fg:w="3"/><text x="3.2500%" y="1135.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="3.1000%" y="1109" width="0.0500%" height="15" fill="rgb(211,56,53)" fg:x="62" fg:w="1"/><text x="3.3500%" y="1119.50"></text></g><g><title>arvz`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="3.1000%" y="1093" width="0.0500%" height="15" fill="rgb(226,201,30)" fg:x="62" fg:w="1"/><text x="3.3500%" y="1103.50"></text></g><g><title>arvz`&lt;T as alloc::string::ToString&gt;::to_string (6 samples, 0.30%)</title><rect x="2.9500%" y="1253" width="0.3000%" height="15" fill="rgb(239,101,34)" fg:x="59" fg:w="6"/><text x="3.2000%" y="1263.50"></text></g><g><title>arvz`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (6 samples, 0.30%)</title><rect x="2.9500%" y="1237" width="0.3000%" height="15" fill="rgb(226,209,5)" fg:x="59" fg:w="6"/><text x="3.2000%" y="1247.50"></text></g><g><title>arvz`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.30%)</title><rect x="2.9500%" y="1221" width="0.3000%" height="15" fill="rgb(250,105,47)" fg:x="59" fg:w="6"/><text x="3.2000%" y="1231.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.30%)</title><rect x="2.9500%" y="1205" width="0.3000%" height="15" fill="rgb(230,72,3)" fg:x="59" fg:w="6"/><text x="3.2000%" y="1215.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.30%)</title><rect x="2.9500%" y="1189" width="0.3000%" height="15" fill="rgb(232,218,39)" fg:x="59" fg:w="6"/><text x="3.2000%" y="1199.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.30%)</title><rect x="2.9500%" y="1173" width="0.3000%" height="15" fill="rgb(248,166,6)" fg:x="59" fg:w="6"/><text x="3.2000%" y="1183.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.30%)</title><rect x="2.9500%" y="1157" width="0.3000%" height="15" fill="rgb(247,89,20)" fg:x="59" fg:w="6"/><text x="3.2000%" y="1167.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.25%)</title><rect x="3.0000%" y="1141" width="0.2500%" height="15" fill="rgb(248,130,54)" fg:x="60" fg:w="5"/><text x="3.2500%" y="1151.50"></text></g><g><title>arvz`core::alloc::layout::Layout::array::inner (2 samples, 0.10%)</title><rect x="3.1500%" y="1125" width="0.1000%" height="15" fill="rgb(234,196,4)" fg:x="63" fg:w="2"/><text x="3.4000%" y="1135.50"></text></g><g><title>arvz`&lt;bool as alloc::string::ToString&gt;::to_string (1 samples, 0.05%)</title><rect x="3.2500%" y="1253" width="0.0500%" height="15" fill="rgb(250,143,31)" fg:x="65" fg:w="1"/><text x="3.5000%" y="1263.50"></text></g><g><title>arvz`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="3.2500%" y="1237" width="0.0500%" height="15" fill="rgb(211,110,34)" fg:x="65" fg:w="1"/><text x="3.5000%" y="1247.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="3.2500%" y="1221" width="0.0500%" height="15" fill="rgb(215,124,48)" fg:x="65" fg:w="1"/><text x="3.5000%" y="1231.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="3.2500%" y="1205" width="0.0500%" height="15" fill="rgb(216,46,13)" fg:x="65" fg:w="1"/><text x="3.5000%" y="1215.50"></text></g><g><title>arvz`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="3.2500%" y="1189" width="0.0500%" height="15" fill="rgb(205,184,25)" fg:x="65" fg:w="1"/><text x="3.5000%" y="1199.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="3.4000%" y="917" width="0.0500%" height="15" fill="rgb(228,1,10)" fg:x="68" fg:w="1"/><text x="3.6500%" y="927.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.05%)</title><rect x="3.4000%" y="901" width="0.0500%" height="15" fill="rgb(213,116,27)" fg:x="68" fg:w="1"/><text x="3.6500%" y="911.50"></text></g><g><title>arvz`&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.05%)</title><rect x="3.5500%" y="837" width="0.0500%" height="15" fill="rgb(241,95,50)" fg:x="71" fg:w="1"/><text x="3.8000%" y="847.50"></text></g><g><title>arvz`core::slice::memchr::memchr_naive (1 samples, 0.05%)</title><rect x="3.5500%" y="821" width="0.0500%" height="15" fill="rgb(238,48,32)" fg:x="71" fg:w="1"/><text x="3.8000%" y="831.50"></text></g><g><title>arvz`&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.20%)</title><rect x="3.4500%" y="869" width="0.2000%" height="15" fill="rgb(235,113,49)" fg:x="69" fg:w="4"/><text x="3.7000%" y="879.50"></text></g><g><title>arvz`core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (4 samples, 0.20%)</title><rect x="3.4500%" y="853" width="0.2000%" height="15" fill="rgb(205,127,43)" fg:x="69" fg:w="4"/><text x="3.7000%" y="863.50"></text></g><g><title>arvz`core::str::iter::SplitInternal&lt;P&gt;::get_end (1 samples, 0.05%)</title><rect x="3.6000%" y="837" width="0.0500%" height="15" fill="rgb(250,162,2)" fg:x="72" fg:w="1"/><text x="3.8500%" y="847.50"></text></g><g><title>arvz`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.10%)</title><rect x="3.7000%" y="789" width="0.1000%" height="15" fill="rgb(220,13,41)" fg:x="74" fg:w="2"/><text x="3.9500%" y="799.50"></text></g><g><title>arvz`&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_suffix_of (4 samples, 0.20%)</title><rect x="3.6500%" y="821" width="0.2000%" height="15" fill="rgb(249,221,25)" fg:x="73" fg:w="4"/><text x="3.9000%" y="831.50"></text></g><g><title>arvz`core::slice::_&lt;impl [T]&gt;::ends_with (4 samples, 0.20%)</title><rect x="3.6500%" y="805" width="0.2000%" height="15" fill="rgb(215,208,19)" fg:x="73" fg:w="4"/><text x="3.9000%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.05%)</title><rect x="3.8000%" y="789" width="0.0500%" height="15" fill="rgb(236,175,2)" fg:x="76" fg:w="1"/><text x="4.0500%" y="799.50"></text></g><g><title>arvz`&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.45%)</title><rect x="3.4500%" y="901" width="0.4500%" height="15" fill="rgb(241,52,2)" fg:x="69" fg:w="9"/><text x="3.7000%" y="911.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.45%)</title><rect x="3.4500%" y="885" width="0.4500%" height="15" fill="rgb(248,140,14)" fg:x="69" fg:w="9"/><text x="3.7000%" y="895.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.25%)</title><rect x="3.6500%" y="869" width="0.2500%" height="15" fill="rgb(253,22,42)" fg:x="73" fg:w="5"/><text x="3.9000%" y="879.50"></text></g><g><title>arvz`&lt;core::str::LinesMap as core::ops::function::FnMut&lt;(&amp;str,)&gt;&gt;::call_mut (5 samples, 0.25%)</title><rect x="3.6500%" y="853" width="0.2500%" height="15" fill="rgb(234,61,47)" fg:x="73" fg:w="5"/><text x="3.9000%" y="863.50"></text></g><g><title>arvz`&lt;core::str::LinesMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (5 samples, 0.25%)</title><rect x="3.6500%" y="837" width="0.2500%" height="15" fill="rgb(208,226,15)" fg:x="73" fg:w="5"/><text x="3.9000%" y="847.50"></text></g><g><title>arvz`core::char::methods::encode_utf8_raw (1 samples, 0.05%)</title><rect x="3.8500%" y="821" width="0.0500%" height="15" fill="rgb(217,221,4)" fg:x="77" fg:w="1"/><text x="4.1000%" y="831.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as core::default::Default&gt;::default (1 samples, 0.05%)</title><rect x="3.9000%" y="837" width="0.0500%" height="15" fill="rgb(212,174,34)" fg:x="78" fg:w="1"/><text x="4.1500%" y="847.50"></text></g><g><title>arvz`ratatui::style::Style::new (1 samples, 0.05%)</title><rect x="3.9000%" y="821" width="0.0500%" height="15" fill="rgb(253,83,4)" fg:x="78" fg:w="1"/><text x="4.1500%" y="831.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="3.9500%" y="805" width="0.0500%" height="15" fill="rgb(250,195,49)" fg:x="79" fg:w="1"/><text x="4.2000%" y="815.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as core::convert::From&lt;alloc::vec::Vec&lt;ratatui::text::span::Span&gt;&gt;&gt;::from (3 samples, 0.15%)</title><rect x="3.9000%" y="853" width="0.1500%" height="15" fill="rgb(241,192,25)" fg:x="78" fg:w="3"/><text x="4.1500%" y="863.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::text::line::Line&gt; (2 samples, 0.10%)</title><rect x="3.9500%" y="837" width="0.1000%" height="15" fill="rgb(208,124,10)" fg:x="79" fg:w="2"/><text x="4.2000%" y="847.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::text::span::Span&gt;&gt; (2 samples, 0.10%)</title><rect x="3.9500%" y="821" width="0.1000%" height="15" fill="rgb(222,33,0)" fg:x="79" fg:w="2"/><text x="4.2000%" y="831.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;[ratatui::text::span::Span]&gt; (1 samples, 0.05%)</title><rect x="4.0000%" y="805" width="0.0500%" height="15" fill="rgb(234,209,28)" fg:x="80" fg:w="1"/><text x="4.2500%" y="815.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as core::convert::From&lt;alloc::string::String&gt;&gt;::from (4 samples, 0.20%)</title><rect x="3.9000%" y="869" width="0.2000%" height="15" fill="rgb(224,11,23)" fg:x="78" fg:w="4"/><text x="4.1500%" y="879.50"></text></g><g><title>arvz`alloc::alloc::exchange_malloc (1 samples, 0.05%)</title><rect x="4.0500%" y="853" width="0.0500%" height="15" fill="rgb(232,99,1)" fg:x="81" fg:w="1"/><text x="4.3000%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="4.0500%" y="837" width="0.0500%" height="15" fill="rgb(237,95,45)" fg:x="81" fg:w="1"/><text x="4.3000%" y="847.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="4.1000%" y="821" width="0.0500%" height="15" fill="rgb(208,109,11)" fg:x="82" fg:w="1"/><text x="4.3500%" y="831.50"></text></g><g><title>arvz`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="4.1000%" y="805" width="0.0500%" height="15" fill="rgb(216,190,48)" fg:x="82" fg:w="1"/><text x="4.3500%" y="815.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.75%)</title><rect x="3.4500%" y="917" width="0.7500%" height="15" fill="rgb(251,171,36)" fg:x="69" fg:w="15"/><text x="3.7000%" y="927.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.30%)</title><rect x="3.9000%" y="901" width="0.3000%" height="15" fill="rgb(230,62,22)" fg:x="78" fg:w="6"/><text x="4.1500%" y="911.50"></text></g><g><title>arvz`ratatui::text::text::Text::raw::_{{closure}} (6 samples, 0.30%)</title><rect x="3.9000%" y="885" width="0.3000%" height="15" fill="rgb(225,114,35)" fg:x="78" fg:w="6"/><text x="4.1500%" y="895.50"></text></g><g><title>arvz`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.10%)</title><rect x="4.1000%" y="869" width="0.1000%" height="15" fill="rgb(215,118,42)" fg:x="82" fg:w="2"/><text x="4.3500%" y="879.50"></text></g><g><title>arvz`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.10%)</title><rect x="4.1000%" y="853" width="0.1000%" height="15" fill="rgb(243,119,21)" fg:x="82" fg:w="2"/><text x="4.3500%" y="863.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.10%)</title><rect x="4.1000%" y="837" width="0.1000%" height="15" fill="rgb(252,177,53)" fg:x="82" fg:w="2"/><text x="4.3500%" y="847.50"></text></g><g><title>arvz`core::alloc::layout::Layout::array::inner (1 samples, 0.05%)</title><rect x="4.1500%" y="821" width="0.0500%" height="15" fill="rgb(237,209,29)" fg:x="83" fg:w="1"/><text x="4.4000%" y="831.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::collect (19 samples, 0.95%)</title><rect x="3.4000%" y="981" width="0.9500%" height="15" fill="rgb(212,65,23)" fg:x="68" fg:w="19"/><text x="3.6500%" y="991.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.95%)</title><rect x="3.4000%" y="965" width="0.9500%" height="15" fill="rgb(230,222,46)" fg:x="68" fg:w="19"/><text x="3.6500%" y="975.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.95%)</title><rect x="3.4000%" y="949" width="0.9500%" height="15" fill="rgb(215,135,32)" fg:x="68" fg:w="19"/><text x="3.6500%" y="959.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19 samples, 0.95%)</title><rect x="3.4000%" y="933" width="0.9500%" height="15" fill="rgb(246,101,22)" fg:x="68" fg:w="19"/><text x="3.6500%" y="943.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.15%)</title><rect x="4.2000%" y="917" width="0.1500%" height="15" fill="rgb(206,107,13)" fg:x="84" fg:w="3"/><text x="4.4500%" y="927.50"></text></g><g><title>arvz`core::alloc::layout::Layout::array::inner (1 samples, 0.05%)</title><rect x="4.3000%" y="901" width="0.0500%" height="15" fill="rgb(250,100,44)" fg:x="86" fg:w="1"/><text x="4.5500%" y="911.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.05%)</title><rect x="4.3500%" y="981" width="0.0500%" height="15" fill="rgb(231,147,38)" fg:x="87" fg:w="1"/><text x="4.6000%" y="991.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="4.3500%" y="965" width="0.0500%" height="15" fill="rgb(229,8,40)" fg:x="87" fg:w="1"/><text x="4.6000%" y="975.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="4.3500%" y="949" width="0.0500%" height="15" fill="rgb(221,135,30)" fg:x="87" fg:w="1"/><text x="4.6000%" y="959.50"></text></g><g><title>arvz`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="4.3500%" y="933" width="0.0500%" height="15" fill="rgb(249,193,18)" fg:x="87" fg:w="1"/><text x="4.6000%" y="943.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="4.3500%" y="917" width="0.0500%" height="15" fill="rgb(209,133,39)" fg:x="87" fg:w="1"/><text x="4.6000%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.05%)</title><rect x="4.3500%" y="901" width="0.0500%" height="15" fill="rgb(232,100,14)" fg:x="87" fg:w="1"/><text x="4.6000%" y="911.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (23 samples, 1.15%)</title><rect x="3.3000%" y="1093" width="1.1500%" height="15" fill="rgb(224,185,1)" fg:x="66" fg:w="23"/><text x="3.5500%" y="1103.50"></text></g><g><title>arvz`core::ops::function::FnMut::call_mut (23 samples, 1.15%)</title><rect x="3.3000%" y="1077" width="1.1500%" height="15" fill="rgb(223,139,8)" fg:x="66" fg:w="23"/><text x="3.5500%" y="1087.50"></text></g><g><title>arvz`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (23 samples, 1.15%)</title><rect x="3.3000%" y="1061" width="1.1500%" height="15" fill="rgb(232,213,38)" fg:x="66" fg:w="23"/><text x="3.5500%" y="1071.50"></text></g><g><title>arvz`&lt;ratatui::widgets::table::cell::Cell as core::convert::From&lt;T&gt;&gt;::from (23 samples, 1.15%)</title><rect x="3.3000%" y="1045" width="1.1500%" height="15" fill="rgb(207,94,22)" fg:x="66" fg:w="23"/><text x="3.5500%" y="1055.50"></text></g><g><title>arvz`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (23 samples, 1.15%)</title><rect x="3.3000%" y="1029" width="1.1500%" height="15" fill="rgb(219,183,54)" fg:x="66" fg:w="23"/><text x="3.5500%" y="1039.50"></text></g><g><title>arvz`&lt;ratatui::text::text::Text as core::convert::From&lt;alloc::string::String&gt;&gt;::from (22 samples, 1.10%)</title><rect x="3.3500%" y="1013" width="1.1000%" height="15" fill="rgb(216,185,54)" fg:x="67" fg:w="22"/><text x="3.6000%" y="1023.50"></text></g><g><title>arvz`ratatui::text::text::Text::raw (22 samples, 1.10%)</title><rect x="3.3500%" y="997" width="1.1000%" height="15" fill="rgb(254,217,39)" fg:x="67" fg:w="22"/><text x="3.6000%" y="1007.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::lines (1 samples, 0.05%)</title><rect x="4.4000%" y="981" width="0.0500%" height="15" fill="rgb(240,178,23)" fg:x="88" fg:w="1"/><text x="4.6500%" y="991.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::split_inclusive (1 samples, 0.05%)</title><rect x="4.4000%" y="965" width="0.0500%" height="15" fill="rgb(218,11,47)" fg:x="88" fg:w="1"/><text x="4.6500%" y="975.50"></text></g><g><title>arvz`&lt;char as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.05%)</title><rect x="4.4000%" y="949" width="0.0500%" height="15" fill="rgb(218,51,51)" fg:x="88" fg:w="1"/><text x="4.6500%" y="959.50"></text></g><g><title>arvz`core::char::methods::encode_utf8_raw (1 samples, 0.05%)</title><rect x="4.4000%" y="933" width="0.0500%" height="15" fill="rgb(238,126,27)" fg:x="88" fg:w="1"/><text x="4.6500%" y="943.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (24 samples, 1.20%)</title><rect x="3.3000%" y="1157" width="1.2000%" height="15" fill="rgb(249,202,22)" fg:x="66" fg:w="24"/><text x="3.5500%" y="1167.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::for_each (24 samples, 1.20%)</title><rect x="3.3000%" y="1141" width="1.2000%" height="15" fill="rgb(254,195,49)" fg:x="66" fg:w="24"/><text x="3.5500%" y="1151.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 1.20%)</title><rect x="3.3000%" y="1125" width="1.2000%" height="15" fill="rgb(208,123,14)" fg:x="66" fg:w="24"/><text x="3.5500%" y="1135.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (24 samples, 1.20%)</title><rect x="3.3000%" y="1109" width="1.2000%" height="15" fill="rgb(224,200,8)" fg:x="66" fg:w="24"/><text x="3.5500%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="4.4500%" y="1093" width="0.0500%" height="15" fill="rgb(217,61,36)" fg:x="89" fg:w="1"/><text x="4.7000%" y="1103.50"></text></g><g><title>arvz`&lt;arvz::models::pool::PoolCollection as arvz::models::model_airflow::ModelAirflow&gt;::get_rows (32 samples, 1.60%)</title><rect x="2.9500%" y="1269" width="1.6000%" height="15" fill="rgb(206,35,45)" fg:x="59" fg:w="32"/><text x="3.2000%" y="1279.50"></text></g><g><title>arvz`ratatui::widgets::table::row::Row::new (25 samples, 1.25%)</title><rect x="3.3000%" y="1253" width="1.2500%" height="15" fill="rgb(217,65,33)" fg:x="66" fg:w="25"/><text x="3.5500%" y="1263.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::collect (25 samples, 1.25%)</title><rect x="3.3000%" y="1237" width="1.2500%" height="15" fill="rgb(222,158,48)" fg:x="66" fg:w="25"/><text x="3.5500%" y="1247.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (25 samples, 1.25%)</title><rect x="3.3000%" y="1221" width="1.2500%" height="15" fill="rgb(254,2,54)" fg:x="66" fg:w="25"/><text x="3.5500%" y="1231.50"></text></g><g><title>arvz`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (25 samples, 1.25%)</title><rect x="3.3000%" y="1205" width="1.2500%" height="15" fill="rgb(250,143,38)" fg:x="66" fg:w="25"/><text x="3.5500%" y="1215.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (25 samples, 1.25%)</title><rect x="3.3000%" y="1189" width="1.2500%" height="15" fill="rgb(248,25,0)" fg:x="66" fg:w="25"/><text x="3.5500%" y="1199.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 1.25%)</title><rect x="3.3000%" y="1173" width="1.2500%" height="15" fill="rgb(206,152,27)" fg:x="66" fg:w="25"/><text x="3.5500%" y="1183.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="4.5000%" y="1157" width="0.0500%" height="15" fill="rgb(240,77,30)" fg:x="90" fg:w="1"/><text x="4.7500%" y="1167.50"></text></g><g><title>arvz`&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="4.5500%" y="1253" width="0.0500%" height="15" fill="rgb(231,5,3)" fg:x="91" fg:w="1"/><text x="4.8000%" y="1263.50"></text></g><g><title>arvz`&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.05%)</title><rect x="4.6000%" y="1253" width="0.0500%" height="15" fill="rgb(207,226,32)" fg:x="92" fg:w="1"/><text x="4.8500%" y="1263.50"></text></g><g><title>arvz`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="4.6000%" y="1237" width="0.0500%" height="15" fill="rgb(222,207,47)" fg:x="92" fg:w="1"/><text x="4.8500%" y="1247.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="4.6000%" y="1221" width="0.0500%" height="15" fill="rgb(229,115,45)" fg:x="92" fg:w="1"/><text x="4.8500%" y="1231.50"></text></g><g><title>arvz`core::alloc::layout::Layout::array::inner (1 samples, 0.05%)</title><rect x="4.6000%" y="1205" width="0.0500%" height="15" fill="rgb(224,191,6)" fg:x="92" fg:w="1"/><text x="4.8500%" y="1215.50"></text></g><g><title>arvz`alloc::alloc::exchange_malloc (1 samples, 0.05%)</title><rect x="4.6500%" y="1253" width="0.0500%" height="15" fill="rgb(230,227,24)" fg:x="93" fg:w="1"/><text x="4.9000%" y="1263.50"></text></g><g><title>arvz`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="4.6500%" y="1237" width="0.0500%" height="15" fill="rgb(228,80,19)" fg:x="93" fg:w="1"/><text x="4.9000%" y="1247.50"></text></g><g><title>arvz`alloc::fmt::format (2 samples, 0.10%)</title><rect x="4.7000%" y="1253" width="0.1000%" height="15" fill="rgb(247,229,0)" fg:x="94" fg:w="2"/><text x="4.9500%" y="1263.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::map_or_else (2 samples, 0.10%)</title><rect x="4.7000%" y="1237" width="0.1000%" height="15" fill="rgb(237,194,15)" fg:x="94" fg:w="2"/><text x="4.9500%" y="1247.50"></text></g><g><title>arvz`alloc::fmt::format::_{{closure}} (1 samples, 0.05%)</title><rect x="4.7500%" y="1221" width="0.0500%" height="15" fill="rgb(219,203,20)" fg:x="95" fg:w="1"/><text x="5.0000%" y="1231.50"></text></g><g><title>arvz`alloc::fmt::format::format_inner (1 samples, 0.05%)</title><rect x="4.7500%" y="1205" width="0.0500%" height="15" fill="rgb(234,128,8)" fg:x="95" fg:w="1"/><text x="5.0000%" y="1215.50"></text></g><g><title>arvz`core::fmt::write (1 samples, 0.05%)</title><rect x="4.7500%" y="1189" width="0.0500%" height="15" fill="rgb(248,202,8)" fg:x="95" fg:w="1"/><text x="5.0000%" y="1199.50"></text></g><g><title>arvz`core::fmt::float::float_to_decimal_common_exact (1 samples, 0.05%)</title><rect x="4.7500%" y="1173" width="0.0500%" height="15" fill="rgb(206,104,37)" fg:x="95" fg:w="1"/><text x="5.0000%" y="1183.50"></text></g><g><title>arvz`core::num::flt2dec::strategy::grisu::format_exact_opt (1 samples, 0.05%)</title><rect x="4.7500%" y="1157" width="0.0500%" height="15" fill="rgb(223,8,27)" fg:x="95" fg:w="1"/><text x="5.0000%" y="1167.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="4.8000%" y="1253" width="0.0500%" height="15" fill="rgb(216,217,28)" fg:x="96" fg:w="1"/><text x="5.0500%" y="1263.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.05%)</title><rect x="4.8000%" y="1237" width="0.0500%" height="15" fill="rgb(249,199,1)" fg:x="96" fg:w="1"/><text x="5.0500%" y="1247.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="4.8000%" y="1221" width="0.0500%" height="15" fill="rgb(240,85,17)" fg:x="96" fg:w="1"/><text x="5.0500%" y="1231.50"></text></g><g><title>arvz`alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="4.8000%" y="1205" width="0.0500%" height="15" fill="rgb(206,108,45)" fg:x="96" fg:w="1"/><text x="5.0500%" y="1215.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="4.8000%" y="1189" width="0.0500%" height="15" fill="rgb(245,210,41)" fg:x="96" fg:w="1"/><text x="5.0500%" y="1199.50"></text></g><g><title>arvz`arvz::style::row::get_style_row (1 samples, 0.05%)</title><rect x="4.8500%" y="1253" width="0.0500%" height="15" fill="rgb(206,13,37)" fg:x="97" fg:w="1"/><text x="5.1000%" y="1263.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.05%)</title><rect x="4.8500%" y="1237" width="0.0500%" height="15" fill="rgb(250,61,18)" fg:x="97" fg:w="1"/><text x="5.1000%" y="1247.50"></text></g><g><title>arvz`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.05%)</title><rect x="4.8500%" y="1221" width="0.0500%" height="15" fill="rgb(235,172,48)" fg:x="97" fg:w="1"/><text x="5.1000%" y="1231.50"></text></g><g><title>arvz`&lt;ratatui::widgets::table::row::Row as core::default::Default&gt;::default (1 samples, 0.05%)</title><rect x="4.9000%" y="1237" width="0.0500%" height="15" fill="rgb(249,201,17)" fg:x="98" fg:w="1"/><text x="5.1500%" y="1247.50"></text></g><g><title>arvz`&lt;ratatui::style::Style as core::default::Default&gt;::default (1 samples, 0.05%)</title><rect x="4.9000%" y="1221" width="0.0500%" height="15" fill="rgb(219,208,6)" fg:x="98" fg:w="1"/><text x="5.1500%" y="1231.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::empty (1 samples, 0.05%)</title><rect x="4.9000%" y="1205" width="0.0500%" height="15" fill="rgb(248,31,23)" fg:x="98" fg:w="1"/><text x="5.1500%" y="1215.50"></text></g><g><title>arvz`&lt;ratatui::text::text::Text as core::convert::From&lt;alloc::vec::Vec&lt;ratatui::text::line::Line&gt;&gt;&gt;::from (3 samples, 0.15%)</title><rect x="5.0500%" y="981" width="0.1500%" height="15" fill="rgb(245,15,42)" fg:x="101" fg:w="3"/><text x="5.3000%" y="991.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::text::text::Text&gt; (2 samples, 0.10%)</title><rect x="5.1000%" y="965" width="0.1000%" height="15" fill="rgb(222,217,39)" fg:x="102" fg:w="2"/><text x="5.3500%" y="975.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::text::line::Line&gt;&gt; (2 samples, 0.10%)</title><rect x="5.1000%" y="949" width="0.1000%" height="15" fill="rgb(210,219,27)" fg:x="102" fg:w="2"/><text x="5.3500%" y="959.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.10%)</title><rect x="5.1000%" y="933" width="0.1000%" height="15" fill="rgb(252,166,36)" fg:x="102" fg:w="2"/><text x="5.3500%" y="943.50"></text></g><g><title>arvz`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.05%)</title><rect x="5.2000%" y="949" width="0.0500%" height="15" fill="rgb(245,132,34)" fg:x="104" fg:w="1"/><text x="5.4500%" y="959.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="5.3500%" y="917" width="0.0500%" height="15" fill="rgb(236,54,3)" fg:x="107" fg:w="1"/><text x="5.6000%" y="927.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.05%)</title><rect x="5.3500%" y="901" width="0.0500%" height="15" fill="rgb(241,173,43)" fg:x="107" fg:w="1"/><text x="5.6000%" y="911.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="5.3500%" y="885" width="0.0500%" height="15" fill="rgb(215,190,9)" fg:x="107" fg:w="1"/><text x="5.6000%" y="895.50"></text></g><g><title>arvz`&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="5.3500%" y="869" width="0.0500%" height="15" fill="rgb(242,101,16)" fg:x="107" fg:w="1"/><text x="5.6000%" y="879.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="5.3500%" y="853" width="0.0500%" height="15" fill="rgb(223,190,21)" fg:x="107" fg:w="1"/><text x="5.6000%" y="863.50"></text></g><g><title>arvz`&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.05%)</title><rect x="5.6500%" y="837" width="0.0500%" height="15" fill="rgb(215,228,25)" fg:x="113" fg:w="1"/><text x="5.9000%" y="847.50"></text></g><g><title>arvz`&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.30%)</title><rect x="5.5000%" y="869" width="0.3000%" height="15" fill="rgb(225,36,22)" fg:x="110" fg:w="6"/><text x="5.7500%" y="879.50"></text></g><g><title>arvz`core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (5 samples, 0.25%)</title><rect x="5.5500%" y="853" width="0.2500%" height="15" fill="rgb(251,106,46)" fg:x="111" fg:w="5"/><text x="5.8000%" y="863.50"></text></g><g><title>arvz`core::str::iter::SplitInternal&lt;P&gt;::get_end (2 samples, 0.10%)</title><rect x="5.7000%" y="837" width="0.1000%" height="15" fill="rgb(208,90,1)" fg:x="114" fg:w="2"/><text x="5.9500%" y="847.50"></text></g><g><title>arvz`&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_suffix_of (1 samples, 0.05%)</title><rect x="5.8000%" y="821" width="0.0500%" height="15" fill="rgb(243,10,4)" fg:x="116" fg:w="1"/><text x="6.0500%" y="831.50"></text></g><g><title>arvz`core::slice::_&lt;impl [T]&gt;::ends_with (1 samples, 0.05%)</title><rect x="5.8000%" y="805" width="0.0500%" height="15" fill="rgb(212,137,27)" fg:x="116" fg:w="1"/><text x="6.0500%" y="815.50"></text></g><g><title>arvz`core::char::methods::encode_utf8_raw (1 samples, 0.05%)</title><rect x="5.8500%" y="821" width="0.0500%" height="15" fill="rgb(231,220,49)" fg:x="117" fg:w="1"/><text x="6.1000%" y="831.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.05%)</title><rect x="5.8500%" y="805" width="0.0500%" height="15" fill="rgb(237,96,20)" fg:x="117" fg:w="1"/><text x="6.1000%" y="815.50"></text></g><g><title>arvz`&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.50%)</title><rect x="5.4500%" y="901" width="0.5000%" height="15" fill="rgb(239,229,30)" fg:x="109" fg:w="10"/><text x="5.7000%" y="911.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.45%)</title><rect x="5.5000%" y="885" width="0.4500%" height="15" fill="rgb(219,65,33)" fg:x="110" fg:w="9"/><text x="5.7500%" y="895.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.15%)</title><rect x="5.8000%" y="869" width="0.1500%" height="15" fill="rgb(243,134,7)" fg:x="116" fg:w="3"/><text x="6.0500%" y="879.50"></text></g><g><title>arvz`&lt;core::str::LinesMap as core::ops::function::FnMut&lt;(&amp;str,)&gt;&gt;::call_mut (3 samples, 0.15%)</title><rect x="5.8000%" y="853" width="0.1500%" height="15" fill="rgb(216,177,54)" fg:x="116" fg:w="3"/><text x="6.0500%" y="863.50"></text></g><g><title>arvz`&lt;core::str::LinesMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (3 samples, 0.15%)</title><rect x="5.8000%" y="837" width="0.1500%" height="15" fill="rgb(211,160,20)" fg:x="116" fg:w="3"/><text x="6.0500%" y="847.50"></text></g><g><title>arvz`core::slice::_&lt;impl [T]&gt;::ends_with (1 samples, 0.05%)</title><rect x="5.9000%" y="821" width="0.0500%" height="15" fill="rgb(239,85,39)" fg:x="118" fg:w="1"/><text x="6.1500%" y="831.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as core::default::Default&gt;::default (1 samples, 0.05%)</title><rect x="6.0500%" y="837" width="0.0500%" height="15" fill="rgb(232,125,22)" fg:x="121" fg:w="1"/><text x="6.3000%" y="847.50"></text></g><g><title>arvz`&lt;ratatui::style::Style as core::default::Default&gt;::default (1 samples, 0.05%)</title><rect x="6.0500%" y="821" width="0.0500%" height="15" fill="rgb(244,57,34)" fg:x="121" fg:w="1"/><text x="6.3000%" y="831.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::empty (1 samples, 0.05%)</title><rect x="6.0500%" y="805" width="0.0500%" height="15" fill="rgb(214,203,32)" fg:x="121" fg:w="1"/><text x="6.3000%" y="815.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as core::convert::From&lt;alloc::vec::Vec&lt;ratatui::text::span::Span&gt;&gt;&gt;::from (3 samples, 0.15%)</title><rect x="6.0500%" y="853" width="0.1500%" height="15" fill="rgb(207,58,43)" fg:x="121" fg:w="3"/><text x="6.3000%" y="863.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::text::line::Line&gt; (2 samples, 0.10%)</title><rect x="6.1000%" y="837" width="0.1000%" height="15" fill="rgb(215,193,15)" fg:x="122" fg:w="2"/><text x="6.3500%" y="847.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::text::span::Span&gt;&gt; (2 samples, 0.10%)</title><rect x="6.1000%" y="821" width="0.1000%" height="15" fill="rgb(232,15,44)" fg:x="122" fg:w="2"/><text x="6.3500%" y="831.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.10%)</title><rect x="6.1000%" y="805" width="0.1000%" height="15" fill="rgb(212,3,48)" fg:x="122" fg:w="2"/><text x="6.3500%" y="815.50"></text></g><g><title>arvz`alloc::alloc::exchange_malloc (1 samples, 0.05%)</title><rect x="6.2000%" y="853" width="0.0500%" height="15" fill="rgb(218,128,7)" fg:x="124" fg:w="1"/><text x="6.4500%" y="863.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as core::convert::From&lt;alloc::string::String&gt;&gt;::from (5 samples, 0.25%)</title><rect x="6.0500%" y="869" width="0.2500%" height="15" fill="rgb(226,216,39)" fg:x="121" fg:w="5"/><text x="6.3000%" y="879.50"></text></g><g><title>arvz`alloc::slice::_&lt;impl [T]&gt;::into_vec (1 samples, 0.05%)</title><rect x="6.2500%" y="853" width="0.0500%" height="15" fill="rgb(243,47,51)" fg:x="125" fg:w="1"/><text x="6.5000%" y="863.50"></text></g><g><title>arvz`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.15%)</title><rect x="6.3000%" y="853" width="0.1500%" height="15" fill="rgb(241,183,40)" fg:x="126" fg:w="3"/><text x="6.5500%" y="863.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.15%)</title><rect x="6.3000%" y="837" width="0.1500%" height="15" fill="rgb(231,217,32)" fg:x="126" fg:w="3"/><text x="6.5500%" y="847.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.10%)</title><rect x="6.3500%" y="821" width="0.1000%" height="15" fill="rgb(229,61,38)" fg:x="127" fg:w="2"/><text x="6.6000%" y="831.50"></text></g><g><title>arvz`alloc::alloc::Global::alloc_impl (2 samples, 0.10%)</title><rect x="6.3500%" y="805" width="0.1000%" height="15" fill="rgb(225,210,5)" fg:x="127" fg:w="2"/><text x="6.6000%" y="815.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 1.10%)</title><rect x="5.4000%" y="917" width="1.1000%" height="15" fill="rgb(231,79,45)" fg:x="108" fg:w="22"/><text x="5.6500%" y="927.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.55%)</title><rect x="5.9500%" y="901" width="0.5500%" height="15" fill="rgb(224,100,7)" fg:x="119" fg:w="11"/><text x="6.2000%" y="911.50"></text></g><g><title>arvz`ratatui::text::text::Text::raw::_{{closure}} (9 samples, 0.45%)</title><rect x="6.0500%" y="885" width="0.4500%" height="15" fill="rgb(241,198,18)" fg:x="121" fg:w="9"/><text x="6.3000%" y="895.50"></text></g><g><title>arvz`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.20%)</title><rect x="6.3000%" y="869" width="0.2000%" height="15" fill="rgb(252,97,53)" fg:x="126" fg:w="4"/><text x="6.5500%" y="879.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="6.4500%" y="853" width="0.0500%" height="15" fill="rgb(220,88,7)" fg:x="129" fg:w="1"/><text x="6.7000%" y="863.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.05%)</title><rect x="6.5000%" y="917" width="0.0500%" height="15" fill="rgb(213,176,14)" fg:x="130" fg:w="1"/><text x="6.7500%" y="927.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (27 samples, 1.35%)</title><rect x="5.2500%" y="933" width="1.3500%" height="15" fill="rgb(246,73,7)" fg:x="105" fg:w="27"/><text x="5.5000%" y="943.50"></text></g><g><title>arvz`core::cmp::max_by (1 samples, 0.05%)</title><rect x="6.5500%" y="917" width="0.0500%" height="15" fill="rgb(245,64,36)" fg:x="131" fg:w="1"/><text x="6.8000%" y="927.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.05%)</title><rect x="6.5500%" y="901" width="0.0500%" height="15" fill="rgb(245,80,10)" fg:x="131" fg:w="1"/><text x="6.8000%" y="911.50"></text></g><g><title>arvz`DYLD-STUB$$memcpy (1 samples, 0.05%)</title><rect x="6.6000%" y="933" width="0.0500%" height="15" fill="rgb(232,107,50)" fg:x="132" fg:w="1"/><text x="6.8500%" y="943.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::collect (30 samples, 1.50%)</title><rect x="5.2000%" y="981" width="1.5000%" height="15" fill="rgb(253,3,0)" fg:x="104" fg:w="30"/><text x="5.4500%" y="991.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (30 samples, 1.50%)</title><rect x="5.2000%" y="965" width="1.5000%" height="15" fill="rgb(212,99,53)" fg:x="104" fg:w="30"/><text x="5.4500%" y="975.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 1.45%)</title><rect x="5.2500%" y="949" width="1.4500%" height="15" fill="rgb(249,111,54)" fg:x="105" fg:w="29"/><text x="5.5000%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="6.6500%" y="933" width="0.0500%" height="15" fill="rgb(249,55,30)" fg:x="133" fg:w="1"/><text x="6.9000%" y="943.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="6.7000%" y="965" width="0.0500%" height="15" fill="rgb(237,47,42)" fg:x="134" fg:w="1"/><text x="6.9500%" y="975.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.10%)</title><rect x="6.7000%" y="981" width="0.1000%" height="15" fill="rgb(211,20,18)" fg:x="134" fg:w="2"/><text x="6.9500%" y="991.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="6.7500%" y="965" width="0.0500%" height="15" fill="rgb(231,203,46)" fg:x="135" fg:w="1"/><text x="7.0000%" y="975.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="6.7500%" y="949" width="0.0500%" height="15" fill="rgb(237,142,3)" fg:x="135" fg:w="1"/><text x="7.0000%" y="959.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.05%)</title><rect x="6.7500%" y="933" width="0.0500%" height="15" fill="rgb(241,107,1)" fg:x="135" fg:w="1"/><text x="7.0000%" y="943.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::split_inclusive (5 samples, 0.25%)</title><rect x="6.8000%" y="965" width="0.2500%" height="15" fill="rgb(229,83,13)" fg:x="136" fg:w="5"/><text x="7.0500%" y="975.50"></text></g><g><title>arvz`&lt;char as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.25%)</title><rect x="6.8000%" y="949" width="0.2500%" height="15" fill="rgb(241,91,40)" fg:x="136" fg:w="5"/><text x="7.0500%" y="959.50"></text></g><g><title>arvz`core::char::methods::encode_utf8_raw (5 samples, 0.25%)</title><rect x="6.8000%" y="933" width="0.2500%" height="15" fill="rgb(225,3,45)" fg:x="136" fg:w="5"/><text x="7.0500%" y="943.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.10%)</title><rect x="6.9500%" y="917" width="0.1000%" height="15" fill="rgb(244,223,14)" fg:x="139" fg:w="2"/><text x="7.2000%" y="927.50"></text></g><g><title>arvz`&lt;arvz::models::tasks::Tasks as arvz::models::model_airflow::ModelAirflow&gt;::get_rows (51 samples, 2.55%)</title><rect x="4.5500%" y="1269" width="2.5500%" height="15" fill="rgb(224,124,37)" fg:x="91" fg:w="51"/><text x="4.8000%" y="1279.50">ar..</text></g><g><title>arvz`ratatui::widgets::table::row::Row::new (44 samples, 2.20%)</title><rect x="4.9000%" y="1253" width="2.2000%" height="15" fill="rgb(251,171,30)" fg:x="98" fg:w="44"/><text x="5.1500%" y="1263.50">a..</text></g><g><title>arvz`core::iter::traits::iterator::Iterator::collect (43 samples, 2.15%)</title><rect x="4.9500%" y="1237" width="2.1500%" height="15" fill="rgb(236,46,54)" fg:x="99" fg:w="43"/><text x="5.2000%" y="1247.50">a..</text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (43 samples, 2.15%)</title><rect x="4.9500%" y="1221" width="2.1500%" height="15" fill="rgb(245,213,5)" fg:x="99" fg:w="43"/><text x="5.2000%" y="1231.50">a..</text></g><g><title>arvz`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (43 samples, 2.15%)</title><rect x="4.9500%" y="1205" width="2.1500%" height="15" fill="rgb(230,144,27)" fg:x="99" fg:w="43"/><text x="5.2000%" y="1215.50">a..</text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (43 samples, 2.15%)</title><rect x="4.9500%" y="1189" width="2.1500%" height="15" fill="rgb(220,86,6)" fg:x="99" fg:w="43"/><text x="5.2000%" y="1199.50">a..</text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (42 samples, 2.10%)</title><rect x="5.0000%" y="1173" width="2.1000%" height="15" fill="rgb(240,20,13)" fg:x="100" fg:w="42"/><text x="5.2500%" y="1183.50">a..</text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (42 samples, 2.10%)</title><rect x="5.0000%" y="1157" width="2.1000%" height="15" fill="rgb(217,89,34)" fg:x="100" fg:w="42"/><text x="5.2500%" y="1167.50">a..</text></g><g><title>arvz`core::iter::traits::iterator::Iterator::for_each (42 samples, 2.10%)</title><rect x="5.0000%" y="1141" width="2.1000%" height="15" fill="rgb(229,13,5)" fg:x="100" fg:w="42"/><text x="5.2500%" y="1151.50">a..</text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 2.10%)</title><rect x="5.0000%" y="1125" width="2.1000%" height="15" fill="rgb(244,67,35)" fg:x="100" fg:w="42"/><text x="5.2500%" y="1135.50">a..</text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (42 samples, 2.10%)</title><rect x="5.0000%" y="1109" width="2.1000%" height="15" fill="rgb(221,40,2)" fg:x="100" fg:w="42"/><text x="5.2500%" y="1119.50">a..</text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (42 samples, 2.10%)</title><rect x="5.0000%" y="1093" width="2.1000%" height="15" fill="rgb(237,157,21)" fg:x="100" fg:w="42"/><text x="5.2500%" y="1103.50">a..</text></g><g><title>arvz`core::ops::function::FnMut::call_mut (41 samples, 2.05%)</title><rect x="5.0500%" y="1077" width="2.0500%" height="15" fill="rgb(222,94,11)" fg:x="101" fg:w="41"/><text x="5.3000%" y="1087.50">a..</text></g><g><title>arvz`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (41 samples, 2.05%)</title><rect x="5.0500%" y="1061" width="2.0500%" height="15" fill="rgb(249,113,6)" fg:x="101" fg:w="41"/><text x="5.3000%" y="1071.50">a..</text></g><g><title>arvz`&lt;ratatui::widgets::table::cell::Cell as core::convert::From&lt;T&gt;&gt;::from (41 samples, 2.05%)</title><rect x="5.0500%" y="1045" width="2.0500%" height="15" fill="rgb(238,137,36)" fg:x="101" fg:w="41"/><text x="5.3000%" y="1055.50">a..</text></g><g><title>arvz`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (41 samples, 2.05%)</title><rect x="5.0500%" y="1029" width="2.0500%" height="15" fill="rgb(210,102,26)" fg:x="101" fg:w="41"/><text x="5.3000%" y="1039.50">a..</text></g><g><title>arvz`&lt;ratatui::text::text::Text as core::convert::From&lt;alloc::string::String&gt;&gt;::from (41 samples, 2.05%)</title><rect x="5.0500%" y="1013" width="2.0500%" height="15" fill="rgb(218,30,30)" fg:x="101" fg:w="41"/><text x="5.3000%" y="1023.50">a..</text></g><g><title>arvz`ratatui::text::text::Text::raw (41 samples, 2.05%)</title><rect x="5.0500%" y="997" width="2.0500%" height="15" fill="rgb(214,67,26)" fg:x="101" fg:w="41"/><text x="5.3000%" y="1007.50">a..</text></g><g><title>arvz`core::str::_&lt;impl str&gt;::lines (6 samples, 0.30%)</title><rect x="6.8000%" y="981" width="0.3000%" height="15" fill="rgb(251,9,53)" fg:x="136" fg:w="6"/><text x="7.0500%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="7.0500%" y="965" width="0.0500%" height="15" fill="rgb(228,204,25)" fg:x="141" fg:w="1"/><text x="7.3000%" y="975.50"></text></g><g><title>arvz`alloc::fmt::format (1 samples, 0.05%)</title><rect x="7.1000%" y="1269" width="0.0500%" height="15" fill="rgb(207,153,8)" fg:x="142" fg:w="1"/><text x="7.3500%" y="1279.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.05%)</title><rect x="7.1000%" y="1253" width="0.0500%" height="15" fill="rgb(242,9,16)" fg:x="142" fg:w="1"/><text x="7.3500%" y="1263.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (1 samples, 0.05%)</title><rect x="7.1000%" y="1237" width="0.0500%" height="15" fill="rgb(217,211,10)" fg:x="142" fg:w="1"/><text x="7.3500%" y="1247.50"></text></g><g><title>arvz`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.05%)</title><rect x="7.1000%" y="1221" width="0.0500%" height="15" fill="rgb(219,228,52)" fg:x="142" fg:w="1"/><text x="7.3500%" y="1231.50"></text></g><g><title>arvz`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="7.1000%" y="1205" width="0.0500%" height="15" fill="rgb(231,92,29)" fg:x="142" fg:w="1"/><text x="7.3500%" y="1215.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="7.1000%" y="1189" width="0.0500%" height="15" fill="rgb(232,8,23)" fg:x="142" fg:w="1"/><text x="7.3500%" y="1199.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="7.1000%" y="1173" width="0.0500%" height="15" fill="rgb(216,211,34)" fg:x="142" fg:w="1"/><text x="7.3500%" y="1183.50"></text></g><g><title>arvz`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="7.1000%" y="1157" width="0.0500%" height="15" fill="rgb(236,151,0)" fg:x="142" fg:w="1"/><text x="7.3500%" y="1167.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::collect (1 samples, 0.05%)</title><rect x="7.1500%" y="1269" width="0.0500%" height="15" fill="rgb(209,168,3)" fg:x="143" fg:w="1"/><text x="7.4000%" y="1279.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="7.1500%" y="1253" width="0.0500%" height="15" fill="rgb(208,129,28)" fg:x="143" fg:w="1"/><text x="7.4000%" y="1263.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="7.1500%" y="1237" width="0.0500%" height="15" fill="rgb(229,78,22)" fg:x="143" fg:w="1"/><text x="7.4000%" y="1247.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="7.1500%" y="1221" width="0.0500%" height="15" fill="rgb(228,187,13)" fg:x="143" fg:w="1"/><text x="7.4000%" y="1231.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="7.1500%" y="1205" width="0.0500%" height="15" fill="rgb(240,119,24)" fg:x="143" fg:w="1"/><text x="7.4000%" y="1215.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (1 samples, 0.05%)</title><rect x="7.2000%" y="1173" width="0.0500%" height="15" fill="rgb(209,194,42)" fg:x="144" fg:w="1"/><text x="7.4500%" y="1183.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.25%)</title><rect x="7.6500%" y="1141" width="0.2500%" height="15" fill="rgb(247,200,46)" fg:x="153" fg:w="5"/><text x="7.9000%" y="1151.50"></text></g><g><title>arvz`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.40%)</title><rect x="7.5500%" y="1157" width="0.4000%" height="15" fill="rgb(218,76,16)" fg:x="151" fg:w="8"/><text x="7.8000%" y="1167.50"></text></g><g><title>arvz`&lt;u16 as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.05%)</title><rect x="7.9000%" y="1141" width="0.0500%" height="15" fill="rgb(225,21,48)" fg:x="158" fg:w="1"/><text x="8.1500%" y="1151.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (15 samples, 0.75%)</title><rect x="8.1000%" y="1141" width="0.7500%" height="15" fill="rgb(239,223,50)" fg:x="162" fg:w="15"/><text x="8.3500%" y="1151.50"></text></g><g><title>arvz`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.30%)</title><rect x="8.5500%" y="1125" width="0.3000%" height="15" fill="rgb(244,45,21)" fg:x="171" fg:w="6"/><text x="8.8000%" y="1135.50"></text></g><g><title>arvz`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.05%)</title><rect x="8.8500%" y="1141" width="0.0500%" height="15" fill="rgb(232,33,43)" fg:x="177" fg:w="1"/><text x="9.1000%" y="1151.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::index_of (31 samples, 1.55%)</title><rect x="8.9000%" y="1141" width="1.5500%" height="15" fill="rgb(209,8,3)" fg:x="178" fg:w="31"/><text x="9.1500%" y="1151.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::bottom (4 samples, 0.20%)</title><rect x="10.4500%" y="1141" width="0.2000%" height="15" fill="rgb(214,25,53)" fg:x="209" fg:w="4"/><text x="10.7000%" y="1151.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::left (2 samples, 0.10%)</title><rect x="10.6500%" y="1141" width="0.1000%" height="15" fill="rgb(254,186,54)" fg:x="213" fg:w="2"/><text x="10.9000%" y="1151.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::right (4 samples, 0.20%)</title><rect x="10.7500%" y="1141" width="0.2000%" height="15" fill="rgb(208,174,49)" fg:x="215" fg:w="4"/><text x="11.0000%" y="1151.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (63 samples, 3.15%)</title><rect x="7.9500%" y="1157" width="3.1500%" height="15" fill="rgb(233,191,51)" fg:x="159" fg:w="63"/><text x="8.2000%" y="1167.50">arv..</text></g><g><title>arvz`ratatui::layout::rect::Rect::top (3 samples, 0.15%)</title><rect x="10.9500%" y="1141" width="0.1500%" height="15" fill="rgb(222,134,10)" fg:x="219" fg:w="3"/><text x="11.2000%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="11.9000%" y="1125" width="0.0500%" height="15" fill="rgb(230,226,20)" fg:x="238" fg:w="1"/><text x="12.1500%" y="1135.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (2 samples, 0.10%)</title><rect x="12.0500%" y="1109" width="0.1000%" height="15" fill="rgb(251,111,25)" fg:x="241" fg:w="2"/><text x="12.3000%" y="1119.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (1 samples, 0.05%)</title><rect x="12.1500%" y="1109" width="0.0500%" height="15" fill="rgb(224,40,46)" fg:x="243" fg:w="1"/><text x="12.4000%" y="1119.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (11 samples, 0.55%)</title><rect x="11.7500%" y="1141" width="0.5500%" height="15" fill="rgb(236,108,47)" fg:x="235" fg:w="11"/><text x="12.0000%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (7 samples, 0.35%)</title><rect x="11.9500%" y="1125" width="0.3500%" height="15" fill="rgb(234,93,0)" fg:x="239" fg:w="7"/><text x="12.2000%" y="1135.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::union (2 samples, 0.10%)</title><rect x="12.2000%" y="1109" width="0.1000%" height="15" fill="rgb(224,213,32)" fg:x="244" fg:w="2"/><text x="12.4500%" y="1119.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="12.4500%" y="1125" width="0.0500%" height="15" fill="rgb(251,11,48)" fg:x="249" fg:w="1"/><text x="12.7000%" y="1135.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (106 samples, 5.30%)</title><rect x="7.2500%" y="1173" width="5.3000%" height="15" fill="rgb(236,173,5)" fg:x="145" fg:w="106"/><text x="7.5000%" y="1183.50">arvz`r..</text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (29 samples, 1.45%)</title><rect x="11.1000%" y="1157" width="1.4500%" height="15" fill="rgb(230,95,12)" fg:x="222" fg:w="29"/><text x="11.3500%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::remove (5 samples, 0.25%)</title><rect x="12.3000%" y="1141" width="0.2500%" height="15" fill="rgb(232,209,1)" fg:x="246" fg:w="5"/><text x="12.5500%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::remove (1 samples, 0.05%)</title><rect x="12.5000%" y="1125" width="0.0500%" height="15" fill="rgb(232,6,1)" fg:x="250" fg:w="1"/><text x="12.7500%" y="1135.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::intersection (1 samples, 0.05%)</title><rect x="12.5500%" y="1173" width="0.0500%" height="15" fill="rgb(210,224,50)" fg:x="251" fg:w="1"/><text x="12.8000%" y="1183.50"></text></g><g><title>arvz`core::cmp::max (1 samples, 0.05%)</title><rect x="12.5500%" y="1157" width="0.0500%" height="15" fill="rgb(228,127,35)" fg:x="251" fg:w="1"/><text x="12.8000%" y="1167.50"></text></g><g><title>arvz`core::cmp::Ord::max (1 samples, 0.05%)</title><rect x="12.5500%" y="1141" width="0.0500%" height="15" fill="rgb(245,102,45)" fg:x="251" fg:w="1"/><text x="12.8000%" y="1151.50"></text></g><g><title>arvz`core::cmp::max_by (1 samples, 0.05%)</title><rect x="12.5500%" y="1125" width="0.0500%" height="15" fill="rgb(214,1,49)" fg:x="251" fg:w="1"/><text x="12.8000%" y="1135.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::Ord for u16&gt;::cmp (1 samples, 0.05%)</title><rect x="12.5500%" y="1109" width="0.0500%" height="15" fill="rgb(226,163,40)" fg:x="251" fg:w="1"/><text x="12.8000%" y="1119.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (3 samples, 0.15%)</title><rect x="12.6500%" y="1125" width="0.1500%" height="15" fill="rgb(239,212,28)" fg:x="253" fg:w="3"/><text x="12.9000%" y="1135.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (4 samples, 0.20%)</title><rect x="12.6500%" y="1141" width="0.2000%" height="15" fill="rgb(220,20,13)" fg:x="253" fg:w="4"/><text x="12.9000%" y="1151.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::top (1 samples, 0.05%)</title><rect x="12.8000%" y="1125" width="0.0500%" height="15" fill="rgb(210,164,35)" fg:x="256" fg:w="1"/><text x="13.0500%" y="1135.50"></text></g><g><title>arvz`compact_str::CompactString::new (1 samples, 0.05%)</title><rect x="12.8500%" y="1125" width="0.0500%" height="15" fill="rgb(248,109,41)" fg:x="257" fg:w="1"/><text x="13.1000%" y="1135.50"></text></g><g><title>arvz`ratatui::widgets::block::Block::render_bottom_side (7 samples, 0.35%)</title><rect x="12.6000%" y="1157" width="0.3500%" height="15" fill="rgb(238,23,50)" fg:x="252" fg:w="7"/><text x="12.8500%" y="1167.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_symbol (2 samples, 0.10%)</title><rect x="12.8500%" y="1141" width="0.1000%" height="15" fill="rgb(211,48,49)" fg:x="257" fg:w="2"/><text x="13.1000%" y="1151.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;compact_str::CompactString&gt; (1 samples, 0.05%)</title><rect x="12.9000%" y="1125" width="0.0500%" height="15" fill="rgb(223,36,21)" fg:x="258" fg:w="1"/><text x="13.1500%" y="1135.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;compact_str::repr::Repr&gt; (1 samples, 0.05%)</title><rect x="12.9000%" y="1109" width="0.0500%" height="15" fill="rgb(207,123,46)" fg:x="258" fg:w="1"/><text x="13.1500%" y="1119.50"></text></g><g><title>arvz`&lt;compact_str::repr::Repr as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="12.9000%" y="1093" width="0.0500%" height="15" fill="rgb(240,218,32)" fg:x="258" fg:w="1"/><text x="13.1500%" y="1103.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.05%)</title><rect x="12.9500%" y="1125" width="0.0500%" height="15" fill="rgb(252,5,43)" fg:x="259" fg:w="1"/><text x="13.2000%" y="1135.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (2 samples, 0.10%)</title><rect x="12.9500%" y="1141" width="0.1000%" height="15" fill="rgb(252,84,19)" fg:x="259" fg:w="2"/><text x="13.2000%" y="1151.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::index_of (1 samples, 0.05%)</title><rect x="13.0000%" y="1125" width="0.0500%" height="15" fill="rgb(243,152,39)" fg:x="260" fg:w="1"/><text x="13.2500%" y="1135.50"></text></g><g><title>arvz`ratatui::widgets::block::Block::render_borders (11 samples, 0.55%)</title><rect x="12.6000%" y="1173" width="0.5500%" height="15" fill="rgb(234,160,15)" fg:x="252" fg:w="11"/><text x="12.8500%" y="1183.50"></text></g><g><title>arvz`ratatui::widgets::block::Block::render_top_side (4 samples, 0.20%)</title><rect x="12.9500%" y="1157" width="0.2000%" height="15" fill="rgb(237,34,20)" fg:x="259" fg:w="4"/><text x="13.2000%" y="1167.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (2 samples, 0.10%)</title><rect x="13.0500%" y="1141" width="0.1000%" height="15" fill="rgb(229,97,13)" fg:x="261" fg:w="2"/><text x="13.3000%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (2 samples, 0.10%)</title><rect x="13.0500%" y="1125" width="0.1000%" height="15" fill="rgb(234,71,50)" fg:x="261" fg:w="2"/><text x="13.3000%" y="1135.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (2 samples, 0.10%)</title><rect x="13.0500%" y="1109" width="0.1000%" height="15" fill="rgb(253,155,4)" fg:x="261" fg:w="2"/><text x="13.3000%" y="1119.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="13.1000%" y="1093" width="0.0500%" height="15" fill="rgb(222,185,37)" fg:x="262" fg:w="1"/><text x="13.3500%" y="1103.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as ratatui::widgets::WidgetRef&gt;::render_ref (1 samples, 0.05%)</title><rect x="13.1500%" y="1125" width="0.0500%" height="15" fill="rgb(251,177,13)" fg:x="263" fg:w="1"/><text x="13.4000%" y="1135.50"></text></g><g><title>arvz`&lt;&amp;W as ratatui::widgets::Widget&gt;::render (1 samples, 0.05%)</title><rect x="13.1500%" y="1109" width="0.0500%" height="15" fill="rgb(250,179,40)" fg:x="263" fg:w="1"/><text x="13.4000%" y="1119.50"></text></g><g><title>arvz`&lt;ratatui::text::span::Span as ratatui::widgets::WidgetRef&gt;::render_ref (1 samples, 0.05%)</title><rect x="13.1500%" y="1093" width="0.0500%" height="15" fill="rgb(242,44,2)" fg:x="263" fg:w="1"/><text x="13.4000%" y="1103.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (1 samples, 0.05%)</title><rect x="13.2000%" y="1125" width="0.0500%" height="15" fill="rgb(216,177,13)" fg:x="264" fg:w="1"/><text x="13.4500%" y="1135.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (1 samples, 0.05%)</title><rect x="13.2000%" y="1109" width="0.0500%" height="15" fill="rgb(216,106,43)" fg:x="264" fg:w="1"/><text x="13.4500%" y="1119.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::remove (1 samples, 0.05%)</title><rect x="13.2000%" y="1093" width="0.0500%" height="15" fill="rgb(216,183,2)" fg:x="264" fg:w="1"/><text x="13.4500%" y="1103.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::remove (1 samples, 0.05%)</title><rect x="13.2000%" y="1077" width="0.0500%" height="15" fill="rgb(249,75,3)" fg:x="264" fg:w="1"/><text x="13.4500%" y="1087.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::difference (1 samples, 0.05%)</title><rect x="13.2000%" y="1061" width="0.0500%" height="15" fill="rgb(219,67,39)" fg:x="264" fg:w="1"/><text x="13.4500%" y="1071.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (1 samples, 0.05%)</title><rect x="13.2500%" y="997" width="0.0500%" height="15" fill="rgb(253,228,2)" fg:x="265" fg:w="1"/><text x="13.5000%" y="1007.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (1 samples, 0.05%)</title><rect x="13.2500%" y="981" width="0.0500%" height="15" fill="rgb(235,138,27)" fg:x="265" fg:w="1"/><text x="13.5000%" y="991.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.05%)</title><rect x="13.2500%" y="965" width="0.0500%" height="15" fill="rgb(236,97,51)" fg:x="265" fg:w="1"/><text x="13.5000%" y="975.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="13.2500%" y="949" width="0.0500%" height="15" fill="rgb(240,80,30)" fg:x="265" fg:w="1"/><text x="13.5000%" y="959.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (1 samples, 0.05%)</title><rect x="13.2500%" y="933" width="0.0500%" height="15" fill="rgb(230,178,19)" fg:x="265" fg:w="1"/><text x="13.5000%" y="943.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.05%)</title><rect x="13.2500%" y="917" width="0.0500%" height="15" fill="rgb(210,190,27)" fg:x="265" fg:w="1"/><text x="13.5000%" y="927.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width::_{{closure}} (1 samples, 0.05%)</title><rect x="13.2500%" y="901" width="0.0500%" height="15" fill="rgb(222,107,31)" fg:x="265" fg:w="1"/><text x="13.5000%" y="911.50"></text></g><g><title>arvz`unicode_width::tables::charwidth::width (1 samples, 0.05%)</title><rect x="13.2500%" y="885" width="0.0500%" height="15" fill="rgb(216,127,34)" fg:x="265" fg:w="1"/><text x="13.5000%" y="895.50"></text></g><g><title>arvz`&lt;core::option::Option&lt;W&gt; as ratatui::widgets::WidgetRef&gt;::render_ref (123 samples, 6.15%)</title><rect x="7.2000%" y="1205" width="6.1500%" height="15" fill="rgb(234,116,52)" fg:x="144" fg:w="123"/><text x="7.4500%" y="1215.50">arvz`&lt;co..</text></g><g><title>arvz`&lt;ratatui::widgets::block::Block as ratatui::widgets::WidgetRef&gt;::render_ref (123 samples, 6.15%)</title><rect x="7.2000%" y="1189" width="6.1500%" height="15" fill="rgb(222,124,15)" fg:x="144" fg:w="123"/><text x="7.4500%" y="1199.50">arvz`&lt;ra..</text></g><g><title>arvz`ratatui::widgets::block::Block::render_titles (4 samples, 0.20%)</title><rect x="13.1500%" y="1173" width="0.2000%" height="15" fill="rgb(231,179,28)" fg:x="263" fg:w="4"/><text x="13.4000%" y="1183.50"></text></g><g><title>arvz`ratatui::widgets::block::Block::render_title_position (4 samples, 0.20%)</title><rect x="13.1500%" y="1157" width="0.2000%" height="15" fill="rgb(226,93,45)" fg:x="263" fg:w="4"/><text x="13.4000%" y="1167.50"></text></g><g><title>arvz`ratatui::widgets::block::Block::render_center_titles (4 samples, 0.20%)</title><rect x="13.1500%" y="1141" width="0.2000%" height="15" fill="rgb(215,8,51)" fg:x="263" fg:w="4"/><text x="13.4000%" y="1151.50"></text></g><g><title>arvz`ratatui::text::line::Line::width (2 samples, 0.10%)</title><rect x="13.2500%" y="1125" width="0.1000%" height="15" fill="rgb(223,106,5)" fg:x="265" fg:w="2"/><text x="13.5000%" y="1135.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (2 samples, 0.10%)</title><rect x="13.2500%" y="1109" width="0.1000%" height="15" fill="rgb(250,191,5)" fg:x="265" fg:w="2"/><text x="13.5000%" y="1119.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.10%)</title><rect x="13.2500%" y="1093" width="0.1000%" height="15" fill="rgb(242,132,44)" fg:x="265" fg:w="2"/><text x="13.5000%" y="1103.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.10%)</title><rect x="13.2500%" y="1077" width="0.1000%" height="15" fill="rgb(251,152,29)" fg:x="265" fg:w="2"/><text x="13.5000%" y="1087.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.10%)</title><rect x="13.2500%" y="1061" width="0.1000%" height="15" fill="rgb(218,179,5)" fg:x="265" fg:w="2"/><text x="13.5000%" y="1071.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.10%)</title><rect x="13.2500%" y="1045" width="0.1000%" height="15" fill="rgb(227,67,19)" fg:x="265" fg:w="2"/><text x="13.5000%" y="1055.50"></text></g><g><title>arvz`core::ops::function::FnMut::call_mut (2 samples, 0.10%)</title><rect x="13.2500%" y="1029" width="0.1000%" height="15" fill="rgb(233,119,31)" fg:x="265" fg:w="2"/><text x="13.5000%" y="1039.50"></text></g><g><title>arvz`ratatui::text::span::Span::width (2 samples, 0.10%)</title><rect x="13.2500%" y="1013" width="0.1000%" height="15" fill="rgb(241,120,22)" fg:x="265" fg:w="2"/><text x="13.5000%" y="1023.50"></text></g><g><title>arvz`alloc::str::_&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (1 samples, 0.05%)</title><rect x="13.3000%" y="997" width="0.0500%" height="15" fill="rgb(224,102,30)" fg:x="266" fg:w="1"/><text x="13.5500%" y="1007.50"></text></g><g><title>arvz`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.05%)</title><rect x="13.5500%" y="1189" width="0.0500%" height="15" fill="rgb(210,164,37)" fg:x="271" fg:w="1"/><text x="13.8000%" y="1199.50"></text></g><g><title>arvz`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 0.70%)</title><rect x="13.6000%" y="1189" width="0.7000%" height="15" fill="rgb(226,191,16)" fg:x="272" fg:w="14"/><text x="13.8500%" y="1199.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12 samples, 0.60%)</title><rect x="13.7000%" y="1173" width="0.6000%" height="15" fill="rgb(214,40,45)" fg:x="274" fg:w="12"/><text x="13.9500%" y="1183.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (14 samples, 0.70%)</title><rect x="14.6000%" y="1173" width="0.7000%" height="15" fill="rgb(244,29,26)" fg:x="292" fg:w="14"/><text x="14.8500%" y="1183.50"></text></g><g><title>arvz`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.25%)</title><rect x="15.0500%" y="1157" width="0.2500%" height="15" fill="rgb(216,16,5)" fg:x="301" fg:w="5"/><text x="15.3000%" y="1167.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::index_of (40 samples, 2.00%)</title><rect x="15.3000%" y="1173" width="2.0000%" height="15" fill="rgb(249,76,35)" fg:x="306" fg:w="40"/><text x="15.5500%" y="1183.50">a..</text></g><g><title>arvz`ratatui::layout::rect::Rect::bottom (3 samples, 0.15%)</title><rect x="17.3000%" y="1173" width="0.1500%" height="15" fill="rgb(207,11,44)" fg:x="346" fg:w="3"/><text x="17.5500%" y="1183.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::left (2 samples, 0.10%)</title><rect x="17.4500%" y="1173" width="0.1000%" height="15" fill="rgb(228,190,49)" fg:x="349" fg:w="2"/><text x="17.7000%" y="1183.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (67 samples, 3.35%)</title><rect x="14.3000%" y="1189" width="3.3500%" height="15" fill="rgb(214,173,12)" fg:x="286" fg:w="67"/><text x="14.5500%" y="1199.50">arv..</text></g><g><title>arvz`ratatui::layout::rect::Rect::right (2 samples, 0.10%)</title><rect x="17.5500%" y="1173" width="0.1000%" height="15" fill="rgb(218,26,35)" fg:x="351" fg:w="2"/><text x="17.8000%" y="1183.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::index_of (1 samples, 0.05%)</title><rect x="17.6500%" y="1189" width="0.0500%" height="15" fill="rgb(220,200,19)" fg:x="353" fg:w="1"/><text x="17.9000%" y="1199.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="18.1500%" y="1157" width="0.0500%" height="15" fill="rgb(239,95,49)" fg:x="363" fg:w="1"/><text x="18.4000%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (2 samples, 0.10%)</title><rect x="18.2000%" y="1157" width="0.1000%" height="15" fill="rgb(235,85,53)" fg:x="364" fg:w="2"/><text x="18.4500%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="18.5000%" y="1141" width="0.0500%" height="15" fill="rgb(233,133,31)" fg:x="370" fg:w="1"/><text x="18.7500%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (10 samples, 0.50%)</title><rect x="18.1500%" y="1173" width="0.5000%" height="15" fill="rgb(218,25,20)" fg:x="363" fg:w="10"/><text x="18.4000%" y="1183.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (7 samples, 0.35%)</title><rect x="18.3000%" y="1157" width="0.3500%" height="15" fill="rgb(252,210,38)" fg:x="366" fg:w="7"/><text x="18.5500%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::union (2 samples, 0.10%)</title><rect x="18.5500%" y="1141" width="0.1000%" height="15" fill="rgb(242,134,21)" fg:x="371" fg:w="2"/><text x="18.8000%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (2 samples, 0.10%)</title><rect x="18.8500%" y="1157" width="0.1000%" height="15" fill="rgb(213,28,48)" fg:x="377" fg:w="2"/><text x="19.1000%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (6 samples, 0.30%)</title><rect x="19.3500%" y="1141" width="0.3000%" height="15" fill="rgb(250,196,2)" fg:x="387" fg:w="6"/><text x="19.6000%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::difference (11 samples, 0.55%)</title><rect x="19.6500%" y="1141" width="0.5500%" height="15" fill="rgb(227,5,17)" fg:x="393" fg:w="11"/><text x="19.9000%" y="1151.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (138 samples, 6.90%)</title><rect x="13.3500%" y="1205" width="6.9000%" height="15" fill="rgb(221,226,24)" fg:x="267" fg:w="138"/><text x="13.6000%" y="1215.50">arvz`rata..</text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (51 samples, 2.55%)</title><rect x="17.7000%" y="1189" width="2.5500%" height="15" fill="rgb(211,5,48)" fg:x="354" fg:w="51"/><text x="17.9500%" y="1199.50">ar..</text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::remove (32 samples, 1.60%)</title><rect x="18.6500%" y="1173" width="1.6000%" height="15" fill="rgb(219,150,6)" fg:x="373" fg:w="32"/><text x="18.9000%" y="1183.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::remove (26 samples, 1.30%)</title><rect x="18.9500%" y="1157" width="1.3000%" height="15" fill="rgb(251,46,16)" fg:x="379" fg:w="26"/><text x="19.2000%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (1 samples, 0.05%)</title><rect x="20.2000%" y="1141" width="0.0500%" height="15" fill="rgb(220,204,40)" fg:x="404" fg:w="1"/><text x="20.4500%" y="1151.50"></text></g><g><title>arvz`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.10%)</title><rect x="20.2500%" y="917" width="0.1000%" height="15" fill="rgb(211,85,2)" fg:x="405" fg:w="2"/><text x="20.5000%" y="927.50"></text></g><g><title>arvz`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.10%)</title><rect x="20.2500%" y="901" width="0.1000%" height="15" fill="rgb(229,17,7)" fg:x="405" fg:w="2"/><text x="20.5000%" y="911.50"></text></g><g><title>arvz`core::hash::BuildHasher::hash_one (3 samples, 0.15%)</title><rect x="20.2500%" y="933" width="0.1500%" height="15" fill="rgb(239,72,28)" fg:x="405" fg:w="3"/><text x="20.5000%" y="943.50"></text></g><g><title>arvz`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="20.3500%" y="917" width="0.0500%" height="15" fill="rgb(230,47,54)" fg:x="407" fg:w="1"/><text x="20.6000%" y="927.50"></text></g><g><title>arvz`&lt;cassowary::Symbol as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="20.3500%" y="901" width="0.0500%" height="15" fill="rgb(214,50,8)" fg:x="407" fg:w="1"/><text x="20.6000%" y="911.50"></text></g><g><title>arvz`&lt;cassowary::SymbolType as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="20.3500%" y="885" width="0.0500%" height="15" fill="rgb(216,198,43)" fg:x="407" fg:w="1"/><text x="20.6000%" y="895.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.05%)</title><rect x="20.4000%" y="933" width="0.0500%" height="15" fill="rgb(234,20,35)" fg:x="408" fg:w="1"/><text x="20.6500%" y="943.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.05%)</title><rect x="20.4000%" y="917" width="0.0500%" height="15" fill="rgb(254,45,19)" fg:x="408" fg:w="1"/><text x="20.6500%" y="927.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_constraint (5 samples, 0.25%)</title><rect x="20.2500%" y="1061" width="0.2500%" height="15" fill="rgb(219,14,44)" fg:x="405" fg:w="5"/><text x="20.5000%" y="1071.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::optimise (5 samples, 0.25%)</title><rect x="20.2500%" y="1045" width="0.2500%" height="15" fill="rgb(217,220,26)" fg:x="405" fg:w="5"/><text x="20.5000%" y="1055.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::substitute (5 samples, 0.25%)</title><rect x="20.2500%" y="1029" width="0.2500%" height="15" fill="rgb(213,158,28)" fg:x="405" fg:w="5"/><text x="20.5000%" y="1039.50"></text></g><g><title>arvz`cassowary::Row::substitute (5 samples, 0.25%)</title><rect x="20.2500%" y="1013" width="0.2500%" height="15" fill="rgb(252,51,52)" fg:x="405" fg:w="5"/><text x="20.5000%" y="1023.50"></text></g><g><title>arvz`cassowary::Row::insert_row (5 samples, 0.25%)</title><rect x="20.2500%" y="997" width="0.2500%" height="15" fill="rgb(246,89,16)" fg:x="405" fg:w="5"/><text x="20.5000%" y="1007.50"></text></g><g><title>arvz`cassowary::Row::insert_symbol (5 samples, 0.25%)</title><rect x="20.2500%" y="981" width="0.2500%" height="15" fill="rgb(216,158,49)" fg:x="405" fg:w="5"/><text x="20.5000%" y="991.50"></text></g><g><title>arvz`std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5 samples, 0.25%)</title><rect x="20.2500%" y="965" width="0.2500%" height="15" fill="rgb(236,107,19)" fg:x="405" fg:w="5"/><text x="20.5000%" y="975.50"></text></g><g><title>arvz`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.25%)</title><rect x="20.2500%" y="949" width="0.2500%" height="15" fill="rgb(228,185,30)" fg:x="405" fg:w="5"/><text x="20.5000%" y="959.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="20.4500%" y="933" width="0.0500%" height="15" fill="rgb(246,134,8)" fg:x="409" fg:w="1"/><text x="20.7000%" y="943.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.05%)</title><rect x="20.4500%" y="917" width="0.0500%" height="15" fill="rgb(214,143,50)" fg:x="409" fg:w="1"/><text x="20.7000%" y="927.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.05%)</title><rect x="20.4500%" y="901" width="0.0500%" height="15" fill="rgb(228,75,8)" fg:x="409" fg:w="1"/><text x="20.7000%" y="911.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::create_row (1 samples, 0.05%)</title><rect x="20.5000%" y="1029" width="0.0500%" height="15" fill="rgb(207,175,4)" fg:x="410" fg:w="1"/><text x="20.7500%" y="1039.50"></text></g><g><title>arvz`cassowary::Row::insert_row (1 samples, 0.05%)</title><rect x="20.5000%" y="1013" width="0.0500%" height="15" fill="rgb(205,108,24)" fg:x="410" fg:w="1"/><text x="20.7500%" y="1023.50"></text></g><g><title>arvz`cassowary::Row::insert_symbol (1 samples, 0.05%)</title><rect x="20.5000%" y="997" width="0.0500%" height="15" fill="rgb(244,120,49)" fg:x="410" fg:w="1"/><text x="20.7500%" y="1007.50"></text></g><g><title>arvz`std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.05%)</title><rect x="20.5000%" y="981" width="0.0500%" height="15" fill="rgb(223,47,38)" fg:x="410" fg:w="1"/><text x="20.7500%" y="991.50"></text></g><g><title>arvz`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.05%)</title><rect x="20.5000%" y="965" width="0.0500%" height="15" fill="rgb(229,179,11)" fg:x="410" fg:w="1"/><text x="20.7500%" y="975.50"></text></g><g><title>arvz`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="20.5000%" y="949" width="0.0500%" height="15" fill="rgb(231,122,1)" fg:x="410" fg:w="1"/><text x="20.7500%" y="959.50"></text></g><g><title>arvz`ratatui::layout::layout::configure_constraints (2 samples, 0.10%)</title><rect x="20.5000%" y="1061" width="0.1000%" height="15" fill="rgb(245,119,9)" fg:x="410" fg:w="2"/><text x="20.7500%" y="1071.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_constraint (2 samples, 0.10%)</title><rect x="20.5000%" y="1045" width="0.1000%" height="15" fill="rgb(241,163,25)" fg:x="410" fg:w="2"/><text x="20.7500%" y="1055.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::optimise (1 samples, 0.05%)</title><rect x="20.5500%" y="1029" width="0.0500%" height="15" fill="rgb(217,214,3)" fg:x="411" fg:w="1"/><text x="20.8000%" y="1039.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::substitute (1 samples, 0.05%)</title><rect x="20.5500%" y="1013" width="0.0500%" height="15" fill="rgb(240,86,28)" fg:x="411" fg:w="1"/><text x="20.8000%" y="1023.50"></text></g><g><title>arvz`cassowary::Row::substitute (1 samples, 0.05%)</title><rect x="20.5500%" y="997" width="0.0500%" height="15" fill="rgb(215,47,9)" fg:x="411" fg:w="1"/><text x="20.8000%" y="1007.50"></text></g><g><title>arvz`cassowary::Row::insert_row (1 samples, 0.05%)</title><rect x="20.5500%" y="981" width="0.0500%" height="15" fill="rgb(252,25,45)" fg:x="411" fg:w="1"/><text x="20.8000%" y="991.50"></text></g><g><title>arvz`cassowary::near_zero (1 samples, 0.05%)</title><rect x="20.5500%" y="965" width="0.0500%" height="15" fill="rgb(251,164,9)" fg:x="411" fg:w="1"/><text x="20.8000%" y="975.50"></text></g><g><title>arvz`ratatui::layout::layout::configure_flex_constraints (1 samples, 0.05%)</title><rect x="20.6000%" y="1061" width="0.0500%" height="15" fill="rgb(233,194,0)" fg:x="412" fg:w="1"/><text x="20.8500%" y="1071.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_constraint (1 samples, 0.05%)</title><rect x="20.6000%" y="1045" width="0.0500%" height="15" fill="rgb(249,111,24)" fg:x="412" fg:w="1"/><text x="20.8500%" y="1055.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::optimise (1 samples, 0.05%)</title><rect x="20.6000%" y="1029" width="0.0500%" height="15" fill="rgb(250,223,3)" fg:x="412" fg:w="1"/><text x="20.8500%" y="1039.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::substitute (1 samples, 0.05%)</title><rect x="20.6000%" y="1013" width="0.0500%" height="15" fill="rgb(236,178,37)" fg:x="412" fg:w="1"/><text x="20.8500%" y="1023.50"></text></g><g><title>arvz`cassowary::Row::substitute (1 samples, 0.05%)</title><rect x="20.6000%" y="997" width="0.0500%" height="15" fill="rgb(241,158,50)" fg:x="412" fg:w="1"/><text x="20.8500%" y="1007.50"></text></g><g><title>arvz`std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.05%)</title><rect x="20.6000%" y="981" width="0.0500%" height="15" fill="rgb(213,121,41)" fg:x="412" fg:w="1"/><text x="20.8500%" y="991.50"></text></g><g><title>arvz`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.05%)</title><rect x="20.6000%" y="965" width="0.0500%" height="15" fill="rgb(240,92,3)" fg:x="412" fg:w="1"/><text x="20.8500%" y="975.50"></text></g><g><title>arvz`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.05%)</title><rect x="20.6000%" y="949" width="0.0500%" height="15" fill="rgb(205,123,3)" fg:x="412" fg:w="1"/><text x="20.8500%" y="959.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.05%)</title><rect x="20.6000%" y="933" width="0.0500%" height="15" fill="rgb(205,97,47)" fg:x="412" fg:w="1"/><text x="20.8500%" y="943.50"></text></g><g><title>arvz`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="20.6000%" y="917" width="0.0500%" height="15" fill="rgb(247,152,14)" fg:x="412" fg:w="1"/><text x="20.8500%" y="927.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::optimise (1 samples, 0.05%)</title><rect x="20.6500%" y="1013" width="0.0500%" height="15" fill="rgb(248,195,53)" fg:x="413" fg:w="1"/><text x="20.9000%" y="1023.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::substitute (1 samples, 0.05%)</title><rect x="20.6500%" y="997" width="0.0500%" height="15" fill="rgb(226,201,16)" fg:x="413" fg:w="1"/><text x="20.9000%" y="1007.50"></text></g><g><title>arvz`cassowary::Row::substitute (1 samples, 0.05%)</title><rect x="20.6500%" y="981" width="0.0500%" height="15" fill="rgb(205,98,0)" fg:x="413" fg:w="1"/><text x="20.9000%" y="991.50"></text></g><g><title>arvz`cassowary::Row::insert_row (1 samples, 0.05%)</title><rect x="20.6500%" y="965" width="0.0500%" height="15" fill="rgb(214,191,48)" fg:x="413" fg:w="1"/><text x="20.9000%" y="975.50"></text></g><g><title>arvz`cassowary::Row::insert_symbol (1 samples, 0.05%)</title><rect x="20.6500%" y="949" width="0.0500%" height="15" fill="rgb(237,112,39)" fg:x="413" fg:w="1"/><text x="20.9000%" y="959.50"></text></g><g><title>arvz`std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.05%)</title><rect x="20.6500%" y="933" width="0.0500%" height="15" fill="rgb(247,203,27)" fg:x="413" fg:w="1"/><text x="20.9000%" y="943.50"></text></g><g><title>arvz`hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.05%)</title><rect x="20.6500%" y="917" width="0.0500%" height="15" fill="rgb(235,124,28)" fg:x="413" fg:w="1"/><text x="20.9000%" y="927.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.05%)</title><rect x="20.6500%" y="901" width="0.0500%" height="15" fill="rgb(208,207,46)" fg:x="413" fg:w="1"/><text x="20.9000%" y="911.50"></text></g><g><title>arvz`hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.05%)</title><rect x="20.6500%" y="885" width="0.0500%" height="15" fill="rgb(234,176,4)" fg:x="413" fg:w="1"/><text x="20.9000%" y="895.50"></text></g><g><title>arvz`hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.05%)</title><rect x="20.6500%" y="869" width="0.0500%" height="15" fill="rgb(230,133,28)" fg:x="413" fg:w="1"/><text x="20.9000%" y="879.50"></text></g><g><title>arvz`core::core_arch::aarch64::neon::vld1_u8 (1 samples, 0.05%)</title><rect x="20.6500%" y="853" width="0.0500%" height="15" fill="rgb(211,137,40)" fg:x="413" fg:w="1"/><text x="20.9000%" y="863.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_with_artificial_variable (2 samples, 0.10%)</title><rect x="20.6500%" y="1029" width="0.1000%" height="15" fill="rgb(254,35,13)" fg:x="413" fg:w="2"/><text x="20.9000%" y="1039.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::substitute (1 samples, 0.05%)</title><rect x="20.7000%" y="1013" width="0.0500%" height="15" fill="rgb(225,49,51)" fg:x="414" fg:w="1"/><text x="20.9500%" y="1023.50"></text></g><g><title>arvz`cassowary::Row::substitute (1 samples, 0.05%)</title><rect x="20.7000%" y="997" width="0.0500%" height="15" fill="rgb(251,10,15)" fg:x="414" fg:w="1"/><text x="20.9500%" y="1007.50"></text></g><g><title>arvz`std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.05%)</title><rect x="20.7000%" y="981" width="0.0500%" height="15" fill="rgb(228,207,15)" fg:x="414" fg:w="1"/><text x="20.9500%" y="991.50"></text></g><g><title>arvz`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.05%)</title><rect x="20.7000%" y="965" width="0.0500%" height="15" fill="rgb(241,99,19)" fg:x="414" fg:w="1"/><text x="20.9500%" y="975.50"></text></g><g><title>arvz`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.05%)</title><rect x="20.7000%" y="949" width="0.0500%" height="15" fill="rgb(207,104,49)" fg:x="414" fg:w="1"/><text x="20.9500%" y="959.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.05%)</title><rect x="20.7000%" y="933" width="0.0500%" height="15" fill="rgb(234,99,18)" fg:x="414" fg:w="1"/><text x="20.9500%" y="943.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.05%)</title><rect x="20.7000%" y="917" width="0.0500%" height="15" fill="rgb(213,191,49)" fg:x="414" fg:w="1"/><text x="20.9500%" y="927.50"></text></g><g><title>arvz`ratatui::widgets::table::table::Table::get_columns_widths (11 samples, 0.55%)</title><rect x="20.2500%" y="1205" width="0.5500%" height="15" fill="rgb(210,226,19)" fg:x="405" fg:w="11"/><text x="20.5000%" y="1215.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split (11 samples, 0.55%)</title><rect x="20.2500%" y="1189" width="0.5500%" height="15" fill="rgb(229,97,18)" fg:x="405" fg:w="11"/><text x="20.5000%" y="1199.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split_with_spacers (11 samples, 0.55%)</title><rect x="20.2500%" y="1173" width="0.5500%" height="15" fill="rgb(211,167,15)" fg:x="405" fg:w="11"/><text x="20.5000%" y="1183.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.55%)</title><rect x="20.2500%" y="1157" width="0.5500%" height="15" fill="rgb(210,169,34)" fg:x="405" fg:w="11"/><text x="20.5000%" y="1167.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.55%)</title><rect x="20.2500%" y="1141" width="0.5500%" height="15" fill="rgb(241,121,31)" fg:x="405" fg:w="11"/><text x="20.5000%" y="1151.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split_with_spacers::_{{closure}} (11 samples, 0.55%)</title><rect x="20.2500%" y="1125" width="0.5500%" height="15" fill="rgb(232,40,11)" fg:x="405" fg:w="11"/><text x="20.5000%" y="1135.50"></text></g><g><title>arvz`lru::LruCache&lt;K,V,S&gt;::get_or_insert (11 samples, 0.55%)</title><rect x="20.2500%" y="1109" width="0.5500%" height="15" fill="rgb(205,86,26)" fg:x="405" fg:w="11"/><text x="20.5000%" y="1119.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split_with_spacers::_{{closure}}::_{{closure}} (11 samples, 0.55%)</title><rect x="20.2500%" y="1093" width="0.5500%" height="15" fill="rgb(231,126,28)" fg:x="405" fg:w="11"/><text x="20.5000%" y="1103.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::try_split (11 samples, 0.55%)</title><rect x="20.2500%" y="1077" width="0.5500%" height="15" fill="rgb(219,221,18)" fg:x="405" fg:w="11"/><text x="20.5000%" y="1087.50"></text></g><g><title>arvz`ratatui::layout::layout::configure_variable_constraints (3 samples, 0.15%)</title><rect x="20.6500%" y="1061" width="0.1500%" height="15" fill="rgb(211,40,0)" fg:x="413" fg:w="3"/><text x="20.9000%" y="1071.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_constraint (3 samples, 0.15%)</title><rect x="20.6500%" y="1045" width="0.1500%" height="15" fill="rgb(239,85,43)" fg:x="413" fg:w="3"/><text x="20.9000%" y="1055.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::create_row (1 samples, 0.05%)</title><rect x="20.7500%" y="1029" width="0.0500%" height="15" fill="rgb(231,55,21)" fg:x="415" fg:w="1"/><text x="21.0000%" y="1039.50"></text></g><g><title>arvz`alloc::alloc::exchange_malloc (1 samples, 0.05%)</title><rect x="20.7500%" y="1013" width="0.0500%" height="15" fill="rgb(225,184,43)" fg:x="415" fg:w="1"/><text x="21.0000%" y="1023.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_constraint (1 samples, 0.05%)</title><rect x="20.8000%" y="1061" width="0.0500%" height="15" fill="rgb(251,158,41)" fg:x="416" fg:w="1"/><text x="21.0500%" y="1071.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::substitute (1 samples, 0.05%)</title><rect x="20.8000%" y="1045" width="0.0500%" height="15" fill="rgb(234,159,37)" fg:x="416" fg:w="1"/><text x="21.0500%" y="1055.50"></text></g><g><title>arvz`cassowary::Row::substitute (1 samples, 0.05%)</title><rect x="20.8000%" y="1029" width="0.0500%" height="15" fill="rgb(216,204,22)" fg:x="416" fg:w="1"/><text x="21.0500%" y="1039.50"></text></g><g><title>arvz`std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.05%)</title><rect x="20.8000%" y="1013" width="0.0500%" height="15" fill="rgb(214,17,3)" fg:x="416" fg:w="1"/><text x="21.0500%" y="1023.50"></text></g><g><title>arvz`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.05%)</title><rect x="20.8000%" y="997" width="0.0500%" height="15" fill="rgb(212,111,17)" fg:x="416" fg:w="1"/><text x="21.0500%" y="1007.50"></text></g><g><title>arvz`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.05%)</title><rect x="20.8000%" y="981" width="0.0500%" height="15" fill="rgb(221,157,24)" fg:x="416" fg:w="1"/><text x="21.0500%" y="991.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.05%)</title><rect x="20.8000%" y="965" width="0.0500%" height="15" fill="rgb(252,16,13)" fg:x="416" fg:w="1"/><text x="21.0500%" y="975.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.05%)</title><rect x="20.8000%" y="949" width="0.0500%" height="15" fill="rgb(221,62,2)" fg:x="416" fg:w="1"/><text x="21.0500%" y="959.50"></text></g><g><title>arvz`hashbrown::raw::neon::Group::match_byte (1 samples, 0.05%)</title><rect x="20.8000%" y="933" width="0.0500%" height="15" fill="rgb(247,87,22)" fg:x="416" fg:w="1"/><text x="21.0500%" y="943.50"></text></g><g><title>arvz`ratatui::layout::layout::configure_flex_constraints (1 samples, 0.05%)</title><rect x="20.8500%" y="1061" width="0.0500%" height="15" fill="rgb(215,73,9)" fg:x="417" fg:w="1"/><text x="21.1000%" y="1071.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_constraint (1 samples, 0.05%)</title><rect x="20.8500%" y="1045" width="0.0500%" height="15" fill="rgb(207,175,33)" fg:x="417" fg:w="1"/><text x="21.1000%" y="1055.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::optimise (1 samples, 0.05%)</title><rect x="20.8500%" y="1029" width="0.0500%" height="15" fill="rgb(243,129,54)" fg:x="417" fg:w="1"/><text x="21.1000%" y="1039.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::get_leaving_row (1 samples, 0.05%)</title><rect x="20.8500%" y="1013" width="0.0500%" height="15" fill="rgb(227,119,45)" fg:x="417" fg:w="1"/><text x="21.1000%" y="1023.50"></text></g><g><title>arvz`cassowary::Row::coefficient_for (1 samples, 0.05%)</title><rect x="20.8500%" y="997" width="0.0500%" height="15" fill="rgb(205,109,36)" fg:x="417" fg:w="1"/><text x="21.1000%" y="1007.50"></text></g><g><title>arvz`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.05%)</title><rect x="20.8500%" y="981" width="0.0500%" height="15" fill="rgb(205,6,39)" fg:x="417" fg:w="1"/><text x="21.1000%" y="991.50"></text></g><g><title>arvz`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.05%)</title><rect x="20.8500%" y="965" width="0.0500%" height="15" fill="rgb(221,32,16)" fg:x="417" fg:w="1"/><text x="21.1000%" y="975.50"></text></g><g><title>arvz`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.05%)</title><rect x="20.8500%" y="949" width="0.0500%" height="15" fill="rgb(228,144,50)" fg:x="417" fg:w="1"/><text x="21.1000%" y="959.50"></text></g><g><title>arvz`ratatui::widgets::table::table::Table::layout (3 samples, 0.15%)</title><rect x="20.8000%" y="1205" width="0.1500%" height="15" fill="rgb(229,201,53)" fg:x="416" fg:w="3"/><text x="21.0500%" y="1215.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split (3 samples, 0.15%)</title><rect x="20.8000%" y="1189" width="0.1500%" height="15" fill="rgb(249,153,27)" fg:x="416" fg:w="3"/><text x="21.0500%" y="1199.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split_with_spacers (3 samples, 0.15%)</title><rect x="20.8000%" y="1173" width="0.1500%" height="15" fill="rgb(227,106,25)" fg:x="416" fg:w="3"/><text x="21.0500%" y="1183.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.15%)</title><rect x="20.8000%" y="1157" width="0.1500%" height="15" fill="rgb(230,65,29)" fg:x="416" fg:w="3"/><text x="21.0500%" y="1167.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.15%)</title><rect x="20.8000%" y="1141" width="0.1500%" height="15" fill="rgb(221,57,46)" fg:x="416" fg:w="3"/><text x="21.0500%" y="1151.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split_with_spacers::_{{closure}} (3 samples, 0.15%)</title><rect x="20.8000%" y="1125" width="0.1500%" height="15" fill="rgb(229,161,17)" fg:x="416" fg:w="3"/><text x="21.0500%" y="1135.50"></text></g><g><title>arvz`lru::LruCache&lt;K,V,S&gt;::get_or_insert (3 samples, 0.15%)</title><rect x="20.8000%" y="1109" width="0.1500%" height="15" fill="rgb(222,213,11)" fg:x="416" fg:w="3"/><text x="21.0500%" y="1119.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::split_with_spacers::_{{closure}}::_{{closure}} (3 samples, 0.15%)</title><rect x="20.8000%" y="1093" width="0.1500%" height="15" fill="rgb(235,35,13)" fg:x="416" fg:w="3"/><text x="21.0500%" y="1103.50"></text></g><g><title>arvz`ratatui::layout::layout::Layout::try_split (3 samples, 0.15%)</title><rect x="20.8000%" y="1077" width="0.1500%" height="15" fill="rgb(233,158,34)" fg:x="416" fg:w="3"/><text x="21.0500%" y="1087.50"></text></g><g><title>arvz`ratatui::layout::layout::configure_variable_constraints (1 samples, 0.05%)</title><rect x="20.9000%" y="1061" width="0.0500%" height="15" fill="rgb(215,151,48)" fg:x="418" fg:w="1"/><text x="21.1500%" y="1071.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_constraint (1 samples, 0.05%)</title><rect x="20.9000%" y="1045" width="0.0500%" height="15" fill="rgb(229,84,14)" fg:x="418" fg:w="1"/><text x="21.1500%" y="1055.50"></text></g><g><title>arvz`cassowary::solver_impl::Solver::add_with_artificial_variable (1 samples, 0.05%)</title><rect x="20.9000%" y="1029" width="0.0500%" height="15" fill="rgb(229,68,14)" fg:x="418" fg:w="1"/><text x="21.1500%" y="1039.50"></text></g><g><title>arvz`cassowary::Row::remove (1 samples, 0.05%)</title><rect x="20.9000%" y="1013" width="0.0500%" height="15" fill="rgb(243,106,26)" fg:x="418" fg:w="1"/><text x="21.1500%" y="1023.50"></text></g><g><title>arvz`std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.05%)</title><rect x="20.9000%" y="997" width="0.0500%" height="15" fill="rgb(206,45,38)" fg:x="418" fg:w="1"/><text x="21.1500%" y="1007.50"></text></g><g><title>arvz`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.05%)</title><rect x="20.9000%" y="981" width="0.0500%" height="15" fill="rgb(226,6,15)" fg:x="418" fg:w="1"/><text x="21.1500%" y="991.50"></text></g><g><title>arvz`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.05%)</title><rect x="20.9000%" y="965" width="0.0500%" height="15" fill="rgb(232,22,54)" fg:x="418" fg:w="1"/><text x="21.1500%" y="975.50"></text></g><g><title>arvz`core::hash::BuildHasher::hash_one (1 samples, 0.05%)</title><rect x="20.9000%" y="949" width="0.0500%" height="15" fill="rgb(229,222,32)" fg:x="418" fg:w="1"/><text x="21.1500%" y="959.50"></text></g><g><title>arvz`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="20.9000%" y="933" width="0.0500%" height="15" fill="rgb(228,62,29)" fg:x="418" fg:w="1"/><text x="21.1500%" y="943.50"></text></g><g><title>arvz`&lt;cassowary::Symbol as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="20.9000%" y="917" width="0.0500%" height="15" fill="rgb(251,103,34)" fg:x="418" fg:w="1"/><text x="21.1500%" y="927.50"></text></g><g><title>arvz`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.05%)</title><rect x="20.9000%" y="901" width="0.0500%" height="15" fill="rgb(233,12,30)" fg:x="418" fg:w="1"/><text x="21.1500%" y="911.50"></text></g><g><title>arvz`core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="20.9000%" y="885" width="0.0500%" height="15" fill="rgb(238,52,0)" fg:x="418" fg:w="1"/><text x="21.1500%" y="895.50"></text></g><g><title>arvz`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="20.9000%" y="869" width="0.0500%" height="15" fill="rgb(223,98,5)" fg:x="418" fg:w="1"/><text x="21.1500%" y="879.50"></text></g><g><title>arvz`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="20.9000%" y="853" width="0.0500%" height="15" fill="rgb(228,75,37)" fg:x="418" fg:w="1"/><text x="21.1500%" y="863.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (1 samples, 0.05%)</title><rect x="20.9500%" y="1173" width="0.0500%" height="15" fill="rgb(205,115,49)" fg:x="419" fg:w="1"/><text x="21.2000%" y="1183.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (2 samples, 0.10%)</title><rect x="20.9500%" y="1189" width="0.1000%" height="15" fill="rgb(250,154,43)" fg:x="419" fg:w="2"/><text x="21.2000%" y="1199.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (1 samples, 0.05%)</title><rect x="21.0000%" y="1173" width="0.0500%" height="15" fill="rgb(226,43,29)" fg:x="420" fg:w="1"/><text x="21.2500%" y="1183.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::remove (1 samples, 0.05%)</title><rect x="21.0000%" y="1157" width="0.0500%" height="15" fill="rgb(249,228,39)" fg:x="420" fg:w="1"/><text x="21.2500%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (1 samples, 0.05%)</title><rect x="21.0000%" y="1141" width="0.0500%" height="15" fill="rgb(216,79,43)" fg:x="420" fg:w="1"/><text x="21.2500%" y="1151.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::chars (1 samples, 0.05%)</title><rect x="21.0500%" y="997" width="0.0500%" height="15" fill="rgb(228,95,12)" fg:x="421" fg:w="1"/><text x="21.3000%" y="1007.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.05%)</title><rect x="21.1000%" y="981" width="0.0500%" height="15" fill="rgb(249,221,15)" fg:x="422" fg:w="1"/><text x="21.3500%" y="991.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.15%)</title><rect x="21.0500%" y="1077" width="0.1500%" height="15" fill="rgb(233,34,13)" fg:x="421" fg:w="3"/><text x="21.3000%" y="1087.50"></text></g><g><title>arvz`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.15%)</title><rect x="21.0500%" y="1061" width="0.1500%" height="15" fill="rgb(214,103,39)" fg:x="421" fg:w="3"/><text x="21.3000%" y="1071.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::find (3 samples, 0.15%)</title><rect x="21.0500%" y="1045" width="0.1500%" height="15" fill="rgb(251,126,39)" fg:x="421" fg:w="3"/><text x="21.3000%" y="1055.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.15%)</title><rect x="21.0500%" y="1029" width="0.1500%" height="15" fill="rgb(214,216,36)" fg:x="421" fg:w="3"/><text x="21.3000%" y="1039.50"></text></g><g><title>arvz`&lt;unicode_segmentation::grapheme::Graphemes as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.15%)</title><rect x="21.0500%" y="1013" width="0.1500%" height="15" fill="rgb(220,221,8)" fg:x="421" fg:w="3"/><text x="21.3000%" y="1023.50"></text></g><g><title>arvz`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (2 samples, 0.10%)</title><rect x="21.1000%" y="997" width="0.1000%" height="15" fill="rgb(240,216,3)" fg:x="422" fg:w="2"/><text x="21.3500%" y="1007.50"></text></g><g><title>arvz`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (1 samples, 0.05%)</title><rect x="21.1500%" y="981" width="0.0500%" height="15" fill="rgb(232,218,17)" fg:x="423" fg:w="1"/><text x="21.4000%" y="991.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.10%)</title><rect x="21.2000%" y="997" width="0.1000%" height="15" fill="rgb(229,163,45)" fg:x="424" fg:w="2"/><text x="21.4500%" y="1007.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.10%)</title><rect x="21.2000%" y="981" width="0.1000%" height="15" fill="rgb(231,110,42)" fg:x="424" fg:w="2"/><text x="21.4500%" y="991.50"></text></g><g><title>arvz`&lt;&amp;W as ratatui::widgets::Widget&gt;::render (6 samples, 0.30%)</title><rect x="21.0500%" y="1109" width="0.3000%" height="15" fill="rgb(208,170,48)" fg:x="421" fg:w="6"/><text x="21.3000%" y="1119.50"></text></g><g><title>arvz`&lt;ratatui::text::span::Span as ratatui::widgets::WidgetRef&gt;::render_ref (6 samples, 0.30%)</title><rect x="21.0500%" y="1093" width="0.3000%" height="15" fill="rgb(239,116,25)" fg:x="421" fg:w="6"/><text x="21.3000%" y="1103.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (3 samples, 0.15%)</title><rect x="21.2000%" y="1077" width="0.1500%" height="15" fill="rgb(219,200,50)" fg:x="424" fg:w="3"/><text x="21.4500%" y="1087.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (3 samples, 0.15%)</title><rect x="21.2000%" y="1061" width="0.1500%" height="15" fill="rgb(245,200,0)" fg:x="424" fg:w="3"/><text x="21.4500%" y="1071.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.15%)</title><rect x="21.2000%" y="1045" width="0.1500%" height="15" fill="rgb(245,119,33)" fg:x="424" fg:w="3"/><text x="21.4500%" y="1055.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.15%)</title><rect x="21.2000%" y="1029" width="0.1500%" height="15" fill="rgb(231,125,12)" fg:x="424" fg:w="3"/><text x="21.4500%" y="1039.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (3 samples, 0.15%)</title><rect x="21.2000%" y="1013" width="0.1500%" height="15" fill="rgb(216,96,41)" fg:x="424" fg:w="3"/><text x="21.4500%" y="1023.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.05%)</title><rect x="21.3000%" y="997" width="0.0500%" height="15" fill="rgb(248,43,45)" fg:x="426" fg:w="1"/><text x="21.5500%" y="1007.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.05%)</title><rect x="21.3000%" y="981" width="0.0500%" height="15" fill="rgb(217,222,7)" fg:x="426" fg:w="1"/><text x="21.5500%" y="991.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (1 samples, 0.05%)</title><rect x="21.3500%" y="1093" width="0.0500%" height="15" fill="rgb(233,28,6)" fg:x="427" fg:w="1"/><text x="21.6000%" y="1103.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (1 samples, 0.05%)</title><rect x="21.3500%" y="1077" width="0.0500%" height="15" fill="rgb(231,218,15)" fg:x="427" fg:w="1"/><text x="21.6000%" y="1087.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (1 samples, 0.05%)</title><rect x="21.3500%" y="1061" width="0.0500%" height="15" fill="rgb(226,171,48)" fg:x="427" fg:w="1"/><text x="21.6000%" y="1071.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (2 samples, 0.10%)</title><rect x="21.3500%" y="1109" width="0.1000%" height="15" fill="rgb(235,201,9)" fg:x="427" fg:w="2"/><text x="21.6000%" y="1119.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::intersection (1 samples, 0.05%)</title><rect x="21.4000%" y="1093" width="0.0500%" height="15" fill="rgb(217,80,15)" fg:x="428" fg:w="1"/><text x="21.6500%" y="1103.50"></text></g><g><title>arvz`core::cmp::max (1 samples, 0.05%)</title><rect x="21.4000%" y="1077" width="0.0500%" height="15" fill="rgb(219,152,8)" fg:x="428" fg:w="1"/><text x="21.6500%" y="1087.50"></text></g><g><title>arvz`core::cmp::Ord::max (1 samples, 0.05%)</title><rect x="21.4000%" y="1061" width="0.0500%" height="15" fill="rgb(243,107,38)" fg:x="428" fg:w="1"/><text x="21.6500%" y="1071.50"></text></g><g><title>arvz`core::cmp::max_by (1 samples, 0.05%)</title><rect x="21.4000%" y="1045" width="0.0500%" height="15" fill="rgb(231,17,5)" fg:x="428" fg:w="1"/><text x="21.6500%" y="1055.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::Ord for u16&gt;::cmp (1 samples, 0.05%)</title><rect x="21.4000%" y="1029" width="0.0500%" height="15" fill="rgb(209,25,54)" fg:x="428" fg:w="1"/><text x="21.6500%" y="1039.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::right (1 samples, 0.05%)</title><rect x="21.4500%" y="1109" width="0.0500%" height="15" fill="rgb(219,0,2)" fg:x="429" fg:w="1"/><text x="21.7000%" y="1119.50"></text></g><g><title>arvz`ratatui::text::line::Line::width (2 samples, 0.10%)</title><rect x="21.5000%" y="1109" width="0.1000%" height="15" fill="rgb(246,9,5)" fg:x="430" fg:w="2"/><text x="21.7500%" y="1119.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (2 samples, 0.10%)</title><rect x="21.5000%" y="1093" width="0.1000%" height="15" fill="rgb(226,159,4)" fg:x="430" fg:w="2"/><text x="21.7500%" y="1103.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.10%)</title><rect x="21.5000%" y="1077" width="0.1000%" height="15" fill="rgb(219,175,34)" fg:x="430" fg:w="2"/><text x="21.7500%" y="1087.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.10%)</title><rect x="21.5000%" y="1061" width="0.1000%" height="15" fill="rgb(236,10,46)" fg:x="430" fg:w="2"/><text x="21.7500%" y="1071.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.10%)</title><rect x="21.5000%" y="1045" width="0.1000%" height="15" fill="rgb(240,211,16)" fg:x="430" fg:w="2"/><text x="21.7500%" y="1055.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.05%)</title><rect x="21.5500%" y="1029" width="0.0500%" height="15" fill="rgb(205,3,43)" fg:x="431" fg:w="1"/><text x="21.8000%" y="1039.50"></text></g><g><title>arvz`core::ops::function::FnMut::call_mut (1 samples, 0.05%)</title><rect x="21.5500%" y="1013" width="0.0500%" height="15" fill="rgb(245,7,22)" fg:x="431" fg:w="1"/><text x="21.8000%" y="1023.50"></text></g><g><title>arvz`ratatui::text::span::Span::width (1 samples, 0.05%)</title><rect x="21.5500%" y="997" width="0.0500%" height="15" fill="rgb(239,132,32)" fg:x="431" fg:w="1"/><text x="21.8000%" y="1007.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (1 samples, 0.05%)</title><rect x="21.5500%" y="981" width="0.0500%" height="15" fill="rgb(228,202,34)" fg:x="431" fg:w="1"/><text x="21.8000%" y="991.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (1 samples, 0.05%)</title><rect x="21.5500%" y="965" width="0.0500%" height="15" fill="rgb(254,200,22)" fg:x="431" fg:w="1"/><text x="21.8000%" y="975.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.05%)</title><rect x="21.5500%" y="949" width="0.0500%" height="15" fill="rgb(219,10,39)" fg:x="431" fg:w="1"/><text x="21.8000%" y="959.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="21.5500%" y="933" width="0.0500%" height="15" fill="rgb(226,210,39)" fg:x="431" fg:w="1"/><text x="21.8000%" y="943.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (1 samples, 0.05%)</title><rect x="21.5500%" y="917" width="0.0500%" height="15" fill="rgb(208,219,16)" fg:x="431" fg:w="1"/><text x="21.8000%" y="927.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="21.5500%" y="901" width="0.0500%" height="15" fill="rgb(216,158,51)" fg:x="431" fg:w="1"/><text x="21.8000%" y="911.50"></text></g><g><title>arvz`core::str::validations::next_code_point (1 samples, 0.05%)</title><rect x="21.5500%" y="885" width="0.0500%" height="15" fill="rgb(233,14,44)" fg:x="431" fg:w="1"/><text x="21.8000%" y="895.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="21.6000%" y="1013" width="0.0500%" height="15" fill="rgb(237,97,39)" fg:x="432" fg:w="1"/><text x="21.8500%" y="1023.50"></text></g><g><title>arvz`core::str::validations::next_code_point (1 samples, 0.05%)</title><rect x="21.6000%" y="997" width="0.0500%" height="15" fill="rgb(218,198,43)" fg:x="432" fg:w="1"/><text x="21.8500%" y="1007.50"></text></g><g><title>arvz`&lt;&amp;W as ratatui::widgets::Widget&gt;::render (13 samples, 0.65%)</title><rect x="21.0500%" y="1141" width="0.6500%" height="15" fill="rgb(231,104,20)" fg:x="421" fg:w="13"/><text x="21.3000%" y="1151.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as ratatui::widgets::WidgetRef&gt;::render_ref (13 samples, 0.65%)</title><rect x="21.0500%" y="1125" width="0.6500%" height="15" fill="rgb(254,36,13)" fg:x="421" fg:w="13"/><text x="21.3000%" y="1135.50"></text></g><g><title>arvz`ratatui::text::span::Span::width (2 samples, 0.10%)</title><rect x="21.6000%" y="1109" width="0.1000%" height="15" fill="rgb(248,14,50)" fg:x="432" fg:w="2"/><text x="21.8500%" y="1119.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (2 samples, 0.10%)</title><rect x="21.6000%" y="1093" width="0.1000%" height="15" fill="rgb(217,107,29)" fg:x="432" fg:w="2"/><text x="21.8500%" y="1103.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (2 samples, 0.10%)</title><rect x="21.6000%" y="1077" width="0.1000%" height="15" fill="rgb(251,169,33)" fg:x="432" fg:w="2"/><text x="21.8500%" y="1087.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.10%)</title><rect x="21.6000%" y="1061" width="0.1000%" height="15" fill="rgb(217,108,32)" fg:x="432" fg:w="2"/><text x="21.8500%" y="1071.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.10%)</title><rect x="21.6000%" y="1045" width="0.1000%" height="15" fill="rgb(219,66,42)" fg:x="432" fg:w="2"/><text x="21.8500%" y="1055.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (2 samples, 0.10%)</title><rect x="21.6000%" y="1029" width="0.1000%" height="15" fill="rgb(206,180,7)" fg:x="432" fg:w="2"/><text x="21.8500%" y="1039.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.05%)</title><rect x="21.6500%" y="1013" width="0.0500%" height="15" fill="rgb(208,226,31)" fg:x="433" fg:w="1"/><text x="21.9000%" y="1023.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (1 samples, 0.05%)</title><rect x="21.6500%" y="997" width="0.0500%" height="15" fill="rgb(218,26,49)" fg:x="433" fg:w="1"/><text x="21.9000%" y="1007.50"></text></g><g><title>arvz`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.05%)</title><rect x="21.7000%" y="1125" width="0.0500%" height="15" fill="rgb(233,197,48)" fg:x="434" fg:w="1"/><text x="21.9500%" y="1135.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.05%)</title><rect x="21.7000%" y="1109" width="0.0500%" height="15" fill="rgb(252,181,51)" fg:x="434" fg:w="1"/><text x="21.9500%" y="1119.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (2 samples, 0.10%)</title><rect x="21.7500%" y="1125" width="0.1000%" height="15" fill="rgb(253,90,19)" fg:x="435" fg:w="2"/><text x="22.0000%" y="1135.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::left (1 samples, 0.05%)</title><rect x="21.8000%" y="1109" width="0.0500%" height="15" fill="rgb(215,171,30)" fg:x="436" fg:w="1"/><text x="22.0500%" y="1119.50"></text></g><g><title>arvz`&lt;ratatui::text::text::Text as ratatui::widgets::Widget&gt;::render (17 samples, 0.85%)</title><rect x="21.0500%" y="1173" width="0.8500%" height="15" fill="rgb(214,222,9)" fg:x="421" fg:w="17"/><text x="21.3000%" y="1183.50"></text></g><g><title>arvz`&lt;ratatui::text::text::Text as ratatui::widgets::WidgetRef&gt;::render_ref (17 samples, 0.85%)</title><rect x="21.0500%" y="1157" width="0.8500%" height="15" fill="rgb(223,3,22)" fg:x="421" fg:w="17"/><text x="21.3000%" y="1167.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (4 samples, 0.20%)</title><rect x="21.7000%" y="1141" width="0.2000%" height="15" fill="rgb(225,196,46)" fg:x="434" fg:w="4"/><text x="21.9500%" y="1151.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::intersection (1 samples, 0.05%)</title><rect x="21.8500%" y="1125" width="0.0500%" height="15" fill="rgb(209,110,37)" fg:x="437" fg:w="1"/><text x="22.1000%" y="1135.50"></text></g><g><title>arvz`core::cmp::min (1 samples, 0.05%)</title><rect x="21.8500%" y="1109" width="0.0500%" height="15" fill="rgb(249,89,12)" fg:x="437" fg:w="1"/><text x="22.1000%" y="1119.50"></text></g><g><title>arvz`core::cmp::Ord::min (1 samples, 0.05%)</title><rect x="21.8500%" y="1093" width="0.0500%" height="15" fill="rgb(226,27,33)" fg:x="437" fg:w="1"/><text x="22.1000%" y="1103.50"></text></g><g><title>arvz`core::cmp::min_by (1 samples, 0.05%)</title><rect x="21.8500%" y="1077" width="0.0500%" height="15" fill="rgb(213,82,22)" fg:x="437" fg:w="1"/><text x="22.1000%" y="1087.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.05%)</title><rect x="21.9000%" y="1141" width="0.0500%" height="15" fill="rgb(248,140,0)" fg:x="438" fg:w="1"/><text x="22.1500%" y="1151.50"></text></g><g><title>arvz`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.05%)</title><rect x="21.9000%" y="1125" width="0.0500%" height="15" fill="rgb(228,106,3)" fg:x="438" fg:w="1"/><text x="22.1500%" y="1135.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (2 samples, 0.10%)</title><rect x="21.9000%" y="1157" width="0.1000%" height="15" fill="rgb(209,23,37)" fg:x="438" fg:w="2"/><text x="22.1500%" y="1167.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::left (1 samples, 0.05%)</title><rect x="21.9500%" y="1141" width="0.0500%" height="15" fill="rgb(241,93,50)" fg:x="439" fg:w="1"/><text x="22.2000%" y="1151.50"></text></g><g><title>arvz`ratatui::widgets::table::table::Table::render_header (22 samples, 1.10%)</title><rect x="20.9500%" y="1205" width="1.1000%" height="15" fill="rgb(253,46,43)" fg:x="419" fg:w="22"/><text x="21.2000%" y="1215.50"></text></g><g><title>arvz`ratatui::widgets::table::cell::Cell::render (20 samples, 1.00%)</title><rect x="21.0500%" y="1189" width="1.0000%" height="15" fill="rgb(226,206,43)" fg:x="421" fg:w="20"/><text x="21.3000%" y="1199.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (3 samples, 0.15%)</title><rect x="21.9000%" y="1173" width="0.1500%" height="15" fill="rgb(217,54,7)" fg:x="438" fg:w="3"/><text x="22.1500%" y="1183.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (1 samples, 0.05%)</title><rect x="22.0000%" y="1157" width="0.0500%" height="15" fill="rgb(223,5,52)" fg:x="440" fg:w="1"/><text x="22.2500%" y="1167.50"></text></g><g><title>arvz`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="22.1000%" y="1189" width="0.0500%" height="15" fill="rgb(206,52,46)" fg:x="442" fg:w="1"/><text x="22.3500%" y="1199.50"></text></g><g><title>arvz`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.05%)</title><rect x="22.1000%" y="1173" width="0.0500%" height="15" fill="rgb(253,136,11)" fg:x="442" fg:w="1"/><text x="22.3500%" y="1183.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.35%)</title><rect x="22.3000%" y="1157" width="0.3500%" height="15" fill="rgb(208,106,33)" fg:x="446" fg:w="7"/><text x="22.5500%" y="1167.50"></text></g><g><title>arvz`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.40%)</title><rect x="22.3000%" y="1173" width="0.4000%" height="15" fill="rgb(206,54,4)" fg:x="446" fg:w="8"/><text x="22.5500%" y="1183.50"></text></g><g><title>arvz`&lt;u16 as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.05%)</title><rect x="22.6500%" y="1157" width="0.0500%" height="15" fill="rgb(213,3,15)" fg:x="453" fg:w="1"/><text x="22.9000%" y="1167.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (4 samples, 0.20%)</title><rect x="22.7500%" y="1157" width="0.2000%" height="15" fill="rgb(252,211,39)" fg:x="455" fg:w="4"/><text x="23.0000%" y="1167.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::index_of (11 samples, 0.55%)</title><rect x="22.9500%" y="1157" width="0.5500%" height="15" fill="rgb(223,6,36)" fg:x="459" fg:w="11"/><text x="23.2000%" y="1167.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::bottom (2 samples, 0.10%)</title><rect x="23.5000%" y="1157" width="0.1000%" height="15" fill="rgb(252,169,45)" fg:x="470" fg:w="2"/><text x="23.7500%" y="1167.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (20 samples, 1.00%)</title><rect x="22.7000%" y="1173" width="1.0000%" height="15" fill="rgb(212,48,26)" fg:x="454" fg:w="20"/><text x="22.9500%" y="1183.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::left (2 samples, 0.10%)</title><rect x="23.6000%" y="1157" width="0.1000%" height="15" fill="rgb(251,102,48)" fg:x="472" fg:w="2"/><text x="23.8500%" y="1167.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::index_of (1 samples, 0.05%)</title><rect x="23.7000%" y="1173" width="0.0500%" height="15" fill="rgb(243,208,16)" fg:x="474" fg:w="1"/><text x="23.9500%" y="1183.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (1 samples, 0.05%)</title><rect x="23.9000%" y="1141" width="0.0500%" height="15" fill="rgb(219,96,24)" fg:x="478" fg:w="1"/><text x="24.1500%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (2 samples, 0.10%)</title><rect x="23.9000%" y="1157" width="0.1000%" height="15" fill="rgb(219,33,29)" fg:x="478" fg:w="2"/><text x="24.1500%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (1 samples, 0.05%)</title><rect x="23.9500%" y="1141" width="0.0500%" height="15" fill="rgb(223,176,5)" fg:x="479" fg:w="1"/><text x="24.2000%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="23.9500%" y="1125" width="0.0500%" height="15" fill="rgb(228,140,14)" fg:x="479" fg:w="1"/><text x="24.2000%" y="1135.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (1 samples, 0.05%)</title><rect x="24.0000%" y="1141" width="0.0500%" height="15" fill="rgb(217,179,31)" fg:x="480" fg:w="1"/><text x="24.2500%" y="1151.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (42 samples, 2.10%)</title><rect x="22.1500%" y="1189" width="2.1000%" height="15" fill="rgb(230,9,30)" fg:x="443" fg:w="42"/><text x="22.4000%" y="1199.50">a..</text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (10 samples, 0.50%)</title><rect x="23.7500%" y="1173" width="0.5000%" height="15" fill="rgb(230,136,20)" fg:x="475" fg:w="10"/><text x="24.0000%" y="1183.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::remove (5 samples, 0.25%)</title><rect x="24.0000%" y="1157" width="0.2500%" height="15" fill="rgb(215,210,22)" fg:x="480" fg:w="5"/><text x="24.2500%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::remove (4 samples, 0.20%)</title><rect x="24.0500%" y="1141" width="0.2000%" height="15" fill="rgb(218,43,5)" fg:x="481" fg:w="4"/><text x="24.3000%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::difference (1 samples, 0.05%)</title><rect x="24.2000%" y="1125" width="0.0500%" height="15" fill="rgb(216,11,5)" fg:x="484" fg:w="1"/><text x="24.4500%" y="1135.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::new (2 samples, 0.10%)</title><rect x="24.2500%" y="1189" width="0.1000%" height="15" fill="rgb(209,82,29)" fg:x="485" fg:w="2"/><text x="24.5000%" y="1199.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.10%)</title><rect x="24.4500%" y="1125" width="0.1000%" height="15" fill="rgb(244,115,12)" fg:x="489" fg:w="2"/><text x="24.7000%" y="1135.50"></text></g><g><title>arvz`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.15%)</title><rect x="24.6000%" y="1029" width="0.1500%" height="15" fill="rgb(222,82,18)" fg:x="492" fg:w="3"/><text x="24.8500%" y="1039.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.15%)</title><rect x="24.6000%" y="1013" width="0.1500%" height="15" fill="rgb(249,227,8)" fg:x="492" fg:w="3"/><text x="24.8500%" y="1023.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.10%)</title><rect x="24.6500%" y="997" width="0.1000%" height="15" fill="rgb(253,141,45)" fg:x="493" fg:w="2"/><text x="24.9000%" y="1007.50"></text></g><g><title>arvz`alloc::alloc::Global::alloc_impl (2 samples, 0.10%)</title><rect x="24.6500%" y="981" width="0.1000%" height="15" fill="rgb(234,184,4)" fg:x="493" fg:w="2"/><text x="24.9000%" y="991.50"></text></g><g><title>arvz`&lt;ratatui::text::span::Span as core::clone::Clone&gt;::clone (4 samples, 0.20%)</title><rect x="24.6000%" y="1077" width="0.2000%" height="15" fill="rgb(218,194,23)" fg:x="492" fg:w="4"/><text x="24.8500%" y="1087.50"></text></g><g><title>arvz`&lt;alloc::borrow::Cow&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.20%)</title><rect x="24.6000%" y="1061" width="0.2000%" height="15" fill="rgb(235,66,41)" fg:x="492" fg:w="4"/><text x="24.8500%" y="1071.50"></text></g><g><title>arvz`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.20%)</title><rect x="24.6000%" y="1045" width="0.2000%" height="15" fill="rgb(245,217,1)" fg:x="492" fg:w="4"/><text x="24.8500%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="24.7500%" y="1029" width="0.0500%" height="15" fill="rgb(229,91,1)" fg:x="495" fg:w="1"/><text x="25.0000%" y="1039.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="24.8500%" y="1061" width="0.0500%" height="15" fill="rgb(207,101,30)" fg:x="497" fg:w="1"/><text x="25.1000%" y="1071.50"></text></g><g><title>arvz`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="24.8500%" y="1045" width="0.0500%" height="15" fill="rgb(223,82,49)" fg:x="497" fg:w="1"/><text x="25.1000%" y="1055.50"></text></g><g><title>arvz`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.35%)</title><rect x="24.6000%" y="1093" width="0.3500%" height="15" fill="rgb(218,167,17)" fg:x="492" fg:w="7"/><text x="24.8500%" y="1103.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.15%)</title><rect x="24.8000%" y="1077" width="0.1500%" height="15" fill="rgb(208,103,14)" fg:x="496" fg:w="3"/><text x="25.0500%" y="1087.50"></text></g><g><title>arvz`core::alloc::layout::Layout::array::inner (1 samples, 0.05%)</title><rect x="24.9000%" y="1061" width="0.0500%" height="15" fill="rgb(238,20,8)" fg:x="498" fg:w="1"/><text x="25.1500%" y="1071.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as core::clone::Clone&gt;::clone (9 samples, 0.45%)</title><rect x="24.5500%" y="1125" width="0.4500%" height="15" fill="rgb(218,80,54)" fg:x="491" fg:w="9"/><text x="24.8000%" y="1135.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.45%)</title><rect x="24.5500%" y="1109" width="0.4500%" height="15" fill="rgb(240,144,17)" fg:x="491" fg:w="9"/><text x="24.8000%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="24.9500%" y="1093" width="0.0500%" height="15" fill="rgb(245,27,50)" fg:x="499" fg:w="1"/><text x="25.2000%" y="1103.50"></text></g><g><title>arvz`&lt;ratatui::text::text::Text as core::clone::Clone&gt;::clone (13 samples, 0.65%)</title><rect x="24.4000%" y="1173" width="0.6500%" height="15" fill="rgb(251,51,7)" fg:x="488" fg:w="13"/><text x="24.6500%" y="1183.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.65%)</title><rect x="24.4000%" y="1157" width="0.6500%" height="15" fill="rgb(245,217,29)" fg:x="488" fg:w="13"/><text x="24.6500%" y="1167.50"></text></g><g><title>arvz`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.65%)</title><rect x="24.4000%" y="1141" width="0.6500%" height="15" fill="rgb(221,176,29)" fg:x="488" fg:w="13"/><text x="24.6500%" y="1151.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="25.0000%" y="1125" width="0.0500%" height="15" fill="rgb(212,180,24)" fg:x="500" fg:w="1"/><text x="25.2500%" y="1135.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="25.0000%" y="1109" width="0.0500%" height="15" fill="rgb(254,24,2)" fg:x="500" fg:w="1"/><text x="25.2500%" y="1119.50"></text></g><g><title>arvz`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="25.0000%" y="1093" width="0.0500%" height="15" fill="rgb(230,100,2)" fg:x="500" fg:w="1"/><text x="25.2500%" y="1103.50"></text></g><g><title>arvz`&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="25.5500%" y="1029" width="0.0500%" height="15" fill="rgb(219,142,25)" fg:x="511" fg:w="1"/><text x="25.8000%" y="1039.50"></text></g><g><title>arvz`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.20%)</title><rect x="26.0500%" y="997" width="0.2000%" height="15" fill="rgb(240,73,43)" fg:x="521" fg:w="4"/><text x="26.3000%" y="1007.50"></text></g><g><title>arvz`core::char::methods::_&lt;impl char&gt;::len_utf8 (1 samples, 0.05%)</title><rect x="26.2500%" y="997" width="0.0500%" height="15" fill="rgb(214,114,15)" fg:x="525" fg:w="1"/><text x="26.5000%" y="1007.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::take (1 samples, 0.05%)</title><rect x="26.3000%" y="997" width="0.0500%" height="15" fill="rgb(207,130,4)" fg:x="526" fg:w="1"/><text x="26.5500%" y="1007.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::chars (2 samples, 0.10%)</title><rect x="26.3500%" y="997" width="0.1000%" height="15" fill="rgb(221,25,40)" fg:x="527" fg:w="2"/><text x="26.6000%" y="1007.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::is_char_boundary (6 samples, 0.30%)</title><rect x="26.6000%" y="965" width="0.3000%" height="15" fill="rgb(241,184,7)" fg:x="532" fg:w="6"/><text x="26.8500%" y="975.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (17 samples, 0.85%)</title><rect x="26.4500%" y="997" width="0.8500%" height="15" fill="rgb(235,159,4)" fg:x="529" fg:w="17"/><text x="26.7000%" y="1007.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (14 samples, 0.70%)</title><rect x="26.6000%" y="981" width="0.7000%" height="15" fill="rgb(214,87,48)" fg:x="532" fg:w="14"/><text x="26.8500%" y="991.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (8 samples, 0.40%)</title><rect x="26.9000%" y="965" width="0.4000%" height="15" fill="rgb(246,198,24)" fg:x="538" fg:w="8"/><text x="27.1500%" y="975.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.35%)</title><rect x="27.7500%" y="965" width="0.3500%" height="15" fill="rgb(209,66,40)" fg:x="555" fg:w="7"/><text x="28.0000%" y="975.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.60%)</title><rect x="27.7500%" y="981" width="0.6000%" height="15" fill="rgb(233,147,39)" fg:x="555" fg:w="12"/><text x="28.0000%" y="991.50"></text></g><g><title>arvz`core::str::validations::next_code_point (5 samples, 0.25%)</title><rect x="28.1000%" y="965" width="0.2500%" height="15" fill="rgb(231,145,52)" fg:x="562" fg:w="5"/><text x="28.3500%" y="975.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.05%)</title><rect x="28.3500%" y="981" width="0.0500%" height="15" fill="rgb(206,20,26)" fg:x="567" fg:w="1"/><text x="28.6000%" y="991.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::is_char_boundary (4 samples, 0.20%)</title><rect x="28.5000%" y="949" width="0.2000%" height="15" fill="rgb(238,220,4)" fg:x="570" fg:w="4"/><text x="28.7500%" y="959.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (11 samples, 0.55%)</title><rect x="28.4000%" y="981" width="0.5500%" height="15" fill="rgb(252,195,42)" fg:x="568" fg:w="11"/><text x="28.6500%" y="991.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (10 samples, 0.50%)</title><rect x="28.4500%" y="965" width="0.5000%" height="15" fill="rgb(209,10,6)" fg:x="569" fg:w="10"/><text x="28.7000%" y="975.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (5 samples, 0.25%)</title><rect x="28.7000%" y="949" width="0.2500%" height="15" fill="rgb(229,3,52)" fg:x="574" fg:w="5"/><text x="28.9500%" y="959.50"></text></g><g><title>arvz`unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (3 samples, 0.15%)</title><rect x="28.9500%" y="981" width="0.1500%" height="15" fill="rgb(253,49,37)" fg:x="579" fg:w="3"/><text x="29.2000%" y="991.50"></text></g><g><title>arvz`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (5 samples, 0.25%)</title><rect x="29.1000%" y="981" width="0.2500%" height="15" fill="rgb(240,103,49)" fg:x="582" fg:w="5"/><text x="29.3500%" y="991.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.05%)</title><rect x="29.3000%" y="965" width="0.0500%" height="15" fill="rgb(250,182,30)" fg:x="586" fg:w="1"/><text x="29.5500%" y="975.50"></text></g><g><title>arvz`&lt;unicode_segmentation::grapheme::Graphemes as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 3.65%)</title><rect x="25.8500%" y="1013" width="3.6500%" height="15" fill="rgb(248,8,30)" fg:x="517" fg:w="73"/><text x="26.1000%" y="1023.50">arvz..</text></g><g><title>arvz`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (44 samples, 2.20%)</title><rect x="27.3000%" y="997" width="2.2000%" height="15" fill="rgb(237,120,30)" fg:x="546" fg:w="44"/><text x="27.5500%" y="1007.50">a..</text></g><g><title>arvz`unicode_segmentation::grapheme::check_pair (3 samples, 0.15%)</title><rect x="29.3500%" y="981" width="0.1500%" height="15" fill="rgb(221,146,34)" fg:x="587" fg:w="3"/><text x="29.6000%" y="991.50"></text></g><g><title>arvz`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 4.40%)</title><rect x="25.4500%" y="1061" width="4.4000%" height="15" fill="rgb(242,55,13)" fg:x="509" fg:w="88"/><text x="25.7000%" y="1071.50">arvz`..</text></g><g><title>arvz`core::iter::traits::iterator::Iterator::find (87 samples, 4.35%)</title><rect x="25.5000%" y="1045" width="4.3500%" height="15" fill="rgb(242,112,31)" fg:x="510" fg:w="87"/><text x="25.7500%" y="1055.50">arvz`..</text></g><g><title>arvz`core::iter::traits::iterator::Iterator::try_fold (85 samples, 4.25%)</title><rect x="25.6000%" y="1029" width="4.2500%" height="15" fill="rgb(249,192,27)" fg:x="512" fg:w="85"/><text x="25.8500%" y="1039.50">arvz`..</text></g><g><title>arvz`core::iter::traits::iterator::Iterator::find::check::_{{closure}} (7 samples, 0.35%)</title><rect x="29.5000%" y="1013" width="0.3500%" height="15" fill="rgb(208,204,44)" fg:x="590" fg:w="7"/><text x="29.7500%" y="1023.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.25%)</title><rect x="29.6000%" y="997" width="0.2500%" height="15" fill="rgb(208,93,54)" fg:x="592" fg:w="5"/><text x="29.8500%" y="1007.50"></text></g><g><title>arvz`ratatui::text::span::Span::styled_graphemes::_{{closure}} (4 samples, 0.20%)</title><rect x="29.6500%" y="981" width="0.2000%" height="15" fill="rgb(242,1,31)" fg:x="593" fg:w="4"/><text x="29.9000%" y="991.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (4 samples, 0.20%)</title><rect x="29.6500%" y="965" width="0.2000%" height="15" fill="rgb(241,83,25)" fg:x="593" fg:w="4"/><text x="29.9000%" y="975.50"></text></g><g><title>arvz`core::cmp::PartialEq::ne (4 samples, 0.20%)</title><rect x="29.6500%" y="949" width="0.2000%" height="15" fill="rgb(205,169,50)" fg:x="593" fg:w="4"/><text x="29.9000%" y="959.50"></text></g><g><title>arvz`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.20%)</title><rect x="29.6500%" y="933" width="0.2000%" height="15" fill="rgb(239,186,37)" fg:x="593" fg:w="4"/><text x="29.9000%" y="943.50"></text></g><g><title>arvz`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.10%)</title><rect x="29.7500%" y="917" width="0.1000%" height="15" fill="rgb(205,221,10)" fg:x="595" fg:w="2"/><text x="30.0000%" y="927.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 4.50%)</title><rect x="25.4000%" y="1077" width="4.5000%" height="15" fill="rgb(218,196,15)" fg:x="508" fg:w="90"/><text x="25.6500%" y="1087.50">arvz`..</text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="29.8500%" y="1061" width="0.0500%" height="15" fill="rgb(218,196,35)" fg:x="597" fg:w="1"/><text x="30.1000%" y="1071.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.45%)</title><rect x="30.5500%" y="981" width="0.4500%" height="15" fill="rgb(233,63,24)" fg:x="611" fg:w="9"/><text x="30.8000%" y="991.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 1.10%)</title><rect x="30.4500%" y="997" width="1.1000%" height="15" fill="rgb(225,8,4)" fg:x="609" fg:w="22"/><text x="30.7000%" y="1007.50"></text></g><g><title>arvz`core::str::validations::next_code_point (11 samples, 0.55%)</title><rect x="31.0000%" y="981" width="0.5500%" height="15" fill="rgb(234,105,35)" fg:x="620" fg:w="11"/><text x="31.2500%" y="991.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width::_{{closure}} (3 samples, 0.15%)</title><rect x="31.6500%" y="981" width="0.1500%" height="15" fill="rgb(236,21,32)" fg:x="633" fg:w="3"/><text x="31.9000%" y="991.50"></text></g><g><title>arvz`unicode_width::tables::charwidth::width (3 samples, 0.15%)</title><rect x="31.6500%" y="965" width="0.1500%" height="15" fill="rgb(228,109,6)" fg:x="633" fg:w="3"/><text x="31.9000%" y="975.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (40 samples, 2.00%)</title><rect x="29.9000%" y="1077" width="2.0000%" height="15" fill="rgb(229,215,31)" fg:x="598" fg:w="40"/><text x="30.1500%" y="1087.50">a..</text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (38 samples, 1.90%)</title><rect x="30.0000%" y="1061" width="1.9000%" height="15" fill="rgb(221,52,54)" fg:x="600" fg:w="38"/><text x="30.2500%" y="1071.50">a..</text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (37 samples, 1.85%)</title><rect x="30.0500%" y="1045" width="1.8500%" height="15" fill="rgb(252,129,43)" fg:x="601" fg:w="37"/><text x="30.3000%" y="1055.50">a..</text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 1.80%)</title><rect x="30.1000%" y="1029" width="1.8000%" height="15" fill="rgb(248,183,27)" fg:x="602" fg:w="36"/><text x="30.3500%" y="1039.50">a..</text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (36 samples, 1.80%)</title><rect x="30.1000%" y="1013" width="1.8000%" height="15" fill="rgb(250,0,22)" fg:x="602" fg:w="36"/><text x="30.3500%" y="1023.50">a..</text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (7 samples, 0.35%)</title><rect x="31.5500%" y="997" width="0.3500%" height="15" fill="rgb(213,166,10)" fg:x="631" fg:w="7"/><text x="31.8000%" y="1007.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::unwrap_or (2 samples, 0.10%)</title><rect x="31.8000%" y="981" width="0.1000%" height="15" fill="rgb(207,163,36)" fg:x="636" fg:w="2"/><text x="32.0500%" y="991.50"></text></g><g><title>arvz`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.10%)</title><rect x="31.9000%" y="1077" width="0.1000%" height="15" fill="rgb(208,122,22)" fg:x="638" fg:w="2"/><text x="32.1500%" y="1087.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.10%)</title><rect x="31.9000%" y="1061" width="0.1000%" height="15" fill="rgb(207,104,49)" fg:x="638" fg:w="2"/><text x="32.1500%" y="1071.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::chars (4 samples, 0.20%)</title><rect x="32.0000%" y="1077" width="0.2000%" height="15" fill="rgb(248,211,50)" fg:x="640" fg:w="4"/><text x="32.2500%" y="1087.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.05%)</title><rect x="32.2000%" y="1061" width="0.0500%" height="15" fill="rgb(217,13,45)" fg:x="644" fg:w="1"/><text x="32.4500%" y="1071.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::index_of (5 samples, 0.25%)</title><rect x="32.2500%" y="1061" width="0.2500%" height="15" fill="rgb(211,216,49)" fg:x="645" fg:w="5"/><text x="32.5000%" y="1071.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (7 samples, 0.35%)</title><rect x="32.2000%" y="1077" width="0.3500%" height="15" fill="rgb(221,58,53)" fg:x="644" fg:w="7"/><text x="32.4500%" y="1087.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::right (1 samples, 0.05%)</title><rect x="32.5000%" y="1061" width="0.0500%" height="15" fill="rgb(220,112,41)" fg:x="650" fg:w="1"/><text x="32.7500%" y="1071.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (3 samples, 0.15%)</title><rect x="32.8500%" y="1061" width="0.1500%" height="15" fill="rgb(236,38,28)" fg:x="657" fg:w="3"/><text x="33.1000%" y="1071.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (2 samples, 0.10%)</title><rect x="32.9000%" y="1045" width="0.1000%" height="15" fill="rgb(227,195,22)" fg:x="658" fg:w="2"/><text x="33.1500%" y="1055.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::union (1 samples, 0.05%)</title><rect x="32.9500%" y="1029" width="0.0500%" height="15" fill="rgb(214,55,33)" fg:x="659" fg:w="1"/><text x="33.2000%" y="1039.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (10 samples, 0.50%)</title><rect x="32.5500%" y="1077" width="0.5000%" height="15" fill="rgb(248,80,13)" fg:x="651" fg:w="10"/><text x="32.8000%" y="1087.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::remove (1 samples, 0.05%)</title><rect x="33.0000%" y="1061" width="0.0500%" height="15" fill="rgb(238,52,6)" fg:x="660" fg:w="1"/><text x="33.2500%" y="1071.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::remove (1 samples, 0.05%)</title><rect x="33.0000%" y="1045" width="0.0500%" height="15" fill="rgb(224,198,47)" fg:x="660" fg:w="1"/><text x="33.2500%" y="1055.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="33.0000%" y="1029" width="0.0500%" height="15" fill="rgb(233,171,20)" fg:x="660" fg:w="1"/><text x="33.2500%" y="1039.50"></text></g><g><title>arvz`&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (1 samples, 0.05%)</title><rect x="33.1000%" y="1061" width="0.0500%" height="15" fill="rgb(241,30,25)" fg:x="662" fg:w="1"/><text x="33.3500%" y="1071.50"></text></g><g><title>arvz`DYLD-STUB$$memcpy (1 samples, 0.05%)</title><rect x="33.7500%" y="1029" width="0.0500%" height="15" fill="rgb(207,171,38)" fg:x="675" fg:w="1"/><text x="34.0000%" y="1039.50"></text></g><g><title>arvz`compact_str::repr::inline::InlineBuffer::new (3 samples, 0.15%)</title><rect x="33.8000%" y="1029" width="0.1500%" height="15" fill="rgb(234,70,1)" fg:x="676" fg:w="3"/><text x="34.0500%" y="1039.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_symbol (19 samples, 0.95%)</title><rect x="33.0500%" y="1077" width="0.9500%" height="15" fill="rgb(232,178,18)" fg:x="661" fg:w="19"/><text x="33.3000%" y="1087.50"></text></g><g><title>arvz`compact_str::CompactString::new (17 samples, 0.85%)</title><rect x="33.1500%" y="1061" width="0.8500%" height="15" fill="rgb(241,78,40)" fg:x="663" fg:w="17"/><text x="33.4000%" y="1071.50"></text></g><g><title>arvz`compact_str::repr::Repr::new (12 samples, 0.60%)</title><rect x="33.4000%" y="1045" width="0.6000%" height="15" fill="rgb(222,35,25)" fg:x="668" fg:w="12"/><text x="33.6500%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="33.9500%" y="1029" width="0.0500%" height="15" fill="rgb(207,92,16)" fg:x="679" fg:w="1"/><text x="34.2000%" y="1039.50"></text></g><g><title>arvz`unicode_segmentation::grapheme::GraphemeCursor::new (1 samples, 0.05%)</title><rect x="34.0000%" y="1045" width="0.0500%" height="15" fill="rgb(216,59,51)" fg:x="680" fg:w="1"/><text x="34.2500%" y="1055.50"></text></g><g><title>arvz`&lt;str as unicode_segmentation::UnicodeSegmentation&gt;::graphemes (2 samples, 0.10%)</title><rect x="34.0000%" y="1061" width="0.1000%" height="15" fill="rgb(213,80,28)" fg:x="680" fg:w="2"/><text x="34.2500%" y="1071.50"></text></g><g><title>arvz`unicode_segmentation::grapheme::new_graphemes (1 samples, 0.05%)</title><rect x="34.0500%" y="1045" width="0.0500%" height="15" fill="rgb(220,93,7)" fg:x="681" fg:w="1"/><text x="34.3000%" y="1055.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::filter (1 samples, 0.05%)</title><rect x="34.1000%" y="1061" width="0.0500%" height="15" fill="rgb(225,24,44)" fg:x="682" fg:w="1"/><text x="34.3500%" y="1071.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::or (1 samples, 0.05%)</title><rect x="34.1500%" y="1061" width="0.0500%" height="15" fill="rgb(243,74,40)" fg:x="683" fg:w="1"/><text x="34.4000%" y="1071.50"></text></g><g><title>arvz`ratatui::style::Style::patch (2 samples, 0.10%)</title><rect x="34.2000%" y="1061" width="0.1000%" height="15" fill="rgb(228,39,7)" fg:x="684" fg:w="2"/><text x="34.4500%" y="1071.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (1 samples, 0.05%)</title><rect x="34.2500%" y="1045" width="0.0500%" height="15" fill="rgb(227,79,8)" fg:x="685" fg:w="1"/><text x="34.5000%" y="1055.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (1 samples, 0.05%)</title><rect x="34.2500%" y="1029" width="0.0500%" height="15" fill="rgb(236,58,11)" fg:x="685" fg:w="1"/><text x="34.5000%" y="1039.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::union (1 samples, 0.05%)</title><rect x="34.2500%" y="1013" width="0.0500%" height="15" fill="rgb(249,63,35)" fg:x="685" fg:w="1"/><text x="34.5000%" y="1023.50"></text></g><g><title>arvz`&lt;&amp;W as ratatui::widgets::Widget&gt;::render (186 samples, 9.30%)</title><rect x="25.0500%" y="1109" width="9.3000%" height="15" fill="rgb(252,114,16)" fg:x="501" fg:w="186"/><text x="25.3000%" y="1119.50">arvz`&lt;&amp;W as r..</text></g><g><title>arvz`&lt;ratatui::text::span::Span as ratatui::widgets::WidgetRef&gt;::render_ref (186 samples, 9.30%)</title><rect x="25.0500%" y="1093" width="9.3000%" height="15" fill="rgb(254,151,24)" fg:x="501" fg:w="186"/><text x="25.3000%" y="1103.50">arvz`&lt;ratatui..</text></g><g><title>arvz`ratatui::text::span::Span::styled_graphemes (7 samples, 0.35%)</title><rect x="34.0000%" y="1077" width="0.3500%" height="15" fill="rgb(253,54,39)" fg:x="680" fg:w="7"/><text x="34.2500%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="34.3000%" y="1061" width="0.0500%" height="15" fill="rgb(243,25,45)" fg:x="686" fg:w="1"/><text x="34.5500%" y="1071.50"></text></g><g><title>arvz`core::cmp::Ord::min (4 samples, 0.20%)</title><rect x="34.3500%" y="1109" width="0.2000%" height="15" fill="rgb(234,134,9)" fg:x="687" fg:w="4"/><text x="34.6000%" y="1119.50"></text></g><g><title>arvz`core::cmp::min_by (4 samples, 0.20%)</title><rect x="34.3500%" y="1093" width="0.2000%" height="15" fill="rgb(227,166,31)" fg:x="687" fg:w="4"/><text x="34.6000%" y="1103.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::Ord for u16&gt;::cmp (1 samples, 0.05%)</title><rect x="34.5000%" y="1077" width="0.0500%" height="15" fill="rgb(245,143,41)" fg:x="690" fg:w="1"/><text x="34.7500%" y="1087.50"></text></g><g><title>arvz`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.05%)</title><rect x="34.7000%" y="1093" width="0.0500%" height="15" fill="rgb(238,181,32)" fg:x="694" fg:w="1"/><text x="34.9500%" y="1103.50"></text></g><g><title>arvz`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.20%)</title><rect x="34.7500%" y="1093" width="0.2000%" height="15" fill="rgb(224,113,18)" fg:x="695" fg:w="4"/><text x="35.0000%" y="1103.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.10%)</title><rect x="34.8500%" y="1077" width="0.1000%" height="15" fill="rgb(240,229,28)" fg:x="697" fg:w="2"/><text x="35.1000%" y="1087.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7 samples, 0.35%)</title><rect x="35.1500%" y="1077" width="0.3500%" height="15" fill="rgb(250,185,3)" fg:x="703" fg:w="7"/><text x="35.4000%" y="1087.50"></text></g><g><title>arvz`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.05%)</title><rect x="35.4500%" y="1061" width="0.0500%" height="15" fill="rgb(212,59,25)" fg:x="709" fg:w="1"/><text x="35.7000%" y="1071.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::index_of (12 samples, 0.60%)</title><rect x="35.5000%" y="1077" width="0.6000%" height="15" fill="rgb(221,87,20)" fg:x="710" fg:w="12"/><text x="35.7500%" y="1087.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::bottom (1 samples, 0.05%)</title><rect x="36.1000%" y="1077" width="0.0500%" height="15" fill="rgb(213,74,28)" fg:x="722" fg:w="1"/><text x="36.3500%" y="1087.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (25 samples, 1.25%)</title><rect x="34.9500%" y="1093" width="1.2500%" height="15" fill="rgb(224,132,34)" fg:x="699" fg:w="25"/><text x="35.2000%" y="1103.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::right (1 samples, 0.05%)</title><rect x="36.1500%" y="1077" width="0.0500%" height="15" fill="rgb(222,101,24)" fg:x="723" fg:w="1"/><text x="36.4000%" y="1087.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::index_of (1 samples, 0.05%)</title><rect x="36.2000%" y="1093" width="0.0500%" height="15" fill="rgb(254,142,4)" fg:x="724" fg:w="1"/><text x="36.4500%" y="1103.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="36.6000%" y="1061" width="0.0500%" height="15" fill="rgb(230,229,49)" fg:x="732" fg:w="1"/><text x="36.8500%" y="1071.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (1 samples, 0.05%)</title><rect x="36.6500%" y="1061" width="0.0500%" height="15" fill="rgb(238,70,47)" fg:x="733" fg:w="1"/><text x="36.9000%" y="1071.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (8 samples, 0.40%)</title><rect x="36.5500%" y="1077" width="0.4000%" height="15" fill="rgb(231,160,17)" fg:x="731" fg:w="8"/><text x="36.8000%" y="1087.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (5 samples, 0.25%)</title><rect x="36.7000%" y="1061" width="0.2500%" height="15" fill="rgb(218,68,53)" fg:x="734" fg:w="5"/><text x="36.9500%" y="1071.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (4 samples, 0.20%)</title><rect x="36.7500%" y="1045" width="0.2000%" height="15" fill="rgb(236,111,10)" fg:x="735" fg:w="4"/><text x="37.0000%" y="1055.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="36.9500%" y="1061" width="0.0500%" height="15" fill="rgb(224,34,41)" fg:x="739" fg:w="1"/><text x="37.2000%" y="1071.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (1 samples, 0.05%)</title><rect x="37.0000%" y="1061" width="0.0500%" height="15" fill="rgb(241,118,19)" fg:x="740" fg:w="1"/><text x="37.2500%" y="1071.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::difference (3 samples, 0.15%)</title><rect x="37.1500%" y="1045" width="0.1500%" height="15" fill="rgb(238,129,25)" fg:x="743" fg:w="3"/><text x="37.4000%" y="1055.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (23 samples, 1.15%)</title><rect x="36.2500%" y="1093" width="1.1500%" height="15" fill="rgb(238,22,31)" fg:x="725" fg:w="23"/><text x="36.5000%" y="1103.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::remove (9 samples, 0.45%)</title><rect x="36.9500%" y="1077" width="0.4500%" height="15" fill="rgb(222,174,48)" fg:x="739" fg:w="9"/><text x="37.2000%" y="1087.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::remove (7 samples, 0.35%)</title><rect x="37.0500%" y="1061" width="0.3500%" height="15" fill="rgb(206,152,40)" fg:x="741" fg:w="7"/><text x="37.3000%" y="1071.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (2 samples, 0.10%)</title><rect x="37.3000%" y="1045" width="0.1000%" height="15" fill="rgb(218,99,54)" fg:x="746" fg:w="2"/><text x="37.5500%" y="1055.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::bottom (1 samples, 0.05%)</title><rect x="37.4000%" y="1093" width="0.0500%" height="15" fill="rgb(220,174,26)" fg:x="748" fg:w="1"/><text x="37.6500%" y="1103.50"></text></g><g><title>arvz`core::cmp::max (2 samples, 0.10%)</title><rect x="37.4500%" y="1077" width="0.1000%" height="15" fill="rgb(245,116,9)" fg:x="749" fg:w="2"/><text x="37.7000%" y="1087.50"></text></g><g><title>arvz`core::cmp::Ord::max (2 samples, 0.10%)</title><rect x="37.4500%" y="1061" width="0.1000%" height="15" fill="rgb(209,72,35)" fg:x="749" fg:w="2"/><text x="37.7000%" y="1071.50"></text></g><g><title>arvz`core::cmp::max_by (2 samples, 0.10%)</title><rect x="37.4500%" y="1045" width="0.1000%" height="15" fill="rgb(226,126,21)" fg:x="749" fg:w="2"/><text x="37.7000%" y="1055.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::Ord for u16&gt;::cmp (2 samples, 0.10%)</title><rect x="37.4500%" y="1029" width="0.1000%" height="15" fill="rgb(227,192,1)" fg:x="749" fg:w="2"/><text x="37.7000%" y="1039.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (62 samples, 3.10%)</title><rect x="34.5500%" y="1109" width="3.1000%" height="15" fill="rgb(237,180,29)" fg:x="691" fg:w="62"/><text x="34.8000%" y="1119.50">arv..</text></g><g><title>arvz`ratatui::layout::rect::Rect::intersection (4 samples, 0.20%)</title><rect x="37.4500%" y="1093" width="0.2000%" height="15" fill="rgb(230,197,35)" fg:x="749" fg:w="4"/><text x="37.7000%" y="1103.50"></text></g><g><title>arvz`core::cmp::min (2 samples, 0.10%)</title><rect x="37.5500%" y="1077" width="0.1000%" height="15" fill="rgb(246,193,31)" fg:x="751" fg:w="2"/><text x="37.8000%" y="1087.50"></text></g><g><title>arvz`core::cmp::Ord::min (2 samples, 0.10%)</title><rect x="37.5500%" y="1061" width="0.1000%" height="15" fill="rgb(241,36,4)" fg:x="751" fg:w="2"/><text x="37.8000%" y="1071.50"></text></g><g><title>arvz`core::cmp::min_by (2 samples, 0.10%)</title><rect x="37.5500%" y="1045" width="0.1000%" height="15" fill="rgb(241,130,17)" fg:x="751" fg:w="2"/><text x="37.8000%" y="1055.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (2 samples, 0.10%)</title><rect x="37.5500%" y="1029" width="0.1000%" height="15" fill="rgb(206,137,32)" fg:x="751" fg:w="2"/><text x="37.8000%" y="1039.50"></text></g><g><title>arvz`core::cmp::max (1 samples, 0.05%)</title><rect x="37.6500%" y="1093" width="0.0500%" height="15" fill="rgb(237,228,51)" fg:x="753" fg:w="1"/><text x="37.9000%" y="1103.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::intersection (2 samples, 0.10%)</title><rect x="37.6500%" y="1109" width="0.1000%" height="15" fill="rgb(243,6,42)" fg:x="753" fg:w="2"/><text x="37.9000%" y="1119.50"></text></g><g><title>arvz`core::cmp::min (1 samples, 0.05%)</title><rect x="37.7000%" y="1093" width="0.0500%" height="15" fill="rgb(251,74,28)" fg:x="754" fg:w="1"/><text x="37.9500%" y="1103.50"></text></g><g><title>arvz`core::cmp::Ord::min (1 samples, 0.05%)</title><rect x="37.7000%" y="1077" width="0.0500%" height="15" fill="rgb(218,20,49)" fg:x="754" fg:w="1"/><text x="37.9500%" y="1087.50"></text></g><g><title>arvz`core::cmp::min_by (1 samples, 0.05%)</title><rect x="37.7000%" y="1061" width="0.0500%" height="15" fill="rgb(238,28,14)" fg:x="754" fg:w="1"/><text x="37.9500%" y="1071.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::right (1 samples, 0.05%)</title><rect x="37.7500%" y="1109" width="0.0500%" height="15" fill="rgb(229,40,46)" fg:x="755" fg:w="1"/><text x="38.0000%" y="1119.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::top (1 samples, 0.05%)</title><rect x="37.8000%" y="1109" width="0.0500%" height="15" fill="rgb(244,195,20)" fg:x="756" fg:w="1"/><text x="38.0500%" y="1119.50"></text></g><g><title>arvz`&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="37.9000%" y="981" width="0.0500%" height="15" fill="rgb(253,56,35)" fg:x="758" fg:w="1"/><text x="38.1500%" y="991.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.25%)</title><rect x="38.1000%" y="885" width="0.2500%" height="15" fill="rgb(210,149,44)" fg:x="762" fg:w="5"/><text x="38.3500%" y="895.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.50%)</title><rect x="38.0500%" y="901" width="0.5000%" height="15" fill="rgb(240,135,12)" fg:x="761" fg:w="10"/><text x="38.3000%" y="911.50"></text></g><g><title>arvz`core::str::validations::next_code_point (4 samples, 0.20%)</title><rect x="38.3500%" y="885" width="0.2000%" height="15" fill="rgb(251,24,50)" fg:x="767" fg:w="4"/><text x="38.6000%" y="895.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width::_{{closure}} (3 samples, 0.15%)</title><rect x="38.6500%" y="885" width="0.1500%" height="15" fill="rgb(243,200,47)" fg:x="773" fg:w="3"/><text x="38.9000%" y="895.50"></text></g><g><title>arvz`unicode_width::tables::charwidth::width (1 samples, 0.05%)</title><rect x="38.7500%" y="869" width="0.0500%" height="15" fill="rgb(224,166,26)" fg:x="775" fg:w="1"/><text x="39.0000%" y="879.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (21 samples, 1.05%)</title><rect x="37.9500%" y="981" width="1.0500%" height="15" fill="rgb(233,0,47)" fg:x="759" fg:w="21"/><text x="38.2000%" y="991.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (21 samples, 1.05%)</title><rect x="37.9500%" y="965" width="1.0500%" height="15" fill="rgb(253,80,5)" fg:x="759" fg:w="21"/><text x="38.2000%" y="975.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (21 samples, 1.05%)</title><rect x="37.9500%" y="949" width="1.0500%" height="15" fill="rgb(214,133,25)" fg:x="759" fg:w="21"/><text x="38.2000%" y="959.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 1.05%)</title><rect x="37.9500%" y="933" width="1.0500%" height="15" fill="rgb(209,27,14)" fg:x="759" fg:w="21"/><text x="38.2000%" y="943.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (20 samples, 1.00%)</title><rect x="38.0000%" y="917" width="1.0000%" height="15" fill="rgb(219,102,51)" fg:x="760" fg:w="20"/><text x="38.2500%" y="927.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (9 samples, 0.45%)</title><rect x="38.5500%" y="901" width="0.4500%" height="15" fill="rgb(237,18,16)" fg:x="771" fg:w="9"/><text x="38.8000%" y="911.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::unwrap_or (4 samples, 0.20%)</title><rect x="38.8000%" y="885" width="0.2000%" height="15" fill="rgb(241,85,17)" fg:x="776" fg:w="4"/><text x="39.0500%" y="895.50"></text></g><g><title>arvz`ratatui::text::line::Line::width (24 samples, 1.20%)</title><rect x="37.8500%" y="1109" width="1.2000%" height="15" fill="rgb(236,90,42)" fg:x="757" fg:w="24"/><text x="38.1000%" y="1119.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (24 samples, 1.20%)</title><rect x="37.8500%" y="1093" width="1.2000%" height="15" fill="rgb(249,57,21)" fg:x="757" fg:w="24"/><text x="38.1000%" y="1103.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (24 samples, 1.20%)</title><rect x="37.8500%" y="1077" width="1.2000%" height="15" fill="rgb(243,12,36)" fg:x="757" fg:w="24"/><text x="38.1000%" y="1087.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 1.20%)</title><rect x="37.8500%" y="1061" width="1.2000%" height="15" fill="rgb(253,128,47)" fg:x="757" fg:w="24"/><text x="38.1000%" y="1071.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 1.20%)</title><rect x="37.8500%" y="1045" width="1.2000%" height="15" fill="rgb(207,33,20)" fg:x="757" fg:w="24"/><text x="38.1000%" y="1055.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (24 samples, 1.20%)</title><rect x="37.8500%" y="1029" width="1.2000%" height="15" fill="rgb(233,215,35)" fg:x="757" fg:w="24"/><text x="38.1000%" y="1039.50"></text></g><g><title>arvz`core::ops::function::FnMut::call_mut (24 samples, 1.20%)</title><rect x="37.8500%" y="1013" width="1.2000%" height="15" fill="rgb(249,188,52)" fg:x="757" fg:w="24"/><text x="38.1000%" y="1023.50"></text></g><g><title>arvz`ratatui::text::span::Span::width (23 samples, 1.15%)</title><rect x="37.9000%" y="997" width="1.1500%" height="15" fill="rgb(225,12,32)" fg:x="758" fg:w="23"/><text x="38.1500%" y="1007.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::chars (1 samples, 0.05%)</title><rect x="39.0000%" y="981" width="0.0500%" height="15" fill="rgb(247,98,14)" fg:x="780" fg:w="1"/><text x="39.2500%" y="991.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.10%)</title><rect x="39.1500%" y="997" width="0.1000%" height="15" fill="rgb(247,219,48)" fg:x="783" fg:w="2"/><text x="39.4000%" y="1007.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.20%)</title><rect x="39.1000%" y="1013" width="0.2000%" height="15" fill="rgb(253,60,48)" fg:x="782" fg:w="4"/><text x="39.3500%" y="1023.50"></text></g><g><title>arvz`core::str::validations::next_code_point (1 samples, 0.05%)</title><rect x="39.2500%" y="997" width="0.0500%" height="15" fill="rgb(245,15,52)" fg:x="785" fg:w="1"/><text x="39.5000%" y="1007.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (8 samples, 0.40%)</title><rect x="39.0500%" y="1093" width="0.4000%" height="15" fill="rgb(220,133,28)" fg:x="781" fg:w="8"/><text x="39.3000%" y="1103.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (8 samples, 0.40%)</title><rect x="39.0500%" y="1077" width="0.4000%" height="15" fill="rgb(217,180,4)" fg:x="781" fg:w="8"/><text x="39.3000%" y="1087.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (8 samples, 0.40%)</title><rect x="39.0500%" y="1061" width="0.4000%" height="15" fill="rgb(251,24,1)" fg:x="781" fg:w="8"/><text x="39.3000%" y="1071.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.40%)</title><rect x="39.0500%" y="1045" width="0.4000%" height="15" fill="rgb(212,185,49)" fg:x="781" fg:w="8"/><text x="39.3000%" y="1055.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (8 samples, 0.40%)</title><rect x="39.0500%" y="1029" width="0.4000%" height="15" fill="rgb(215,175,22)" fg:x="781" fg:w="8"/><text x="39.3000%" y="1039.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (3 samples, 0.15%)</title><rect x="39.3000%" y="1013" width="0.1500%" height="15" fill="rgb(250,205,14)" fg:x="786" fg:w="3"/><text x="39.5500%" y="1023.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width::_{{closure}} (2 samples, 0.10%)</title><rect x="39.3500%" y="997" width="0.1000%" height="15" fill="rgb(225,211,22)" fg:x="787" fg:w="2"/><text x="39.6000%" y="1007.50"></text></g><g><title>arvz`unicode_width::tables::charwidth::width (2 samples, 0.10%)</title><rect x="39.3500%" y="981" width="0.1000%" height="15" fill="rgb(251,179,42)" fg:x="787" fg:w="2"/><text x="39.6000%" y="991.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as ratatui::widgets::WidgetRef&gt;::render_ref (289 samples, 14.45%)</title><rect x="25.0500%" y="1125" width="14.4500%" height="15" fill="rgb(208,216,51)" fg:x="501" fg:w="289"/><text x="25.3000%" y="1135.50">arvz`&lt;ratatui::text::l..</text></g><g><title>arvz`ratatui::text::span::Span::width (9 samples, 0.45%)</title><rect x="39.0500%" y="1109" width="0.4500%" height="15" fill="rgb(235,36,11)" fg:x="781" fg:w="9"/><text x="39.3000%" y="1119.50"></text></g><g><title>arvz`alloc::str::_&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (1 samples, 0.05%)</title><rect x="39.4500%" y="1093" width="0.0500%" height="15" fill="rgb(213,189,28)" fg:x="789" fg:w="1"/><text x="39.7000%" y="1103.50"></text></g><g><title>arvz`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.05%)</title><rect x="39.5000%" y="1125" width="0.0500%" height="15" fill="rgb(227,203,42)" fg:x="790" fg:w="1"/><text x="39.7500%" y="1135.50"></text></g><g><title>arvz`&lt;&amp;W as ratatui::widgets::Widget&gt;::render (291 samples, 14.55%)</title><rect x="25.0500%" y="1141" width="14.5500%" height="15" fill="rgb(244,72,36)" fg:x="501" fg:w="291"/><text x="25.3000%" y="1151.50">arvz`&lt;&amp;W as ratatui::w..</text></g><g><title>arvz`ratatui::layout::rect::Rect::right (1 samples, 0.05%)</title><rect x="39.5500%" y="1125" width="0.0500%" height="15" fill="rgb(213,53,17)" fg:x="791" fg:w="1"/><text x="39.8000%" y="1135.50"></text></g><g><title>arvz`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.05%)</title><rect x="39.6500%" y="1125" width="0.0500%" height="15" fill="rgb(207,167,3)" fg:x="793" fg:w="1"/><text x="39.9000%" y="1135.50"></text></g><g><title>arvz`&lt;ratatui::layout::rect::iter::Rows as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="39.6500%" y="1109" width="0.0500%" height="15" fill="rgb(216,98,30)" fg:x="793" fg:w="1"/><text x="39.9000%" y="1119.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::new (1 samples, 0.05%)</title><rect x="39.6500%" y="1093" width="0.0500%" height="15" fill="rgb(236,123,15)" fg:x="793" fg:w="1"/><text x="39.9000%" y="1103.50"></text></g><g><title>arvz`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.15%)</title><rect x="39.6000%" y="1141" width="0.1500%" height="15" fill="rgb(248,81,50)" fg:x="792" fg:w="3"/><text x="39.8500%" y="1151.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="39.7000%" y="1125" width="0.0500%" height="15" fill="rgb(214,120,4)" fg:x="794" fg:w="1"/><text x="39.9500%" y="1135.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.10%)</title><rect x="39.8500%" y="1109" width="0.1000%" height="15" fill="rgb(208,179,34)" fg:x="797" fg:w="2"/><text x="40.1000%" y="1119.50"></text></g><g><title>arvz`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.15%)</title><rect x="39.8500%" y="1125" width="0.1500%" height="15" fill="rgb(227,140,7)" fg:x="797" fg:w="3"/><text x="40.1000%" y="1135.50"></text></g><g><title>arvz`&lt;u16 as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.05%)</title><rect x="39.9500%" y="1109" width="0.0500%" height="15" fill="rgb(214,22,6)" fg:x="799" fg:w="1"/><text x="40.2000%" y="1119.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (9 samples, 0.45%)</title><rect x="40.1500%" y="1109" width="0.4500%" height="15" fill="rgb(207,137,27)" fg:x="803" fg:w="9"/><text x="40.4000%" y="1119.50"></text></g><g><title>arvz`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.20%)</title><rect x="40.4000%" y="1093" width="0.2000%" height="15" fill="rgb(210,8,46)" fg:x="808" fg:w="4"/><text x="40.6500%" y="1103.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::index_of (12 samples, 0.60%)</title><rect x="40.6000%" y="1109" width="0.6000%" height="15" fill="rgb(240,16,54)" fg:x="812" fg:w="12"/><text x="40.8500%" y="1119.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::bottom (1 samples, 0.05%)</title><rect x="41.2000%" y="1109" width="0.0500%" height="15" fill="rgb(211,209,29)" fg:x="824" fg:w="1"/><text x="41.4500%" y="1119.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::right (2 samples, 0.10%)</title><rect x="41.2500%" y="1109" width="0.1000%" height="15" fill="rgb(226,228,24)" fg:x="825" fg:w="2"/><text x="41.5000%" y="1119.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (28 samples, 1.40%)</title><rect x="40.0000%" y="1125" width="1.4000%" height="15" fill="rgb(222,84,9)" fg:x="800" fg:w="28"/><text x="40.2500%" y="1135.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::top (1 samples, 0.05%)</title><rect x="41.3500%" y="1109" width="0.0500%" height="15" fill="rgb(234,203,30)" fg:x="827" fg:w="1"/><text x="41.6000%" y="1119.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (2 samples, 0.10%)</title><rect x="41.8500%" y="1077" width="0.1000%" height="15" fill="rgb(238,109,14)" fg:x="837" fg:w="2"/><text x="42.1000%" y="1087.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (6 samples, 0.30%)</title><rect x="41.7500%" y="1109" width="0.3000%" height="15" fill="rgb(233,206,34)" fg:x="835" fg:w="6"/><text x="42.0000%" y="1119.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (6 samples, 0.30%)</title><rect x="41.7500%" y="1093" width="0.3000%" height="15" fill="rgb(220,167,47)" fg:x="835" fg:w="6"/><text x="42.0000%" y="1103.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (2 samples, 0.10%)</title><rect x="41.9500%" y="1077" width="0.1000%" height="15" fill="rgb(238,105,10)" fg:x="839" fg:w="2"/><text x="42.2000%" y="1087.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="42.0500%" y="1093" width="0.0500%" height="15" fill="rgb(213,227,17)" fg:x="841" fg:w="1"/><text x="42.3000%" y="1103.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (1 samples, 0.05%)</title><rect x="42.1000%" y="1093" width="0.0500%" height="15" fill="rgb(217,132,38)" fg:x="842" fg:w="1"/><text x="42.3500%" y="1103.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="42.2500%" y="1077" width="0.0500%" height="15" fill="rgb(242,146,4)" fg:x="845" fg:w="1"/><text x="42.5000%" y="1087.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::difference (1 samples, 0.05%)</title><rect x="42.3000%" y="1077" width="0.0500%" height="15" fill="rgb(212,61,9)" fg:x="846" fg:w="1"/><text x="42.5500%" y="1087.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (54 samples, 2.70%)</title><rect x="39.7500%" y="1141" width="2.7000%" height="15" fill="rgb(247,126,22)" fg:x="795" fg:w="54"/><text x="40.0000%" y="1151.50">ar..</text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (21 samples, 1.05%)</title><rect x="41.4000%" y="1125" width="1.0500%" height="15" fill="rgb(220,196,2)" fg:x="828" fg:w="21"/><text x="41.6500%" y="1135.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::remove (8 samples, 0.40%)</title><rect x="42.0500%" y="1109" width="0.4000%" height="15" fill="rgb(208,46,4)" fg:x="841" fg:w="8"/><text x="42.3000%" y="1119.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::remove (6 samples, 0.30%)</title><rect x="42.1500%" y="1093" width="0.3000%" height="15" fill="rgb(252,104,46)" fg:x="843" fg:w="6"/><text x="42.4000%" y="1103.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (2 samples, 0.10%)</title><rect x="42.3500%" y="1077" width="0.1000%" height="15" fill="rgb(237,152,48)" fg:x="847" fg:w="2"/><text x="42.6000%" y="1087.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::right (1 samples, 0.05%)</title><rect x="42.4500%" y="1141" width="0.0500%" height="15" fill="rgb(221,59,37)" fg:x="849" fg:w="1"/><text x="42.7000%" y="1151.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::top (1 samples, 0.05%)</title><rect x="42.5000%" y="1141" width="0.0500%" height="15" fill="rgb(209,202,51)" fg:x="850" fg:w="1"/><text x="42.7500%" y="1151.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.25%)</title><rect x="42.8000%" y="917" width="0.2500%" height="15" fill="rgb(228,81,30)" fg:x="856" fg:w="5"/><text x="43.0500%" y="927.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.45%)</title><rect x="42.8000%" y="933" width="0.4500%" height="15" fill="rgb(227,42,39)" fg:x="856" fg:w="9"/><text x="43.0500%" y="943.50"></text></g><g><title>arvz`core::str::validations::next_code_point (4 samples, 0.20%)</title><rect x="43.0500%" y="917" width="0.2000%" height="15" fill="rgb(221,26,2)" fg:x="861" fg:w="4"/><text x="43.3000%" y="927.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width::_{{closure}} (4 samples, 0.20%)</title><rect x="43.4500%" y="917" width="0.2000%" height="15" fill="rgb(254,61,31)" fg:x="869" fg:w="4"/><text x="43.7000%" y="927.50"></text></g><g><title>arvz`unicode_width::tables::charwidth::width (3 samples, 0.15%)</title><rect x="43.5000%" y="901" width="0.1500%" height="15" fill="rgb(222,173,38)" fg:x="870" fg:w="3"/><text x="43.7500%" y="911.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (1 samples, 0.05%)</title><rect x="43.6500%" y="917" width="0.0500%" height="15" fill="rgb(218,50,12)" fg:x="873" fg:w="1"/><text x="43.9000%" y="927.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (23 samples, 1.15%)</title><rect x="42.7000%" y="1013" width="1.1500%" height="15" fill="rgb(223,88,40)" fg:x="854" fg:w="23"/><text x="42.9500%" y="1023.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (23 samples, 1.15%)</title><rect x="42.7000%" y="997" width="1.1500%" height="15" fill="rgb(237,54,19)" fg:x="854" fg:w="23"/><text x="42.9500%" y="1007.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (23 samples, 1.15%)</title><rect x="42.7000%" y="981" width="1.1500%" height="15" fill="rgb(251,129,25)" fg:x="854" fg:w="23"/><text x="42.9500%" y="991.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 1.15%)</title><rect x="42.7000%" y="965" width="1.1500%" height="15" fill="rgb(238,97,19)" fg:x="854" fg:w="23"/><text x="42.9500%" y="975.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (23 samples, 1.15%)</title><rect x="42.7000%" y="949" width="1.1500%" height="15" fill="rgb(240,169,18)" fg:x="854" fg:w="23"/><text x="42.9500%" y="959.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (12 samples, 0.60%)</title><rect x="43.2500%" y="933" width="0.6000%" height="15" fill="rgb(230,187,49)" fg:x="865" fg:w="12"/><text x="43.5000%" y="943.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::unwrap_or (3 samples, 0.15%)</title><rect x="43.7000%" y="917" width="0.1500%" height="15" fill="rgb(209,44,26)" fg:x="874" fg:w="3"/><text x="43.9500%" y="927.50"></text></g><g><title>arvz`&lt;ratatui::text::text::Text as ratatui::widgets::WidgetRef&gt;::render_ref (377 samples, 18.85%)</title><rect x="25.0500%" y="1157" width="18.8500%" height="15" fill="rgb(244,0,6)" fg:x="501" fg:w="377"/><text x="25.3000%" y="1167.50">arvz`&lt;ratatui::text::text::Te..</text></g><g><title>arvz`ratatui::text::line::Line::width (27 samples, 1.35%)</title><rect x="42.5500%" y="1141" width="1.3500%" height="15" fill="rgb(248,18,21)" fg:x="851" fg:w="27"/><text x="42.8000%" y="1151.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (27 samples, 1.35%)</title><rect x="42.5500%" y="1125" width="1.3500%" height="15" fill="rgb(245,180,19)" fg:x="851" fg:w="27"/><text x="42.8000%" y="1135.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (27 samples, 1.35%)</title><rect x="42.5500%" y="1109" width="1.3500%" height="15" fill="rgb(252,118,36)" fg:x="851" fg:w="27"/><text x="42.8000%" y="1119.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 1.35%)</title><rect x="42.5500%" y="1093" width="1.3500%" height="15" fill="rgb(210,224,19)" fg:x="851" fg:w="27"/><text x="42.8000%" y="1103.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 1.35%)</title><rect x="42.5500%" y="1077" width="1.3500%" height="15" fill="rgb(218,30,24)" fg:x="851" fg:w="27"/><text x="42.8000%" y="1087.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (24 samples, 1.20%)</title><rect x="42.7000%" y="1061" width="1.2000%" height="15" fill="rgb(219,75,50)" fg:x="854" fg:w="24"/><text x="42.9500%" y="1071.50"></text></g><g><title>arvz`core::ops::function::FnMut::call_mut (24 samples, 1.20%)</title><rect x="42.7000%" y="1045" width="1.2000%" height="15" fill="rgb(234,72,50)" fg:x="854" fg:w="24"/><text x="42.9500%" y="1055.50"></text></g><g><title>arvz`ratatui::text::span::Span::width (24 samples, 1.20%)</title><rect x="42.7000%" y="1029" width="1.2000%" height="15" fill="rgb(219,100,48)" fg:x="854" fg:w="24"/><text x="42.9500%" y="1039.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::chars (1 samples, 0.05%)</title><rect x="43.8500%" y="1013" width="0.0500%" height="15" fill="rgb(253,5,41)" fg:x="877" fg:w="1"/><text x="44.1000%" y="1023.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="44.0500%" y="981" width="0.0500%" height="15" fill="rgb(247,181,11)" fg:x="881" fg:w="1"/><text x="44.3000%" y="991.50"></text></g><g><title>arvz`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="44.1000%" y="949" width="0.0500%" height="15" fill="rgb(222,223,25)" fg:x="882" fg:w="1"/><text x="44.3500%" y="959.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="44.1000%" y="933" width="0.0500%" height="15" fill="rgb(214,198,28)" fg:x="882" fg:w="1"/><text x="44.3500%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.05%)</title><rect x="44.1000%" y="917" width="0.0500%" height="15" fill="rgb(230,46,43)" fg:x="882" fg:w="1"/><text x="44.3500%" y="927.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.35%)</title><rect x="43.9000%" y="1125" width="0.3500%" height="15" fill="rgb(233,65,53)" fg:x="878" fg:w="7"/><text x="44.1500%" y="1135.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;[ratatui::text::line::Line]&gt; (5 samples, 0.25%)</title><rect x="44.0000%" y="1109" width="0.2500%" height="15" fill="rgb(221,121,27)" fg:x="880" fg:w="5"/><text x="44.2500%" y="1119.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::text::line::Line&gt; (5 samples, 0.25%)</title><rect x="44.0000%" y="1093" width="0.2500%" height="15" fill="rgb(247,70,47)" fg:x="880" fg:w="5"/><text x="44.2500%" y="1103.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::text::span::Span&gt;&gt; (5 samples, 0.25%)</title><rect x="44.0000%" y="1077" width="0.2500%" height="15" fill="rgb(228,85,35)" fg:x="880" fg:w="5"/><text x="44.2500%" y="1087.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.25%)</title><rect x="44.0000%" y="1061" width="0.2500%" height="15" fill="rgb(209,50,18)" fg:x="880" fg:w="5"/><text x="44.2500%" y="1071.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;[ratatui::text::span::Span]&gt; (4 samples, 0.20%)</title><rect x="44.0500%" y="1045" width="0.2000%" height="15" fill="rgb(250,19,35)" fg:x="881" fg:w="4"/><text x="44.3000%" y="1055.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::text::span::Span&gt; (4 samples, 0.20%)</title><rect x="44.0500%" y="1029" width="0.2000%" height="15" fill="rgb(253,107,29)" fg:x="881" fg:w="4"/><text x="44.3000%" y="1039.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (4 samples, 0.20%)</title><rect x="44.0500%" y="1013" width="0.2000%" height="15" fill="rgb(252,179,29)" fg:x="881" fg:w="4"/><text x="44.3000%" y="1023.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.20%)</title><rect x="44.0500%" y="997" width="0.2000%" height="15" fill="rgb(238,194,6)" fg:x="881" fg:w="4"/><text x="44.3000%" y="1007.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.15%)</title><rect x="44.1000%" y="981" width="0.1500%" height="15" fill="rgb(238,164,29)" fg:x="882" fg:w="3"/><text x="44.3500%" y="991.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.15%)</title><rect x="44.1000%" y="965" width="0.1500%" height="15" fill="rgb(224,25,9)" fg:x="882" fg:w="3"/><text x="44.3500%" y="975.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.10%)</title><rect x="44.1500%" y="949" width="0.1000%" height="15" fill="rgb(244,153,23)" fg:x="883" fg:w="2"/><text x="44.4000%" y="959.50"></text></g><g><title>arvz`&lt;ratatui::text::text::Text as ratatui::widgets::Widget&gt;::render (385 samples, 19.25%)</title><rect x="25.0500%" y="1173" width="19.2500%" height="15" fill="rgb(212,203,14)" fg:x="501" fg:w="385"/><text x="25.3000%" y="1183.50">arvz`&lt;ratatui::text::text::Tex..</text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::text::text::Text&gt; (8 samples, 0.40%)</title><rect x="43.9000%" y="1157" width="0.4000%" height="15" fill="rgb(220,164,20)" fg:x="878" fg:w="8"/><text x="44.1500%" y="1167.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::text::line::Line&gt;&gt; (8 samples, 0.40%)</title><rect x="43.9000%" y="1141" width="0.4000%" height="15" fill="rgb(222,203,48)" fg:x="878" fg:w="8"/><text x="44.1500%" y="1151.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ratatui::text::line::Line&gt;&gt; (1 samples, 0.05%)</title><rect x="44.2500%" y="1125" width="0.0500%" height="15" fill="rgb(215,159,22)" fg:x="885" fg:w="1"/><text x="44.5000%" y="1135.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.05%)</title><rect x="44.2500%" y="1109" width="0.0500%" height="15" fill="rgb(216,183,47)" fg:x="885" fg:w="1"/><text x="44.5000%" y="1119.50"></text></g><g><title>arvz`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.25%)</title><rect x="44.4000%" y="1157" width="0.2500%" height="15" fill="rgb(229,195,25)" fg:x="888" fg:w="5"/><text x="44.6500%" y="1167.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.20%)</title><rect x="44.4500%" y="1141" width="0.2000%" height="15" fill="rgb(224,132,51)" fg:x="889" fg:w="4"/><text x="44.7000%" y="1151.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (5 samples, 0.25%)</title><rect x="44.6500%" y="1141" width="0.2500%" height="15" fill="rgb(240,63,7)" fg:x="893" fg:w="5"/><text x="44.9000%" y="1151.50"></text></g><g><title>arvz`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.15%)</title><rect x="44.7500%" y="1125" width="0.1500%" height="15" fill="rgb(249,182,41)" fg:x="895" fg:w="3"/><text x="45.0000%" y="1135.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::index_of (8 samples, 0.40%)</title><rect x="44.9000%" y="1141" width="0.4000%" height="15" fill="rgb(243,47,26)" fg:x="898" fg:w="8"/><text x="45.1500%" y="1151.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::left (1 samples, 0.05%)</title><rect x="45.3000%" y="1141" width="0.0500%" height="15" fill="rgb(233,48,2)" fg:x="906" fg:w="1"/><text x="45.5500%" y="1151.50"></text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::get_mut (20 samples, 1.00%)</title><rect x="44.6500%" y="1157" width="1.0000%" height="15" fill="rgb(244,165,34)" fg:x="893" fg:w="20"/><text x="44.9000%" y="1167.50"></text></g><g><title>arvz`ratatui::layout::rect::Rect::right (6 samples, 0.30%)</title><rect x="45.3500%" y="1141" width="0.3000%" height="15" fill="rgb(207,89,7)" fg:x="907" fg:w="6"/><text x="45.6000%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (1 samples, 0.05%)</title><rect x="46.0000%" y="1125" width="0.0500%" height="15" fill="rgb(244,117,36)" fg:x="920" fg:w="1"/><text x="46.2500%" y="1135.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::bits (2 samples, 0.10%)</title><rect x="46.1000%" y="1109" width="0.1000%" height="15" fill="rgb(226,144,34)" fg:x="922" fg:w="2"/><text x="46.3500%" y="1119.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::insert (5 samples, 0.25%)</title><rect x="46.0000%" y="1141" width="0.2500%" height="15" fill="rgb(213,23,19)" fg:x="920" fg:w="5"/><text x="46.2500%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::insert (4 samples, 0.20%)</title><rect x="46.0500%" y="1125" width="0.2000%" height="15" fill="rgb(217,75,12)" fg:x="921" fg:w="4"/><text x="46.3000%" y="1135.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (1 samples, 0.05%)</title><rect x="46.2000%" y="1109" width="0.0500%" height="15" fill="rgb(224,159,17)" fg:x="924" fg:w="1"/><text x="46.4500%" y="1119.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (2 samples, 0.10%)</title><rect x="46.2500%" y="1125" width="0.1000%" height="15" fill="rgb(217,118,1)" fg:x="925" fg:w="2"/><text x="46.5000%" y="1135.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::difference (5 samples, 0.25%)</title><rect x="46.5500%" y="1109" width="0.2500%" height="15" fill="rgb(232,180,48)" fg:x="931" fg:w="5"/><text x="46.8000%" y="1119.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::set_style (25 samples, 1.25%)</title><rect x="45.6500%" y="1157" width="1.2500%" height="15" fill="rgb(230,27,33)" fg:x="913" fg:w="25"/><text x="45.9000%" y="1167.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::remove (13 samples, 0.65%)</title><rect x="46.2500%" y="1141" width="0.6500%" height="15" fill="rgb(205,31,21)" fg:x="925" fg:w="13"/><text x="46.5000%" y="1151.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::remove (11 samples, 0.55%)</title><rect x="46.3500%" y="1125" width="0.5500%" height="15" fill="rgb(253,59,4)" fg:x="927" fg:w="11"/><text x="46.6000%" y="1135.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::from_bits_retain (2 samples, 0.10%)</title><rect x="46.8000%" y="1109" width="0.1000%" height="15" fill="rgb(224,201,9)" fg:x="936" fg:w="2"/><text x="47.0500%" y="1119.50"></text></g><g><title>arvz`&lt;&amp;ratatui::widgets::table::table::Table as ratatui::widgets::StatefulWidget&gt;::render (796 samples, 39.80%)</title><rect x="7.2000%" y="1237" width="39.8000%" height="15" fill="rgb(229,206,30)" fg:x="144" fg:w="796"/><text x="7.4500%" y="1247.50">arvz`&lt;&amp;ratatui::widgets::table::table::Table as ratatui::widgets:..</text></g><g><title>arvz`&lt;ratatui::widgets::table::table::Table as ratatui::widgets::StatefulWidgetRef&gt;::render_ref (796 samples, 39.80%)</title><rect x="7.2000%" y="1221" width="39.8000%" height="15" fill="rgb(212,67,47)" fg:x="144" fg:w="796"/><text x="7.4500%" y="1231.50">arvz`&lt;ratatui::widgets::table::table::Table as ratatui::widgets::..</text></g><g><title>arvz`ratatui::widgets::table::table::Table::render_rows (499 samples, 24.95%)</title><rect x="22.0500%" y="1205" width="24.9500%" height="15" fill="rgb(211,96,50)" fg:x="441" fg:w="499"/><text x="22.3000%" y="1215.50">arvz`ratatui::widgets::table::table::Tab..</text></g><g><title>arvz`ratatui::widgets::table::cell::Cell::render (453 samples, 22.65%)</title><rect x="24.3500%" y="1189" width="22.6500%" height="15" fill="rgb(252,114,18)" fg:x="487" fg:w="453"/><text x="24.6000%" y="1199.50">arvz`ratatui::widgets::table::cell::..</text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::set_style (54 samples, 2.70%)</title><rect x="44.3000%" y="1173" width="2.7000%" height="15" fill="rgb(223,58,37)" fg:x="886" fg:w="54"/><text x="44.5500%" y="1183.50">ar..</text></g><g><title>arvz`ratatui::layout::rect::Rect::intersection (2 samples, 0.10%)</title><rect x="46.9000%" y="1157" width="0.1000%" height="15" fill="rgb(237,70,4)" fg:x="938" fg:w="2"/><text x="47.1500%" y="1167.50"></text></g><g><title>arvz`core::cmp::max (2 samples, 0.10%)</title><rect x="46.9000%" y="1141" width="0.1000%" height="15" fill="rgb(244,85,46)" fg:x="938" fg:w="2"/><text x="47.1500%" y="1151.50"></text></g><g><title>arvz`core::cmp::Ord::max (2 samples, 0.10%)</title><rect x="46.9000%" y="1125" width="0.1000%" height="15" fill="rgb(223,39,52)" fg:x="938" fg:w="2"/><text x="47.1500%" y="1135.50"></text></g><g><title>arvz`core::cmp::max_by (2 samples, 0.10%)</title><rect x="46.9000%" y="1109" width="0.1000%" height="15" fill="rgb(218,200,14)" fg:x="938" fg:w="2"/><text x="47.1500%" y="1119.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="47.2500%" y="917" width="0.0500%" height="15" fill="rgb(208,171,16)" fg:x="945" fg:w="1"/><text x="47.5000%" y="927.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.30%)</title><rect x="47.0500%" y="1061" width="0.3000%" height="15" fill="rgb(234,200,18)" fg:x="941" fg:w="6"/><text x="47.3000%" y="1071.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;[ratatui::text::line::Line]&gt; (5 samples, 0.25%)</title><rect x="47.1000%" y="1045" width="0.2500%" height="15" fill="rgb(228,45,11)" fg:x="942" fg:w="5"/><text x="47.3500%" y="1055.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::text::line::Line&gt; (4 samples, 0.20%)</title><rect x="47.1500%" y="1029" width="0.2000%" height="15" fill="rgb(237,182,11)" fg:x="943" fg:w="4"/><text x="47.4000%" y="1039.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::text::span::Span&gt;&gt; (3 samples, 0.15%)</title><rect x="47.2000%" y="1013" width="0.1500%" height="15" fill="rgb(241,175,49)" fg:x="944" fg:w="3"/><text x="47.4500%" y="1023.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.15%)</title><rect x="47.2000%" y="997" width="0.1500%" height="15" fill="rgb(247,38,35)" fg:x="944" fg:w="3"/><text x="47.4500%" y="1007.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;[ratatui::text::span::Span]&gt; (3 samples, 0.15%)</title><rect x="47.2000%" y="981" width="0.1500%" height="15" fill="rgb(228,39,49)" fg:x="944" fg:w="3"/><text x="47.4500%" y="991.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::text::span::Span&gt; (2 samples, 0.10%)</title><rect x="47.2500%" y="965" width="0.1000%" height="15" fill="rgb(226,101,26)" fg:x="945" fg:w="2"/><text x="47.5000%" y="975.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (2 samples, 0.10%)</title><rect x="47.2500%" y="949" width="0.1000%" height="15" fill="rgb(206,141,19)" fg:x="945" fg:w="2"/><text x="47.5000%" y="959.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.10%)</title><rect x="47.2500%" y="933" width="0.1000%" height="15" fill="rgb(211,200,13)" fg:x="945" fg:w="2"/><text x="47.5000%" y="943.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="47.3000%" y="917" width="0.0500%" height="15" fill="rgb(241,121,6)" fg:x="946" fg:w="1"/><text x="47.5500%" y="927.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="47.3000%" y="901" width="0.0500%" height="15" fill="rgb(234,221,29)" fg:x="946" fg:w="1"/><text x="47.5500%" y="911.50"></text></g><g><title>arvz`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="47.3000%" y="885" width="0.0500%" height="15" fill="rgb(229,136,5)" fg:x="946" fg:w="1"/><text x="47.5500%" y="895.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="47.3000%" y="869" width="0.0500%" height="15" fill="rgb(238,36,11)" fg:x="946" fg:w="1"/><text x="47.5500%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.05%)</title><rect x="47.3500%" y="1013" width="0.0500%" height="15" fill="rgb(251,55,41)" fg:x="947" fg:w="1"/><text x="47.6000%" y="1023.50"></text></g><g><title>arvz`ratatui::terminal::frame::Frame::render_stateful_widget (806 samples, 40.30%)</title><rect x="7.2000%" y="1269" width="40.3000%" height="15" fill="rgb(242,34,40)" fg:x="144" fg:w="806"/><text x="7.4500%" y="1279.50">arvz`ratatui::terminal::frame::Frame::render_stateful_widget</text></g><g><title>arvz`&lt;ratatui::widgets::table::table::Table as ratatui::widgets::StatefulWidget&gt;::render (806 samples, 40.30%)</title><rect x="7.2000%" y="1253" width="40.3000%" height="15" fill="rgb(215,42,17)" fg:x="144" fg:w="806"/><text x="7.4500%" y="1263.50">arvz`&lt;ratatui::widgets::table::table::Table as ratatui::widgets::S..</text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::widgets::table::table::Table&gt; (10 samples, 0.50%)</title><rect x="47.0000%" y="1237" width="0.5000%" height="15" fill="rgb(207,44,46)" fg:x="940" fg:w="10"/><text x="47.2500%" y="1247.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::widgets::table::row::Row&gt;&gt; (10 samples, 0.50%)</title><rect x="47.0000%" y="1221" width="0.5000%" height="15" fill="rgb(211,206,28)" fg:x="940" fg:w="10"/><text x="47.2500%" y="1231.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.50%)</title><rect x="47.0000%" y="1205" width="0.5000%" height="15" fill="rgb(237,167,16)" fg:x="940" fg:w="10"/><text x="47.2500%" y="1215.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;[ratatui::widgets::table::row::Row]&gt; (10 samples, 0.50%)</title><rect x="47.0000%" y="1189" width="0.5000%" height="15" fill="rgb(233,66,6)" fg:x="940" fg:w="10"/><text x="47.2500%" y="1199.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::widgets::table::row::Row&gt; (9 samples, 0.45%)</title><rect x="47.0500%" y="1173" width="0.4500%" height="15" fill="rgb(246,123,29)" fg:x="941" fg:w="9"/><text x="47.3000%" y="1183.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::widgets::table::cell::Cell&gt;&gt; (9 samples, 0.45%)</title><rect x="47.0500%" y="1157" width="0.4500%" height="15" fill="rgb(209,62,40)" fg:x="941" fg:w="9"/><text x="47.3000%" y="1167.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.45%)</title><rect x="47.0500%" y="1141" width="0.4500%" height="15" fill="rgb(218,4,25)" fg:x="941" fg:w="9"/><text x="47.3000%" y="1151.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;[ratatui::widgets::table::cell::Cell]&gt; (9 samples, 0.45%)</title><rect x="47.0500%" y="1125" width="0.4500%" height="15" fill="rgb(253,91,49)" fg:x="941" fg:w="9"/><text x="47.3000%" y="1135.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::widgets::table::cell::Cell&gt; (9 samples, 0.45%)</title><rect x="47.0500%" y="1109" width="0.4500%" height="15" fill="rgb(228,155,29)" fg:x="941" fg:w="9"/><text x="47.3000%" y="1119.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::text::text::Text&gt; (9 samples, 0.45%)</title><rect x="47.0500%" y="1093" width="0.4500%" height="15" fill="rgb(243,57,37)" fg:x="941" fg:w="9"/><text x="47.3000%" y="1103.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::text::line::Line&gt;&gt; (9 samples, 0.45%)</title><rect x="47.0500%" y="1077" width="0.4500%" height="15" fill="rgb(244,167,17)" fg:x="941" fg:w="9"/><text x="47.3000%" y="1087.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ratatui::text::line::Line&gt;&gt; (3 samples, 0.15%)</title><rect x="47.3500%" y="1061" width="0.1500%" height="15" fill="rgb(207,181,38)" fg:x="947" fg:w="3"/><text x="47.6000%" y="1071.50"></text></g><g><title>arvz`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.15%)</title><rect x="47.3500%" y="1045" width="0.1500%" height="15" fill="rgb(211,8,23)" fg:x="947" fg:w="3"/><text x="47.6000%" y="1055.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.15%)</title><rect x="47.3500%" y="1029" width="0.1500%" height="15" fill="rgb(235,11,44)" fg:x="947" fg:w="3"/><text x="47.6000%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.10%)</title><rect x="47.4000%" y="1013" width="0.1000%" height="15" fill="rgb(248,18,52)" fg:x="948" fg:w="2"/><text x="47.6500%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.10%)</title><rect x="47.4000%" y="997" width="0.1000%" height="15" fill="rgb(208,4,7)" fg:x="948" fg:w="2"/><text x="47.6500%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.10%)</title><rect x="47.4000%" y="981" width="0.1000%" height="15" fill="rgb(240,17,39)" fg:x="948" fg:w="2"/><text x="47.6500%" y="991.50"></text></g><g><title>arvz`&lt;ratatui::text::text::Text as core::default::Default&gt;::default (1 samples, 0.05%)</title><rect x="47.5500%" y="981" width="0.0500%" height="15" fill="rgb(207,170,3)" fg:x="951" fg:w="1"/><text x="47.8000%" y="991.50"></text></g><g><title>arvz`&lt;ratatui::style::Style as core::default::Default&gt;::default (1 samples, 0.05%)</title><rect x="47.5500%" y="965" width="0.0500%" height="15" fill="rgb(236,100,52)" fg:x="951" fg:w="1"/><text x="47.8000%" y="975.50"></text></g><g><title>arvz`ratatui::style::Style::new (1 samples, 0.05%)</title><rect x="47.5500%" y="949" width="0.0500%" height="15" fill="rgb(246,78,51)" fg:x="951" fg:w="1"/><text x="47.8000%" y="959.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::empty (1 samples, 0.05%)</title><rect x="47.5500%" y="933" width="0.0500%" height="15" fill="rgb(211,17,15)" fg:x="951" fg:w="1"/><text x="47.8000%" y="943.50"></text></g><g><title>arvz`&lt;ratatui::text::text::Text as core::convert::From&lt;alloc::vec::Vec&lt;ratatui::text::line::Line&gt;&gt;&gt;::from (2 samples, 0.10%)</title><rect x="47.5500%" y="997" width="0.1000%" height="15" fill="rgb(209,59,46)" fg:x="951" fg:w="2"/><text x="47.8000%" y="1007.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;ratatui::text::text::Text&gt; (1 samples, 0.05%)</title><rect x="47.6000%" y="981" width="0.0500%" height="15" fill="rgb(210,92,25)" fg:x="952" fg:w="1"/><text x="47.8500%" y="991.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::text::line::Line&gt;&gt; (1 samples, 0.05%)</title><rect x="47.6000%" y="965" width="0.0500%" height="15" fill="rgb(238,174,52)" fg:x="952" fg:w="1"/><text x="47.8500%" y="975.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ratatui::text::line::Line&gt;&gt; (1 samples, 0.05%)</title><rect x="47.6000%" y="949" width="0.0500%" height="15" fill="rgb(230,73,7)" fg:x="952" fg:w="1"/><text x="47.8500%" y="959.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.05%)</title><rect x="47.6000%" y="933" width="0.0500%" height="15" fill="rgb(243,124,40)" fg:x="952" fg:w="1"/><text x="47.8500%" y="943.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="47.6500%" y="933" width="0.0500%" height="15" fill="rgb(244,170,11)" fg:x="953" fg:w="1"/><text x="47.9000%" y="943.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.05%)</title><rect x="47.6500%" y="917" width="0.0500%" height="15" fill="rgb(207,114,54)" fg:x="953" fg:w="1"/><text x="47.9000%" y="927.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="47.6500%" y="901" width="0.0500%" height="15" fill="rgb(205,42,20)" fg:x="953" fg:w="1"/><text x="47.9000%" y="911.50"></text></g><g><title>arvz`&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="47.6500%" y="885" width="0.0500%" height="15" fill="rgb(230,30,28)" fg:x="953" fg:w="1"/><text x="47.9000%" y="895.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="47.6500%" y="869" width="0.0500%" height="15" fill="rgb(205,73,54)" fg:x="953" fg:w="1"/><text x="47.9000%" y="879.50"></text></g><g><title>arvz`&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="47.7000%" y="917" width="0.0500%" height="15" fill="rgb(254,227,23)" fg:x="954" fg:w="1"/><text x="47.9500%" y="927.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="47.7000%" y="901" width="0.0500%" height="15" fill="rgb(228,202,34)" fg:x="954" fg:w="1"/><text x="47.9500%" y="911.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="47.7000%" y="885" width="0.0500%" height="15" fill="rgb(222,225,37)" fg:x="954" fg:w="1"/><text x="47.9500%" y="895.50"></text></g><g><title>arvz`&lt;core::str::LinesMap as core::ops::function::FnMut&lt;(&amp;str,)&gt;&gt;::call_mut (1 samples, 0.05%)</title><rect x="47.7000%" y="869" width="0.0500%" height="15" fill="rgb(221,14,54)" fg:x="954" fg:w="1"/><text x="47.9500%" y="879.50"></text></g><g><title>arvz`&lt;core::str::LinesMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (1 samples, 0.05%)</title><rect x="47.7000%" y="853" width="0.0500%" height="15" fill="rgb(254,102,2)" fg:x="954" fg:w="1"/><text x="47.9500%" y="863.50"></text></g><g><title>arvz`&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_suffix_of (1 samples, 0.05%)</title><rect x="47.7000%" y="837" width="0.0500%" height="15" fill="rgb(232,104,17)" fg:x="954" fg:w="1"/><text x="47.9500%" y="847.50"></text></g><g><title>arvz`core::slice::_&lt;impl [T]&gt;::ends_with (1 samples, 0.05%)</title><rect x="47.7000%" y="821" width="0.0500%" height="15" fill="rgb(250,220,14)" fg:x="954" fg:w="1"/><text x="47.9500%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.05%)</title><rect x="47.7000%" y="805" width="0.0500%" height="15" fill="rgb(241,158,9)" fg:x="954" fg:w="1"/><text x="47.9500%" y="815.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as core::convert::From&lt;alloc::vec::Vec&lt;ratatui::text::span::Span&gt;&gt;&gt;::from (2 samples, 0.10%)</title><rect x="47.7500%" y="869" width="0.1000%" height="15" fill="rgb(246,9,43)" fg:x="955" fg:w="2"/><text x="48.0000%" y="879.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as core::default::Default&gt;::default (2 samples, 0.10%)</title><rect x="47.7500%" y="853" width="0.1000%" height="15" fill="rgb(206,73,33)" fg:x="955" fg:w="2"/><text x="48.0000%" y="863.50"></text></g><g><title>arvz`&lt;ratatui::style::Style as core::default::Default&gt;::default (2 samples, 0.10%)</title><rect x="47.7500%" y="837" width="0.1000%" height="15" fill="rgb(222,79,8)" fg:x="955" fg:w="2"/><text x="48.0000%" y="847.50"></text></g><g><title>arvz`ratatui::style::Style::new (1 samples, 0.05%)</title><rect x="47.8000%" y="821" width="0.0500%" height="15" fill="rgb(234,8,54)" fg:x="956" fg:w="1"/><text x="48.0500%" y="831.50"></text></g><g><title>arvz`alloc::alloc::exchange_malloc (1 samples, 0.05%)</title><rect x="47.8500%" y="869" width="0.0500%" height="15" fill="rgb(209,134,38)" fg:x="957" fg:w="1"/><text x="48.1000%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="47.8500%" y="853" width="0.0500%" height="15" fill="rgb(230,127,29)" fg:x="957" fg:w="1"/><text x="48.1000%" y="863.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.25%)</title><rect x="47.7000%" y="933" width="0.2500%" height="15" fill="rgb(242,44,41)" fg:x="954" fg:w="5"/><text x="47.9500%" y="943.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.20%)</title><rect x="47.7500%" y="917" width="0.2000%" height="15" fill="rgb(222,56,43)" fg:x="955" fg:w="4"/><text x="48.0000%" y="927.50"></text></g><g><title>arvz`core::ops::function::FnMut::call_mut (4 samples, 0.20%)</title><rect x="47.7500%" y="901" width="0.2000%" height="15" fill="rgb(238,39,47)" fg:x="955" fg:w="4"/><text x="48.0000%" y="911.50"></text></g><g><title>arvz`&lt;ratatui::text::line::Line as core::convert::From&lt;&amp;str&gt;&gt;::from (4 samples, 0.20%)</title><rect x="47.7500%" y="885" width="0.2000%" height="15" fill="rgb(226,79,43)" fg:x="955" fg:w="4"/><text x="48.0000%" y="895.50"></text></g><g><title>arvz`alloc::slice::hack::into_vec (1 samples, 0.05%)</title><rect x="47.9000%" y="869" width="0.0500%" height="15" fill="rgb(242,105,53)" fg:x="958" fg:w="1"/><text x="48.1500%" y="879.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.35%)</title><rect x="47.6500%" y="949" width="0.3500%" height="15" fill="rgb(251,132,46)" fg:x="953" fg:w="7"/><text x="47.9000%" y="959.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="47.9500%" y="933" width="0.0500%" height="15" fill="rgb(231,77,14)" fg:x="959" fg:w="1"/><text x="48.2000%" y="943.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="47.9500%" y="917" width="0.0500%" height="15" fill="rgb(240,135,9)" fg:x="959" fg:w="1"/><text x="48.2000%" y="927.50"></text></g><g><title>arvz`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="47.9500%" y="901" width="0.0500%" height="15" fill="rgb(248,109,14)" fg:x="959" fg:w="1"/><text x="48.2000%" y="911.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::collect (8 samples, 0.40%)</title><rect x="47.6500%" y="997" width="0.4000%" height="15" fill="rgb(227,146,52)" fg:x="953" fg:w="8"/><text x="47.9000%" y="1007.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.40%)</title><rect x="47.6500%" y="981" width="0.4000%" height="15" fill="rgb(232,54,3)" fg:x="953" fg:w="8"/><text x="47.9000%" y="991.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.40%)</title><rect x="47.6500%" y="965" width="0.4000%" height="15" fill="rgb(229,201,43)" fg:x="953" fg:w="8"/><text x="47.9000%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="48.0000%" y="949" width="0.0500%" height="15" fill="rgb(252,161,33)" fg:x="960" fg:w="1"/><text x="48.2500%" y="959.50"></text></g><g><title>arvz`core::ops::function::FnMut::call_mut (12 samples, 0.60%)</title><rect x="47.5000%" y="1093" width="0.6000%" height="15" fill="rgb(226,146,40)" fg:x="950" fg:w="12"/><text x="47.7500%" y="1103.50"></text></g><g><title>arvz`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.60%)</title><rect x="47.5000%" y="1077" width="0.6000%" height="15" fill="rgb(219,47,25)" fg:x="950" fg:w="12"/><text x="47.7500%" y="1087.50"></text></g><g><title>arvz`&lt;ratatui::widgets::table::cell::Cell as core::convert::From&lt;T&gt;&gt;::from (12 samples, 0.60%)</title><rect x="47.5000%" y="1061" width="0.6000%" height="15" fill="rgb(250,135,13)" fg:x="950" fg:w="12"/><text x="47.7500%" y="1071.50"></text></g><g><title>arvz`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.60%)</title><rect x="47.5000%" y="1045" width="0.6000%" height="15" fill="rgb(219,229,18)" fg:x="950" fg:w="12"/><text x="47.7500%" y="1055.50"></text></g><g><title>arvz`&lt;ratatui::text::text::Text as core::convert::From&lt;&amp;str&gt;&gt;::from (12 samples, 0.60%)</title><rect x="47.5000%" y="1029" width="0.6000%" height="15" fill="rgb(217,152,27)" fg:x="950" fg:w="12"/><text x="47.7500%" y="1039.50"></text></g><g><title>arvz`ratatui::text::text::Text::raw (12 samples, 0.60%)</title><rect x="47.5000%" y="1013" width="0.6000%" height="15" fill="rgb(225,71,47)" fg:x="950" fg:w="12"/><text x="47.7500%" y="1023.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::lines (1 samples, 0.05%)</title><rect x="48.0500%" y="997" width="0.0500%" height="15" fill="rgb(220,139,14)" fg:x="961" fg:w="1"/><text x="48.3000%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="48.0500%" y="981" width="0.0500%" height="15" fill="rgb(247,54,32)" fg:x="961" fg:w="1"/><text x="48.3000%" y="991.50"></text></g><g><title>arvz`ratatui::widgets::table::row::Row::new (14 samples, 0.70%)</title><rect x="47.5000%" y="1269" width="0.7000%" height="15" fill="rgb(252,131,39)" fg:x="950" fg:w="14"/><text x="47.7500%" y="1279.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::collect (14 samples, 0.70%)</title><rect x="47.5000%" y="1253" width="0.7000%" height="15" fill="rgb(210,108,39)" fg:x="950" fg:w="14"/><text x="47.7500%" y="1263.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.70%)</title><rect x="47.5000%" y="1237" width="0.7000%" height="15" fill="rgb(205,23,29)" fg:x="950" fg:w="14"/><text x="47.7500%" y="1247.50"></text></g><g><title>arvz`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (14 samples, 0.70%)</title><rect x="47.5000%" y="1221" width="0.7000%" height="15" fill="rgb(246,139,46)" fg:x="950" fg:w="14"/><text x="47.7500%" y="1231.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.70%)</title><rect x="47.5000%" y="1205" width="0.7000%" height="15" fill="rgb(250,81,26)" fg:x="950" fg:w="14"/><text x="47.7500%" y="1215.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.70%)</title><rect x="47.5000%" y="1189" width="0.7000%" height="15" fill="rgb(214,104,7)" fg:x="950" fg:w="14"/><text x="47.7500%" y="1199.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (14 samples, 0.70%)</title><rect x="47.5000%" y="1173" width="0.7000%" height="15" fill="rgb(233,189,8)" fg:x="950" fg:w="14"/><text x="47.7500%" y="1183.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::for_each (14 samples, 0.70%)</title><rect x="47.5000%" y="1157" width="0.7000%" height="15" fill="rgb(228,141,17)" fg:x="950" fg:w="14"/><text x="47.7500%" y="1167.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.70%)</title><rect x="47.5000%" y="1141" width="0.7000%" height="15" fill="rgb(247,157,1)" fg:x="950" fg:w="14"/><text x="47.7500%" y="1151.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (14 samples, 0.70%)</title><rect x="47.5000%" y="1125" width="0.7000%" height="15" fill="rgb(249,225,5)" fg:x="950" fg:w="14"/><text x="47.7500%" y="1135.50"></text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (14 samples, 0.70%)</title><rect x="47.5000%" y="1109" width="0.7000%" height="15" fill="rgb(242,55,13)" fg:x="950" fg:w="14"/><text x="47.7500%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.10%)</title><rect x="48.1000%" y="1093" width="0.1000%" height="15" fill="rgb(230,49,50)" fg:x="962" fg:w="2"/><text x="48.3500%" y="1103.50"></text></g><g><title>arvz`itertools::Itertools::collect_vec (1 samples, 0.05%)</title><rect x="48.2000%" y="1253" width="0.0500%" height="15" fill="rgb(241,111,38)" fg:x="964" fg:w="1"/><text x="48.4500%" y="1263.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::collect (1 samples, 0.05%)</title><rect x="48.2000%" y="1237" width="0.0500%" height="15" fill="rgb(252,155,4)" fg:x="964" fg:w="1"/><text x="48.4500%" y="1247.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="48.2000%" y="1221" width="0.0500%" height="15" fill="rgb(212,69,32)" fg:x="964" fg:w="1"/><text x="48.4500%" y="1231.50"></text></g><g><title>arvz`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="48.2000%" y="1205" width="0.0500%" height="15" fill="rgb(243,107,47)" fg:x="964" fg:w="1"/><text x="48.4500%" y="1215.50"></text></g><g><title>arvz`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::adapters::SourceIter&gt;::as_inner (1 samples, 0.05%)</title><rect x="48.2000%" y="1189" width="0.0500%" height="15" fill="rgb(247,130,12)" fg:x="964" fg:w="1"/><text x="48.4500%" y="1199.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 0.05%)</title><rect x="48.2500%" y="1237" width="0.0500%" height="15" fill="rgb(233,74,16)" fg:x="965" fg:w="1"/><text x="48.5000%" y="1247.50"></text></g><g><title>arvz`&lt;arvz::components::table::main::MainTable as arvz::components::Component&gt;::draw (909 samples, 45.45%)</title><rect x="2.9000%" y="1285" width="45.4500%" height="15" fill="rgb(208,58,18)" fg:x="58" fg:w="909"/><text x="3.1500%" y="1295.50">arvz`&lt;arvz::components::table::main::MainTable as arvz::components::Compone..</text></g><g><title>arvz`ratatui::widgets::table::table::Table::new (3 samples, 0.15%)</title><rect x="48.2000%" y="1269" width="0.1500%" height="15" fill="rgb(242,225,1)" fg:x="964" fg:w="3"/><text x="48.4500%" y="1279.50"></text></g><g><title>arvz`ratatui::widgets::table::table::ensure_percentages_less_than_100 (2 samples, 0.10%)</title><rect x="48.2500%" y="1253" width="0.1000%" height="15" fill="rgb(249,39,40)" fg:x="965" fg:w="2"/><text x="48.5000%" y="1263.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="48.3000%" y="1237" width="0.0500%" height="15" fill="rgb(207,72,44)" fg:x="966" fg:w="1"/><text x="48.5500%" y="1247.50"></text></g><g><title>arvz`arvz::app::App::run::_{{closure}}::_{{closure}} (947 samples, 47.35%)</title><rect x="1.0500%" y="1317" width="47.3500%" height="15" fill="rgb(215,193,12)" fg:x="21" fg:w="947"/><text x="1.3000%" y="1327.50">arvz`arvz::app::App::run::_{{closure}}::_{{closure}}</text></g><g><title>arvz`arvz::components::LinkedComponent::draw_components (947 samples, 47.35%)</title><rect x="1.0500%" y="1301" width="47.3500%" height="15" fill="rgb(248,41,39)" fg:x="21" fg:w="947"/><text x="1.3000%" y="1311.50">arvz`arvz::components::LinkedComponent::draw_components</text></g><g><title>arvz`core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.05%)</title><rect x="48.3500%" y="1285" width="0.0500%" height="15" fill="rgb(253,85,4)" fg:x="967" fg:w="1"/><text x="48.6000%" y="1295.50"></text></g><g><title>arvz`std::fs::OpenOptions::_open (15 samples, 0.75%)</title><rect x="48.4000%" y="1189" width="0.7500%" height="15" fill="rgb(243,70,31)" fg:x="968" fg:w="15"/><text x="48.6500%" y="1199.50"></text></g><g><title>arvz`std::sys::unix::fs::File::open_c (15 samples, 0.75%)</title><rect x="48.4000%" y="1173" width="0.7500%" height="15" fill="rgb(253,195,26)" fg:x="968" fg:w="15"/><text x="48.6500%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`__open (15 samples, 0.75%)</title><rect x="48.4000%" y="1157" width="0.7500%" height="15" fill="rgb(243,42,11)" fg:x="968" fg:w="15"/><text x="48.6500%" y="1167.50"></text></g><g><title>arvz`std::fs::OpenOptions::open (16 samples, 0.80%)</title><rect x="48.4000%" y="1205" width="0.8000%" height="15" fill="rgb(239,66,17)" fg:x="968" fg:w="16"/><text x="48.6500%" y="1215.50"></text></g><g><title>arvz`std::sys::unix::fs::File::open_c (1 samples, 0.05%)</title><rect x="49.1500%" y="1189" width="0.0500%" height="15" fill="rgb(217,132,21)" fg:x="983" fg:w="1"/><text x="49.4000%" y="1199.50"></text></g><g><title>arvz`ratatui::terminal::terminal::Terminal&lt;B&gt;::autoresize (17 samples, 0.85%)</title><rect x="48.4000%" y="1317" width="0.8500%" height="15" fill="rgb(252,202,21)" fg:x="968" fg:w="17"/><text x="48.6500%" y="1327.50"></text></g><g><title>arvz`ratatui::terminal::terminal::Terminal&lt;B&gt;::size (17 samples, 0.85%)</title><rect x="48.4000%" y="1301" width="0.8500%" height="15" fill="rgb(233,98,36)" fg:x="968" fg:w="17"/><text x="48.6500%" y="1311.50"></text></g><g><title>arvz`&lt;ratatui::backend::crossterm::CrosstermBackend&lt;W&gt; as ratatui::backend::Backend&gt;::size (17 samples, 0.85%)</title><rect x="48.4000%" y="1285" width="0.8500%" height="15" fill="rgb(216,153,54)" fg:x="968" fg:w="17"/><text x="48.6500%" y="1295.50"></text></g><g><title>arvz`crossterm::terminal::size (17 samples, 0.85%)</title><rect x="48.4000%" y="1269" width="0.8500%" height="15" fill="rgb(250,99,7)" fg:x="968" fg:w="17"/><text x="48.6500%" y="1279.50"></text></g><g><title>arvz`crossterm::terminal::sys::unix::size (17 samples, 0.85%)</title><rect x="48.4000%" y="1253" width="0.8500%" height="15" fill="rgb(207,56,50)" fg:x="968" fg:w="17"/><text x="48.6500%" y="1263.50"></text></g><g><title>arvz`crossterm::terminal::sys::unix::window_size (17 samples, 0.85%)</title><rect x="48.4000%" y="1237" width="0.8500%" height="15" fill="rgb(244,61,34)" fg:x="968" fg:w="17"/><text x="48.6500%" y="1247.50"></text></g><g><title>arvz`std::fs::File::open (17 samples, 0.85%)</title><rect x="48.4000%" y="1221" width="0.8500%" height="15" fill="rgb(241,50,38)" fg:x="968" fg:w="17"/><text x="48.6500%" y="1231.50"></text></g><g><title>arvz`std::path::_&lt;impl core::convert::AsRef&lt;std::path::Path&gt; for str&gt;::as_ref (1 samples, 0.05%)</title><rect x="49.2000%" y="1205" width="0.0500%" height="15" fill="rgb(212,166,30)" fg:x="984" fg:w="1"/><text x="49.4500%" y="1215.50"></text></g><g><title>arvz`&lt;ratatui::backend::crossterm::CrosstermBackend&lt;W&gt; as ratatui::backend::Backend&gt;::draw (1 samples, 0.05%)</title><rect x="49.2500%" y="1301" width="0.0500%" height="15" fill="rgb(249,127,32)" fg:x="985" fg:w="1"/><text x="49.5000%" y="1311.50"></text></g><g><title>arvz`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (25 samples, 1.25%)</title><rect x="51.8000%" y="1253" width="1.2500%" height="15" fill="rgb(209,103,0)" fg:x="1036" fg:w="25"/><text x="52.0500%" y="1263.50"></text></g><g><title>arvz`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 2.65%)</title><rect x="50.5500%" y="1285" width="2.6500%" height="15" fill="rgb(238,209,51)" fg:x="1011" fg:w="53"/><text x="50.8000%" y="1295.50">ar..</text></g><g><title>arvz`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 1.55%)</title><rect x="51.6500%" y="1269" width="1.5500%" height="15" fill="rgb(237,56,23)" fg:x="1033" fg:w="31"/><text x="51.9000%" y="1279.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (3 samples, 0.15%)</title><rect x="53.0500%" y="1253" width="0.1500%" height="15" fill="rgb(215,153,46)" fg:x="1061" fg:w="3"/><text x="53.3000%" y="1263.50"></text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.15%)</title><rect x="54.7500%" y="1221" width="0.1500%" height="15" fill="rgb(224,49,31)" fg:x="1095" fg:w="3"/><text x="55.0000%" y="1231.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 4.85%)</title><rect x="58.7000%" y="1189" width="4.8500%" height="15" fill="rgb(250,18,42)" fg:x="1174" fg:w="97"/><text x="58.9500%" y="1199.50">arvz`&lt;..</text></g><g><title>arvz`&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (210 samples, 10.50%)</title><rect x="57.2000%" y="1205" width="10.5000%" height="15" fill="rgb(215,176,39)" fg:x="1144" fg:w="210"/><text x="57.4500%" y="1215.50">arvz`&lt;core::str..</text></g><g><title>arvz`core::str::validations::next_code_point (83 samples, 4.15%)</title><rect x="63.5500%" y="1189" width="4.1500%" height="15" fill="rgb(223,77,29)" fg:x="1271" fg:w="83"/><text x="63.8000%" y="1199.50">arvz`..</text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (2 samples, 0.10%)</title><rect x="67.7000%" y="1205" width="0.1000%" height="15" fill="rgb(234,94,52)" fg:x="1354" fg:w="2"/><text x="67.9500%" y="1215.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width::_{{closure}} (34 samples, 1.70%)</title><rect x="69.0500%" y="1189" width="1.7000%" height="15" fill="rgb(220,154,50)" fg:x="1381" fg:w="34"/><text x="69.3000%" y="1199.50"></text></g><g><title>arvz`unicode_width::tables::charwidth::width (23 samples, 1.15%)</title><rect x="69.6000%" y="1173" width="1.1500%" height="15" fill="rgb(212,11,10)" fg:x="1392" fg:w="23"/><text x="69.8500%" y="1183.50"></text></g><g><title>arvz`unicode_width::tables::charwidth::lookup_width (4 samples, 0.20%)</title><rect x="70.5500%" y="1157" width="0.2000%" height="15" fill="rgb(205,166,19)" fg:x="1411" fg:w="4"/><text x="70.8000%" y="1167.50"></text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (5 samples, 0.25%)</title><rect x="70.7500%" y="1189" width="0.2500%" height="15" fill="rgb(244,198,16)" fg:x="1415" fg:w="5"/><text x="71.0000%" y="1199.50"></text></g><g><title>arvz`&lt;str as unicode_width::UnicodeWidthStr&gt;::width (375 samples, 18.75%)</title><rect x="53.2000%" y="1285" width="18.7500%" height="15" fill="rgb(219,69,12)" fg:x="1064" fg:w="375"/><text x="53.4500%" y="1295.50">arvz`&lt;str as unicode_width::U..</text></g><g><title>arvz`core::iter::traits::iterator::Iterator::sum (369 samples, 18.45%)</title><rect x="53.5000%" y="1269" width="18.4500%" height="15" fill="rgb(245,30,7)" fg:x="1070" fg:w="369"/><text x="53.7500%" y="1279.50">arvz`core::iter::traits::iter..</text></g><g><title>arvz`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (366 samples, 18.30%)</title><rect x="53.6500%" y="1253" width="18.3000%" height="15" fill="rgb(218,221,48)" fg:x="1073" fg:w="366"/><text x="53.9000%" y="1263.50">arvz`&lt;usize as core::iter::tr..</text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (356 samples, 17.80%)</title><rect x="54.1500%" y="1237" width="17.8000%" height="15" fill="rgb(216,66,15)" fg:x="1083" fg:w="356"/><text x="54.4000%" y="1247.50">arvz`&lt;core::iter::adapters::..</text></g><g><title>arvz`core::iter::traits::iterator::Iterator::fold (341 samples, 17.05%)</title><rect x="54.9000%" y="1221" width="17.0500%" height="15" fill="rgb(226,122,50)" fg:x="1098" fg:w="341"/><text x="55.1500%" y="1231.50">arvz`core::iter::traits::i..</text></g><g><title>arvz`core::iter::adapters::map::map_fold::_{{closure}} (83 samples, 4.15%)</title><rect x="67.8000%" y="1205" width="4.1500%" height="15" fill="rgb(239,156,16)" fg:x="1356" fg:w="83"/><text x="68.0500%" y="1215.50">arvz`..</text></g><g><title>arvz`core::option::Option&lt;T&gt;::unwrap_or (19 samples, 0.95%)</title><rect x="71.0000%" y="1189" width="0.9500%" height="15" fill="rgb(224,27,38)" fg:x="1420" fg:w="19"/><text x="71.2500%" y="1199.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (10 samples, 0.50%)</title><rect x="74.0000%" y="1109" width="0.5000%" height="15" fill="rgb(224,39,27)" fg:x="1480" fg:w="10"/><text x="74.2500%" y="1119.50"></text></g><g><title>arvz`compact_str::repr::Repr::as_slice (25 samples, 1.25%)</title><rect x="73.3500%" y="1173" width="1.2500%" height="15" fill="rgb(215,92,29)" fg:x="1467" fg:w="25"/><text x="73.6000%" y="1183.50"></text></g><g><title>arvz`core::cmp::min (19 samples, 0.95%)</title><rect x="73.6500%" y="1157" width="0.9500%" height="15" fill="rgb(207,159,16)" fg:x="1473" fg:w="19"/><text x="73.9000%" y="1167.50"></text></g><g><title>arvz`core::cmp::Ord::min (19 samples, 0.95%)</title><rect x="73.6500%" y="1141" width="0.9500%" height="15" fill="rgb(238,163,47)" fg:x="1473" fg:w="19"/><text x="73.9000%" y="1151.50"></text></g><g><title>arvz`core::cmp::min_by (19 samples, 0.95%)</title><rect x="73.6500%" y="1125" width="0.9500%" height="15" fill="rgb(219,91,49)" fg:x="1473" fg:w="19"/><text x="73.9000%" y="1135.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (2 samples, 0.10%)</title><rect x="74.5000%" y="1109" width="0.1000%" height="15" fill="rgb(227,167,31)" fg:x="1490" fg:w="2"/><text x="74.7500%" y="1119.50"></text></g><g><title>arvz`&lt;compact_str::CompactString as core::convert::AsRef&lt;str&gt;&gt;::as_ref (35 samples, 1.75%)</title><rect x="72.9500%" y="1221" width="1.7500%" height="15" fill="rgb(234,80,54)" fg:x="1459" fg:w="35"/><text x="73.2000%" y="1231.50"></text></g><g><title>arvz`compact_str::CompactString::as_str (34 samples, 1.70%)</title><rect x="73.0000%" y="1205" width="1.7000%" height="15" fill="rgb(212,114,2)" fg:x="1460" fg:w="34"/><text x="73.2500%" y="1215.50"></text></g><g><title>arvz`compact_str::repr::Repr::as_str (30 samples, 1.50%)</title><rect x="73.2000%" y="1189" width="1.5000%" height="15" fill="rgb(234,50,24)" fg:x="1464" fg:w="30"/><text x="73.4500%" y="1199.50"></text></g><g><title>arvz`core::slice::raw::from_raw_parts (2 samples, 0.10%)</title><rect x="74.6000%" y="1173" width="0.1000%" height="15" fill="rgb(221,68,8)" fg:x="1492" fg:w="2"/><text x="74.8500%" y="1183.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (8 samples, 0.40%)</title><rect x="75.8000%" y="1125" width="0.4000%" height="15" fill="rgb(254,180,31)" fg:x="1516" fg:w="8"/><text x="76.0500%" y="1135.50"></text></g><g><title>arvz`compact_str::repr::Repr::as_slice (31 samples, 1.55%)</title><rect x="74.8500%" y="1189" width="1.5500%" height="15" fill="rgb(247,130,50)" fg:x="1497" fg:w="31"/><text x="75.1000%" y="1199.50"></text></g><g><title>arvz`core::cmp::min (26 samples, 1.30%)</title><rect x="75.1000%" y="1173" width="1.3000%" height="15" fill="rgb(211,109,4)" fg:x="1502" fg:w="26"/><text x="75.3500%" y="1183.50"></text></g><g><title>arvz`core::cmp::Ord::min (24 samples, 1.20%)</title><rect x="75.2000%" y="1157" width="1.2000%" height="15" fill="rgb(238,50,21)" fg:x="1504" fg:w="24"/><text x="75.4500%" y="1167.50"></text></g><g><title>arvz`core::cmp::min_by (21 samples, 1.05%)</title><rect x="75.3500%" y="1141" width="1.0500%" height="15" fill="rgb(225,57,45)" fg:x="1507" fg:w="21"/><text x="75.6000%" y="1151.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (4 samples, 0.20%)</title><rect x="76.2000%" y="1125" width="0.2000%" height="15" fill="rgb(209,196,50)" fg:x="1524" fg:w="4"/><text x="76.4500%" y="1135.50"></text></g><g><title>arvz`compact_str::repr::Repr::as_str (39 samples, 1.95%)</title><rect x="74.7500%" y="1205" width="1.9500%" height="15" fill="rgb(242,140,13)" fg:x="1495" fg:w="39"/><text x="75.0000%" y="1215.50">a..</text></g><g><title>arvz`core::slice::raw::from_raw_parts (6 samples, 0.30%)</title><rect x="76.4000%" y="1189" width="0.3000%" height="15" fill="rgb(217,111,7)" fg:x="1528" fg:w="6"/><text x="76.6500%" y="1199.50"></text></g><g><title>arvz`compact_str::CompactString::as_str (43 samples, 2.15%)</title><rect x="74.7000%" y="1221" width="2.1500%" height="15" fill="rgb(253,193,51)" fg:x="1494" fg:w="43"/><text x="74.9500%" y="1231.50">a..</text></g><g><title>arvz`core::str::converts::from_utf8_unchecked (3 samples, 0.15%)</title><rect x="76.7000%" y="1205" width="0.1500%" height="15" fill="rgb(252,70,29)" fg:x="1534" fg:w="3"/><text x="76.9500%" y="1215.50"></text></g><g><title>arvz`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (20 samples, 1.00%)</title><rect x="77.6500%" y="1189" width="1.0000%" height="15" fill="rgb(232,127,12)" fg:x="1553" fg:w="20"/><text x="77.9000%" y="1199.50"></text></g><g><title>arvz`DYLD-STUB$$memcmp (3 samples, 0.15%)</title><rect x="78.6500%" y="1189" width="0.1500%" height="15" fill="rgb(211,180,21)" fg:x="1573" fg:w="3"/><text x="78.9000%" y="1199.50"></text></g><g><title>arvz`&lt;compact_str::CompactString as core::cmp::PartialEq&lt;T&gt;&gt;::eq (124 samples, 6.20%)</title><rect x="72.9500%" y="1237" width="6.2000%" height="15" fill="rgb(229,72,13)" fg:x="1459" fg:w="124"/><text x="73.2000%" y="1247.50">arvz`&lt;co..</text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (46 samples, 2.30%)</title><rect x="76.8500%" y="1221" width="2.3000%" height="15" fill="rgb(240,211,49)" fg:x="1537" fg:w="46"/><text x="77.1000%" y="1231.50">a..</text></g><g><title>arvz`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (42 samples, 2.10%)</title><rect x="77.0500%" y="1205" width="2.1000%" height="15" fill="rgb(219,149,40)" fg:x="1541" fg:w="42"/><text x="77.3000%" y="1215.50">a..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.35%)</title><rect x="78.8000%" y="1189" width="0.3500%" height="15" fill="rgb(210,127,46)" fg:x="1576" fg:w="7"/><text x="79.0500%" y="1199.50"></text></g><g><title>arvz`&lt;ratatui::style::Modifier as core::cmp::PartialEq&gt;::eq (2 samples, 0.10%)</title><rect x="79.1500%" y="1237" width="0.1000%" height="15" fill="rgb(220,106,7)" fg:x="1583" fg:w="2"/><text x="79.4000%" y="1247.50"></text></g><g><title>arvz`&lt;ratatui::buffer::cell::Cell as core::cmp::PartialEq&gt;::eq (144 samples, 7.20%)</title><rect x="72.2000%" y="1253" width="7.2000%" height="15" fill="rgb(249,31,22)" fg:x="1444" fg:w="144"/><text x="72.4500%" y="1263.50">arvz`&lt;rata..</text></g><g><title>arvz`&lt;ratatui::style::_::InternalBitFlags as core::cmp::PartialEq&gt;::eq (3 samples, 0.15%)</title><rect x="79.2500%" y="1237" width="0.1500%" height="15" fill="rgb(253,1,49)" fg:x="1585" fg:w="3"/><text x="79.5000%" y="1247.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (166 samples, 8.30%)</title><rect x="71.9500%" y="1285" width="8.3000%" height="15" fill="rgb(227,144,33)" fg:x="1439" fg:w="166"/><text x="72.2000%" y="1295.50">arvz`core::c..</text></g><g><title>arvz`core::cmp::PartialEq::ne (163 samples, 8.15%)</title><rect x="72.1000%" y="1269" width="8.1500%" height="15" fill="rgb(249,163,44)" fg:x="1442" fg:w="163"/><text x="72.3500%" y="1279.50">arvz`core::..</text></g><g><title>arvz`&lt;ratatui::style::color::Color as core::cmp::PartialEq&gt;::eq (17 samples, 0.85%)</title><rect x="79.4000%" y="1253" width="0.8500%" height="15" fill="rgb(234,15,39)" fg:x="1588" fg:w="17"/><text x="79.6500%" y="1263.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (22 samples, 1.10%)</title><rect x="82.7000%" y="1237" width="1.1000%" height="15" fill="rgb(207,66,16)" fg:x="1654" fg:w="22"/><text x="82.9500%" y="1247.50"></text></g><g><title>arvz`core::cmp::max (74 samples, 3.70%)</title><rect x="80.2500%" y="1285" width="3.7000%" height="15" fill="rgb(233,112,24)" fg:x="1605" fg:w="74"/><text x="80.5000%" y="1295.50">arvz..</text></g><g><title>arvz`core::cmp::Ord::max (66 samples, 3.30%)</title><rect x="80.6500%" y="1269" width="3.3000%" height="15" fill="rgb(230,90,22)" fg:x="1613" fg:w="66"/><text x="80.9000%" y="1279.50">arv..</text></g><g><title>arvz`core::cmp::max_by (62 samples, 3.10%)</title><rect x="80.8500%" y="1253" width="3.1000%" height="15" fill="rgb(229,61,13)" fg:x="1617" fg:w="62"/><text x="81.1000%" y="1263.50">arv..</text></g><g><title>arvz`core::ops::function::FnOnce::call_once (3 samples, 0.15%)</title><rect x="83.8000%" y="1237" width="0.1500%" height="15" fill="rgb(225,57,24)" fg:x="1676" fg:w="3"/><text x="84.0500%" y="1247.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::map (9 samples, 0.45%)</title><rect x="83.9500%" y="1285" width="0.4500%" height="15" fill="rgb(208,169,48)" fg:x="1679" fg:w="9"/><text x="84.2000%" y="1295.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::chars (37 samples, 1.85%)</title><rect x="84.4000%" y="1285" width="1.8500%" height="15" fill="rgb(244,218,51)" fg:x="1688" fg:w="37"/><text x="84.6500%" y="1295.50">a..</text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (8 samples, 0.40%)</title><rect x="91.2000%" y="1173" width="0.4000%" height="15" fill="rgb(214,148,10)" fg:x="1824" fg:w="8"/><text x="91.4500%" y="1183.50"></text></g><g><title>arvz`compact_str::repr::Repr::as_slice (96 samples, 4.80%)</title><rect x="87.1500%" y="1237" width="4.8000%" height="15" fill="rgb(225,174,27)" fg:x="1743" fg:w="96"/><text x="87.4000%" y="1247.50">arvz`c..</text></g><g><title>arvz`core::cmp::min (68 samples, 3.40%)</title><rect x="88.5500%" y="1221" width="3.4000%" height="15" fill="rgb(230,96,26)" fg:x="1771" fg:w="68"/><text x="88.8000%" y="1231.50">arv..</text></g><g><title>arvz`core::cmp::Ord::min (61 samples, 3.05%)</title><rect x="88.9000%" y="1205" width="3.0500%" height="15" fill="rgb(232,10,30)" fg:x="1778" fg:w="61"/><text x="89.1500%" y="1215.50">arv..</text></g><g><title>arvz`core::cmp::min_by (55 samples, 2.75%)</title><rect x="89.2000%" y="1189" width="2.7500%" height="15" fill="rgb(222,8,50)" fg:x="1784" fg:w="55"/><text x="89.4500%" y="1199.50">ar..</text></g><g><title>arvz`core::ops::function::FnOnce::call_once (7 samples, 0.35%)</title><rect x="91.6000%" y="1173" width="0.3500%" height="15" fill="rgb(213,81,27)" fg:x="1832" fg:w="7"/><text x="91.8500%" y="1183.50"></text></g><g><title>arvz`compact_str::repr::Repr::as_str (110 samples, 5.50%)</title><rect x="86.9500%" y="1253" width="5.5000%" height="15" fill="rgb(245,50,10)" fg:x="1739" fg:w="110"/><text x="87.2000%" y="1263.50">arvz`co..</text></g><g><title>arvz`core::slice::raw::from_raw_parts (10 samples, 0.50%)</title><rect x="91.9500%" y="1237" width="0.5000%" height="15" fill="rgb(216,100,18)" fg:x="1839" fg:w="10"/><text x="92.2000%" y="1247.50"></text></g><g><title>arvz`ratatui::terminal::terminal::Terminal&lt;B&gt;::flush (866 samples, 43.30%)</title><rect x="49.2500%" y="1317" width="43.3000%" height="15" fill="rgb(236,147,54)" fg:x="985" fg:w="866"/><text x="49.5000%" y="1327.50">arvz`ratatui::terminal::terminal::Terminal&lt;B&gt;::flush</text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::diff (865 samples, 43.25%)</title><rect x="49.3000%" y="1301" width="43.2500%" height="15" fill="rgb(205,143,26)" fg:x="986" fg:w="865"/><text x="49.5500%" y="1311.50">arvz`ratatui::buffer::buffer::Buffer::diff</text></g><g><title>arvz`ratatui::buffer::cell::Cell::symbol (126 samples, 6.30%)</title><rect x="86.2500%" y="1285" width="6.3000%" height="15" fill="rgb(236,26,9)" fg:x="1725" fg:w="126"/><text x="86.5000%" y="1295.50">arvz`rat..</text></g><g><title>arvz`compact_str::CompactString::as_str (120 samples, 6.00%)</title><rect x="86.5500%" y="1269" width="6.0000%" height="15" fill="rgb(221,165,53)" fg:x="1731" fg:w="120"/><text x="86.8000%" y="1279.50">arvz`com..</text></g><g><title>arvz`core::str::converts::from_utf8_unchecked (2 samples, 0.10%)</title><rect x="92.4500%" y="1253" width="0.1000%" height="15" fill="rgb(214,110,17)" fg:x="1849" fg:w="2"/><text x="92.7000%" y="1263.50"></text></g><g><title>arvz`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.65%)</title><rect x="92.5500%" y="1301" width="0.6500%" height="15" fill="rgb(237,197,12)" fg:x="1851" fg:w="13"/><text x="92.8000%" y="1311.50"></text></g><g><title>arvz`DYLD-STUB$$memcpy (2 samples, 0.10%)</title><rect x="93.9000%" y="1237" width="0.1000%" height="15" fill="rgb(205,84,17)" fg:x="1878" fg:w="2"/><text x="94.1500%" y="1247.50"></text></g><g><title>arvz`compact_str::repr::inline::InlineBuffer::new (3 samples, 0.15%)</title><rect x="94.0000%" y="1237" width="0.1500%" height="15" fill="rgb(237,18,45)" fg:x="1880" fg:w="3"/><text x="94.2500%" y="1247.50"></text></g><g><title>arvz`compact_str::repr::Repr::new (13 samples, 0.65%)</title><rect x="93.6000%" y="1253" width="0.6500%" height="15" fill="rgb(221,87,14)" fg:x="1872" fg:w="13"/><text x="93.8500%" y="1263.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.10%)</title><rect x="94.1500%" y="1237" width="0.1000%" height="15" fill="rgb(238,186,15)" fg:x="1883" fg:w="2"/><text x="94.4000%" y="1247.50"></text></g><g><title>arvz`compact_str::repr::inline::InlineBuffer::new (1 samples, 0.05%)</title><rect x="94.2500%" y="1253" width="0.0500%" height="15" fill="rgb(208,115,11)" fg:x="1885" fg:w="1"/><text x="94.5000%" y="1263.50"></text></g><g><title>arvz`compact_str::CompactString::new (17 samples, 0.85%)</title><rect x="93.5000%" y="1269" width="0.8500%" height="15" fill="rgb(254,175,0)" fg:x="1870" fg:w="17"/><text x="93.7500%" y="1279.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::len (1 samples, 0.05%)</title><rect x="94.3000%" y="1253" width="0.0500%" height="15" fill="rgb(227,24,42)" fg:x="1886" fg:w="1"/><text x="94.5500%" y="1263.50"></text></g><g><title>arvz`compact_str::repr::Repr::new (1 samples, 0.05%)</title><rect x="94.3500%" y="1269" width="0.0500%" height="15" fill="rgb(223,211,37)" fg:x="1887" fg:w="1"/><text x="94.6000%" y="1279.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;compact_str::CompactString&gt; (6 samples, 0.30%)</title><rect x="94.4000%" y="1269" width="0.3000%" height="15" fill="rgb(235,49,27)" fg:x="1888" fg:w="6"/><text x="94.6500%" y="1279.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;compact_str::repr::Repr&gt; (5 samples, 0.25%)</title><rect x="94.4500%" y="1253" width="0.2500%" height="15" fill="rgb(254,97,51)" fg:x="1889" fg:w="5"/><text x="94.7000%" y="1263.50"></text></g><g><title>arvz`&lt;compact_str::repr::Repr as core::ops::drop::Drop&gt;::drop (2 samples, 0.10%)</title><rect x="94.6000%" y="1237" width="0.1000%" height="15" fill="rgb(249,51,40)" fg:x="1892" fg:w="2"/><text x="94.8500%" y="1247.50"></text></g><g><title>arvz`ratatui::style::_::InternalBitFlags::empty (1 samples, 0.05%)</title><rect x="94.7000%" y="1269" width="0.0500%" height="15" fill="rgb(210,128,45)" fg:x="1894" fg:w="1"/><text x="94.9500%" y="1279.50"></text></g><g><title>arvz`ratatui::terminal::terminal::Terminal&lt;B&gt;::draw (1,877 samples, 93.85%)</title><rect x="1.0500%" y="1333" width="93.8500%" height="15" fill="rgb(224,137,50)" fg:x="21" fg:w="1877"/><text x="1.3000%" y="1343.50">arvz`ratatui::terminal::terminal::Terminal&lt;B&gt;::draw</text></g><g><title>arvz`ratatui::terminal::terminal::Terminal&lt;B&gt;::swap_buffers (47 samples, 2.35%)</title><rect x="92.5500%" y="1317" width="2.3500%" height="15" fill="rgb(242,15,9)" fg:x="1851" fg:w="47"/><text x="92.8000%" y="1327.50">a..</text></g><g><title>arvz`ratatui::buffer::buffer::Buffer::reset (34 samples, 1.70%)</title><rect x="93.2000%" y="1301" width="1.7000%" height="15" fill="rgb(233,187,41)" fg:x="1864" fg:w="34"/><text x="93.4500%" y="1311.50"></text></g><g><title>arvz`ratatui::buffer::cell::Cell::reset (31 samples, 1.55%)</title><rect x="93.3500%" y="1285" width="1.5500%" height="15" fill="rgb(227,2,29)" fg:x="1867" fg:w="31"/><text x="93.6000%" y="1295.50"></text></g><g><title>arvz`ratatui::style::_::_&lt;impl ratatui::style::Modifier&gt;::empty (3 samples, 0.15%)</title><rect x="94.7500%" y="1269" width="0.1500%" height="15" fill="rgb(222,70,3)" fg:x="1895" fg:w="3"/><text x="95.0000%" y="1279.50"></text></g><g><title>arvz`tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (1 samples, 0.05%)</title><rect x="94.9000%" y="1333" width="0.0500%" height="15" fill="rgb(213,11,42)" fg:x="1898" fg:w="1"/><text x="95.1500%" y="1343.50"></text></g><g><title>arvz`tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (1 samples, 0.05%)</title><rect x="94.9000%" y="1317" width="0.0500%" height="15" fill="rgb(225,150,9)" fg:x="1898" fg:w="1"/><text x="95.1500%" y="1327.50"></text></g><g><title>arvz`tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (1 samples, 0.05%)</title><rect x="94.9000%" y="1301" width="0.0500%" height="15" fill="rgb(230,162,45)" fg:x="1898" fg:w="1"/><text x="95.1500%" y="1311.50"></text></g><g><title>arvz`tokio::sync::mpsc::list::Tx&lt;T&gt;::push (1 samples, 0.05%)</title><rect x="94.9000%" y="1285" width="0.0500%" height="15" fill="rgb(222,14,52)" fg:x="1898" fg:w="1"/><text x="95.1500%" y="1295.50"></text></g><g><title>arvz`tokio::sync::mpsc::block::Block&lt;T&gt;::write (1 samples, 0.05%)</title><rect x="94.9000%" y="1269" width="0.0500%" height="15" fill="rgb(254,198,14)" fg:x="1898" fg:w="1"/><text x="95.1500%" y="1279.50"></text></g><g><title>arvz`arvz::app::App::run::_{{closure}} (1,891 samples, 94.55%)</title><rect x="0.5000%" y="1349" width="94.5500%" height="15" fill="rgb(220,217,30)" fg:x="10" fg:w="1891"/><text x="0.7500%" y="1359.50">arvz`arvz::app::App::run::_{{closure}}</text></g><g><title>arvz`tokio::sync::mutex::Mutex&lt;T&gt;::lock::_{{closure}} (2 samples, 0.10%)</title><rect x="94.9500%" y="1333" width="0.1000%" height="15" fill="rgb(215,146,41)" fg:x="1899" fg:w="2"/><text x="95.2000%" y="1343.50"></text></g><g><title>arvz`tokio::sync::mutex::Mutex&lt;T&gt;::lock::_{{closure}}::_{{closure}} (2 samples, 0.10%)</title><rect x="94.9500%" y="1317" width="0.1000%" height="15" fill="rgb(217,27,36)" fg:x="1899" fg:w="2"/><text x="95.2000%" y="1327.50"></text></g><g><title>arvz`tokio::sync::mutex::Mutex&lt;T&gt;::acquire::_{{closure}} (1 samples, 0.05%)</title><rect x="95.0000%" y="1301" width="0.0500%" height="15" fill="rgb(219,218,39)" fg:x="1900" fg:w="1"/><text x="95.2500%" y="1311.50"></text></g><g><title>arvz`arvz::tui::Tui::next (1 samples, 0.05%)</title><rect x="95.0500%" y="1349" width="0.0500%" height="15" fill="rgb(219,4,42)" fg:x="1901" fg:w="1"/><text x="95.3000%" y="1359.50"></text></g><g><title>arvz`regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.05%)</title><rect x="95.1000%" y="773" width="0.0500%" height="15" fill="rgb(249,119,36)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="783.50"></text></g><g><title>arvz`regex_automata::meta::strategy::new (1 samples, 0.05%)</title><rect x="95.1000%" y="757" width="0.0500%" height="15" fill="rgb(209,23,33)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="767.50"></text></g><g><title>arvz`regex_automata::meta::strategy::Core::new (1 samples, 0.05%)</title><rect x="95.1000%" y="741" width="0.0500%" height="15" fill="rgb(211,10,0)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="751.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.05%)</title><rect x="95.1000%" y="725" width="0.0500%" height="15" fill="rgb(208,99,37)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="735.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.05%)</title><rect x="95.1000%" y="709" width="0.0500%" height="15" fill="rgb(213,132,31)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="719.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.05%)</title><rect x="95.1000%" y="693" width="0.0500%" height="15" fill="rgb(243,129,40)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="703.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="95.1000%" y="677" width="0.0500%" height="15" fill="rgb(210,66,33)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="687.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="95.1000%" y="661" width="0.0500%" height="15" fill="rgb(209,189,4)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="671.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::compile::_{{closure}} (1 samples, 0.05%)</title><rect x="95.1000%" y="645" width="0.0500%" height="15" fill="rgb(214,107,37)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="655.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.05%)</title><rect x="95.1000%" y="629" width="0.0500%" height="15" fill="rgb(245,88,54)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="639.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="95.1000%" y="613" width="0.0500%" height="15" fill="rgb(205,146,20)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="623.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.05%)</title><rect x="95.1000%" y="597" width="0.0500%" height="15" fill="rgb(220,161,25)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="607.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="95.1000%" y="581" width="0.0500%" height="15" fill="rgb(215,152,15)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="591.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="95.1000%" y="565" width="0.0500%" height="15" fill="rgb(233,192,44)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="575.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (1 samples, 0.05%)</title><rect x="95.1000%" y="549" width="0.0500%" height="15" fill="rgb(240,170,46)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="559.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="95.1000%" y="533" width="0.0500%" height="15" fill="rgb(207,104,33)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="543.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.05%)</title><rect x="95.1000%" y="517" width="0.0500%" height="15" fill="rgb(219,21,39)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="527.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.05%)</title><rect x="95.1000%" y="501" width="0.0500%" height="15" fill="rgb(214,133,29)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="511.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="95.1000%" y="485" width="0.0500%" height="15" fill="rgb(226,93,6)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="495.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="95.1000%" y="469" width="0.0500%" height="15" fill="rgb(252,222,34)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="479.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::_{{closure}} (1 samples, 0.05%)</title><rect x="95.1000%" y="453" width="0.0500%" height="15" fill="rgb(252,92,48)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="463.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="95.1000%" y="437" width="0.0500%" height="15" fill="rgb(245,223,24)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="447.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.05%)</title><rect x="95.1000%" y="421" width="0.0500%" height="15" fill="rgb(205,176,3)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="431.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="95.1000%" y="405" width="0.0500%" height="15" fill="rgb(235,151,15)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="415.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="95.1000%" y="389" width="0.0500%" height="15" fill="rgb(237,209,11)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="399.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (1 samples, 0.05%)</title><rect x="95.1000%" y="373" width="0.0500%" height="15" fill="rgb(243,227,24)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="383.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="95.1000%" y="357" width="0.0500%" height="15" fill="rgb(239,193,16)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="367.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_repetition (1 samples, 0.05%)</title><rect x="95.1000%" y="341" width="0.0500%" height="15" fill="rgb(231,27,9)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="351.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_bounded (1 samples, 0.05%)</title><rect x="95.1000%" y="325" width="0.0500%" height="15" fill="rgb(219,169,10)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="335.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="95.1000%" y="309" width="0.0500%" height="15" fill="rgb(244,229,43)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="319.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice (1 samples, 0.05%)</title><rect x="95.1000%" y="293" width="0.0500%" height="15" fill="rgb(254,38,20)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="303.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.05%)</title><rect x="95.1000%" y="277" width="0.0500%" height="15" fill="rgb(250,47,30)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="287.50"></text></g><g><title>arvz`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="95.1000%" y="261" width="0.0500%" height="15" fill="rgb(224,124,36)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="271.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.05%)</title><rect x="95.1000%" y="245" width="0.0500%" height="15" fill="rgb(246,68,51)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="255.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_alt_slice::_{{closure}} (1 samples, 0.05%)</title><rect x="95.1000%" y="229" width="0.0500%" height="15" fill="rgb(253,43,49)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="239.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="95.1000%" y="213" width="0.0500%" height="15" fill="rgb(219,54,36)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="223.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.05%)</title><rect x="95.1000%" y="197" width="0.0500%" height="15" fill="rgb(227,133,34)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="207.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="95.1000%" y="181" width="0.0500%" height="15" fill="rgb(247,227,15)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="191.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_repetition (1 samples, 0.05%)</title><rect x="95.1000%" y="165" width="0.0500%" height="15" fill="rgb(229,96,14)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="175.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.05%)</title><rect x="95.1000%" y="149" width="0.0500%" height="15" fill="rgb(220,79,17)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="159.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.05%)</title><rect x="95.1000%" y="133" width="0.0500%" height="15" fill="rgb(205,131,53)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="143.50"></text></g><g><title>arvz`regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1 samples, 0.05%)</title><rect x="95.1000%" y="117" width="0.0500%" height="15" fill="rgb(209,50,29)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="127.50"></text></g><g><title>arvz`&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="95.1000%" y="101" width="0.0500%" height="15" fill="rgb(245,86,46)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="111.50"></text></g><g><title>arvz`regex_syntax::utf8::ScalarRange::encode (1 samples, 0.05%)</title><rect x="95.1000%" y="85" width="0.0500%" height="15" fill="rgb(235,66,46)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="95.50"></text></g><g><title>arvz`core::char::methods::_&lt;impl char&gt;::encode_utf8 (1 samples, 0.05%)</title><rect x="95.1000%" y="69" width="0.0500%" height="15" fill="rgb(232,148,31)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="79.50"></text></g><g><title>arvz`core::char::methods::encode_utf8_raw (1 samples, 0.05%)</title><rect x="95.1000%" y="53" width="0.0500%" height="15" fill="rgb(217,149,8)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="63.50"></text></g><g><title>arvz`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.05%)</title><rect x="95.1000%" y="37" width="0.0500%" height="15" fill="rgb(209,183,11)" fg:x="1902" fg:w="1"/><text x="95.3500%" y="47.50"></text></g><g><title>arvz`once_cell::imp::OnceCell&lt;T&gt;::initialize (2 samples, 0.10%)</title><rect x="95.1000%" y="997" width="0.1000%" height="15" fill="rgb(208,55,20)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="1007.50"></text></g><g><title>arvz`once_cell::imp::initialize_or_wait (2 samples, 0.10%)</title><rect x="95.1000%" y="981" width="0.1000%" height="15" fill="rgb(218,39,14)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="991.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.10%)</title><rect x="95.1000%" y="965" width="0.1000%" height="15" fill="rgb(216,169,33)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="975.50"></text></g><g><title>arvz`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (2 samples, 0.10%)</title><rect x="95.1000%" y="949" width="0.1000%" height="15" fill="rgb(233,80,24)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="959.50"></text></g><g><title>arvz`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (2 samples, 0.10%)</title><rect x="95.1000%" y="933" width="0.1000%" height="15" fill="rgb(213,179,31)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="943.50"></text></g><g><title>arvz`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (2 samples, 0.10%)</title><rect x="95.1000%" y="917" width="0.1000%" height="15" fill="rgb(209,19,5)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="927.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (2 samples, 0.10%)</title><rect x="95.1000%" y="901" width="0.1000%" height="15" fill="rgb(219,18,35)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="911.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (2 samples, 0.10%)</title><rect x="95.1000%" y="885" width="0.1000%" height="15" fill="rgb(209,169,16)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="895.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::directive::Directive::parse::DIRECTIVE_RE::_{{closure}} (2 samples, 0.10%)</title><rect x="95.1000%" y="869" width="0.1000%" height="15" fill="rgb(245,90,51)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="879.50"></text></g><g><title>arvz`regex::regex::string::Regex::new (2 samples, 0.10%)</title><rect x="95.1000%" y="853" width="0.1000%" height="15" fill="rgb(220,99,45)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="863.50"></text></g><g><title>arvz`regex::builders::string::RegexBuilder::build (2 samples, 0.10%)</title><rect x="95.1000%" y="837" width="0.1000%" height="15" fill="rgb(249,89,25)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="847.50"></text></g><g><title>arvz`regex::builders::Builder::build_one_string (2 samples, 0.10%)</title><rect x="95.1000%" y="821" width="0.1000%" height="15" fill="rgb(239,193,0)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="831.50"></text></g><g><title>arvz`regex_automata::meta::regex::Builder::build (2 samples, 0.10%)</title><rect x="95.1000%" y="805" width="0.1000%" height="15" fill="rgb(231,126,1)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="815.50"></text></g><g><title>arvz`regex_automata::meta::regex::Builder::build_many (2 samples, 0.10%)</title><rect x="95.1000%" y="789" width="0.1000%" height="15" fill="rgb(243,166,3)" fg:x="1902" fg:w="2"/><text x="95.3500%" y="799.50"></text></g><g><title>arvz`regex_syntax::hir::translate::Translator::translate (1 samples, 0.05%)</title><rect x="95.1500%" y="773" width="0.0500%" height="15" fill="rgb(223,22,34)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="783.50"></text></g><g><title>arvz`regex_syntax::ast::visitor::visit (1 samples, 0.05%)</title><rect x="95.1500%" y="757" width="0.0500%" height="15" fill="rgb(251,52,51)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="767.50"></text></g><g><title>arvz`regex_syntax::ast::visitor::HeapVisitor::visit (1 samples, 0.05%)</title><rect x="95.1500%" y="741" width="0.0500%" height="15" fill="rgb(221,165,28)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="751.50"></text></g><g><title>arvz`regex_syntax::ast::visitor::HeapVisitor::induct (1 samples, 0.05%)</title><rect x="95.1500%" y="725" width="0.0500%" height="15" fill="rgb(218,121,47)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="735.50"></text></g><g><title>arvz`regex_syntax::ast::visitor::HeapVisitor::visit_class (1 samples, 0.05%)</title><rect x="95.1500%" y="709" width="0.0500%" height="15" fill="rgb(209,120,9)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="719.50"></text></g><g><title>arvz`regex_syntax::ast::visitor::HeapVisitor::visit_class_post (1 samples, 0.05%)</title><rect x="95.1500%" y="693" width="0.0500%" height="15" fill="rgb(236,68,12)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="703.50"></text></g><g><title>arvz`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (1 samples, 0.05%)</title><rect x="95.1500%" y="677" width="0.0500%" height="15" fill="rgb(225,194,26)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="687.50"></text></g><g><title>arvz`regex_syntax::hir::ClassUnicode::push (1 samples, 0.05%)</title><rect x="95.1500%" y="661" width="0.0500%" height="15" fill="rgb(231,84,39)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="671.50"></text></g><g><title>arvz`regex_syntax::hir::interval::IntervalSet&lt;I&gt;::push (1 samples, 0.05%)</title><rect x="95.1500%" y="645" width="0.0500%" height="15" fill="rgb(210,11,45)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="655.50"></text></g><g><title>arvz`regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (1 samples, 0.05%)</title><rect x="95.1500%" y="629" width="0.0500%" height="15" fill="rgb(224,54,52)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="639.50"></text></g><g><title>arvz`regex_syntax::hir::interval::Interval::union (1 samples, 0.05%)</title><rect x="95.1500%" y="613" width="0.0500%" height="15" fill="rgb(238,102,14)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="623.50"></text></g><g><title>arvz`regex_syntax::hir::interval::Interval::is_contiguous (1 samples, 0.05%)</title><rect x="95.1500%" y="597" width="0.0500%" height="15" fill="rgb(243,160,52)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="607.50"></text></g><g><title>arvz`core::cmp::min (1 samples, 0.05%)</title><rect x="95.1500%" y="581" width="0.0500%" height="15" fill="rgb(216,114,19)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="591.50"></text></g><g><title>arvz`core::cmp::Ord::min (1 samples, 0.05%)</title><rect x="95.1500%" y="565" width="0.0500%" height="15" fill="rgb(244,166,37)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="575.50"></text></g><g><title>arvz`core::cmp::min_by (1 samples, 0.05%)</title><rect x="95.1500%" y="549" width="0.0500%" height="15" fill="rgb(246,29,44)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="559.50"></text></g><g><title>arvz`core::ops::function::FnOnce::call_once (1 samples, 0.05%)</title><rect x="95.1500%" y="533" width="0.0500%" height="15" fill="rgb(215,56,53)" fg:x="1903" fg:w="1"/><text x="95.4000%" y="543.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::EnvFilter::from_default_env (3 samples, 0.15%)</title><rect x="95.1000%" y="1333" width="0.1500%" height="15" fill="rgb(217,60,2)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1343.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::builder::Builder::from_env_lossy (3 samples, 0.15%)</title><rect x="95.1000%" y="1317" width="0.1500%" height="15" fill="rgb(207,26,24)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1327.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::builder::Builder::parse_lossy (3 samples, 0.15%)</title><rect x="95.1000%" y="1301" width="0.1500%" height="15" fill="rgb(252,210,15)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1311.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::builder::Builder::from_directives (3 samples, 0.15%)</title><rect x="95.1000%" y="1285" width="0.1500%" height="15" fill="rgb(253,209,26)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1295.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::collect (3 samples, 0.15%)</title><rect x="95.1000%" y="1269" width="0.1500%" height="15" fill="rgb(238,170,14)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1279.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.15%)</title><rect x="95.1000%" y="1253" width="0.1500%" height="15" fill="rgb(216,178,15)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1263.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.15%)</title><rect x="95.1000%" y="1237" width="0.1500%" height="15" fill="rgb(250,197,2)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1247.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.15%)</title><rect x="95.1000%" y="1221" width="0.1500%" height="15" fill="rgb(212,70,42)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1231.50"></text></g><g><title>arvz`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.15%)</title><rect x="95.1000%" y="1205" width="0.1500%" height="15" fill="rgb(227,213,9)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1215.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::find_map (3 samples, 0.15%)</title><rect x="95.1000%" y="1189" width="0.1500%" height="15" fill="rgb(245,99,25)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1199.50"></text></g><g><title>arvz`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.15%)</title><rect x="95.1000%" y="1173" width="0.1500%" height="15" fill="rgb(250,82,29)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1183.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.15%)</title><rect x="95.1000%" y="1157" width="0.1500%" height="15" fill="rgb(241,226,54)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1167.50"></text></g><g><title>arvz`core::iter::adapters::filter::filter_try_fold::_{{closure}} (3 samples, 0.15%)</title><rect x="95.1000%" y="1141" width="0.1500%" height="15" fill="rgb(221,99,41)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1151.50"></text></g><g><title>arvz`core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (3 samples, 0.15%)</title><rect x="95.1000%" y="1125" width="0.1500%" height="15" fill="rgb(213,90,21)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1135.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.15%)</title><rect x="95.1000%" y="1109" width="0.1500%" height="15" fill="rgb(205,208,24)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1119.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::builder::Builder::parse_lossy::_{{closure}} (3 samples, 0.15%)</title><rect x="95.1000%" y="1093" width="0.1500%" height="15" fill="rgb(246,31,12)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1103.50"></text></g><g><title>arvz`tracing_subscriber::filter::env::directive::Directive::parse (3 samples, 0.15%)</title><rect x="95.1000%" y="1077" width="0.1500%" height="15" fill="rgb(213,154,6)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1087.50"></text></g><g><title>arvz`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.15%)</title><rect x="95.1000%" y="1061" width="0.1500%" height="15" fill="rgb(222,163,29)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1071.50"></text></g><g><title>arvz`once_cell::sync::Lazy&lt;T,F&gt;::force (3 samples, 0.15%)</title><rect x="95.1000%" y="1045" width="0.1500%" height="15" fill="rgb(227,201,8)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1055.50"></text></g><g><title>arvz`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (3 samples, 0.15%)</title><rect x="95.1000%" y="1029" width="0.1500%" height="15" fill="rgb(233,9,32)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1039.50"></text></g><g><title>arvz`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (3 samples, 0.15%)</title><rect x="95.1000%" y="1013" width="0.1500%" height="15" fill="rgb(217,54,24)" fg:x="1902" fg:w="3"/><text x="95.3500%" y="1023.50"></text></g><g><title>arvz`once_cell::sync::OnceCell&lt;T&gt;::get (1 samples, 0.05%)</title><rect x="95.2000%" y="997" width="0.0500%" height="15" fill="rgb(235,192,0)" fg:x="1904" fg:w="1"/><text x="95.4500%" y="1007.50"></text></g><g><title>arvz`core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.05%)</title><rect x="95.2000%" y="981" width="0.0500%" height="15" fill="rgb(235,45,9)" fg:x="1904" fg:w="1"/><text x="95.4500%" y="991.50"></text></g><g><title>arvz`arvz::utils::initialize_logging (4 samples, 0.20%)</title><rect x="95.1000%" y="1349" width="0.2000%" height="15" fill="rgb(246,42,40)" fg:x="1902" fg:w="4"/><text x="95.3500%" y="1359.50"></text></g><g><title>arvz`tracing_subscriber::registry (1 samples, 0.05%)</title><rect x="95.2500%" y="1333" width="0.0500%" height="15" fill="rgb(248,111,24)" fg:x="1905" fg:w="1"/><text x="95.5000%" y="1343.50"></text></g><g><title>arvz`&lt;tracing_subscriber::registry::sharded::Registry as core::default::Default&gt;::default (1 samples, 0.05%)</title><rect x="95.2500%" y="1317" width="0.0500%" height="15" fill="rgb(249,65,22)" fg:x="1905" fg:w="1"/><text x="95.5000%" y="1327.50"></text></g><g><title>arvz`sharded_slab::pool::Pool&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="95.2500%" y="1301" width="0.0500%" height="15" fill="rgb(238,111,51)" fg:x="1905" fg:w="1"/><text x="95.5000%" y="1311.50"></text></g><g><title>arvz`sharded_slab::pool::Pool&lt;T&gt;::new_with_config (1 samples, 0.05%)</title><rect x="95.2500%" y="1285" width="0.0500%" height="15" fill="rgb(250,118,22)" fg:x="1905" fg:w="1"/><text x="95.5000%" y="1295.50"></text></g><g><title>arvz`sharded_slab::shard::Array&lt;T,C&gt;::new (1 samples, 0.05%)</title><rect x="95.2500%" y="1269" width="0.0500%" height="15" fill="rgb(234,84,26)" fg:x="1905" fg:w="1"/><text x="95.5000%" y="1279.50"></text></g><g><title>arvz`tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (1,899 samples, 94.95%)</title><rect x="0.4000%" y="1397" width="94.9500%" height="15" fill="rgb(243,172,12)" fg:x="8" fg:w="1899"/><text x="0.6500%" y="1407.50">arvz`tokio::runtime::park::CachedParkThread::block_on::_{{closure}}</text></g><g><title>arvz`arvz::main::_{{closure}} (1,899 samples, 94.95%)</title><rect x="0.4000%" y="1381" width="94.9500%" height="15" fill="rgb(236,150,49)" fg:x="8" fg:w="1899"/><text x="0.6500%" y="1391.50">arvz`arvz::main::_{{closure}}</text></g><g><title>arvz`arvz::tokio_main::_{{closure}} (1,899 samples, 94.95%)</title><rect x="0.4000%" y="1365" width="94.9500%" height="15" fill="rgb(225,197,26)" fg:x="8" fg:w="1899"/><text x="0.6500%" y="1375.50">arvz`arvz::tokio_main::_{{closure}}</text></g><g><title>arvz`clap_builder::derive::Parser::parse (1 samples, 0.05%)</title><rect x="95.3000%" y="1349" width="0.0500%" height="15" fill="rgb(214,17,42)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1359.50"></text></g><g><title>arvz`clap_builder::builder::command::Command::get_matches (1 samples, 0.05%)</title><rect x="95.3000%" y="1333" width="0.0500%" height="15" fill="rgb(224,165,40)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1343.50"></text></g><g><title>arvz`clap_builder::builder::command::Command::get_matches_from (1 samples, 0.05%)</title><rect x="95.3000%" y="1317" width="0.0500%" height="15" fill="rgb(246,100,4)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1327.50"></text></g><g><title>arvz`clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 0.05%)</title><rect x="95.3000%" y="1301" width="0.0500%" height="15" fill="rgb(222,103,0)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1311.50"></text></g><g><title>arvz`clap_builder::builder::command::Command::_do_parse (1 samples, 0.05%)</title><rect x="95.3000%" y="1285" width="0.0500%" height="15" fill="rgb(227,189,26)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1295.50"></text></g><g><title>arvz`clap_builder::builder::command::Command::_build_self (1 samples, 0.05%)</title><rect x="95.3000%" y="1269" width="0.0500%" height="15" fill="rgb(214,202,17)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1279.50"></text></g><g><title>arvz`clap_builder::builder::debug_asserts::assert_app (1 samples, 0.05%)</title><rect x="95.3000%" y="1253" width="0.0500%" height="15" fill="rgb(229,111,3)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1263.50"></text></g><g><title>arvz`clap_builder::builder::command::Command::two_args_of (1 samples, 0.05%)</title><rect x="95.3000%" y="1237" width="0.0500%" height="15" fill="rgb(229,172,15)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1247.50"></text></g><g><title>arvz`clap_builder::builder::command::two_elements_of (1 samples, 0.05%)</title><rect x="95.3000%" y="1221" width="0.0500%" height="15" fill="rgb(230,224,35)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1231.50"></text></g><g><title>arvz`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="95.3000%" y="1205" width="0.0500%" height="15" fill="rgb(251,141,6)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1215.50"></text></g><g><title>arvz`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.05%)</title><rect x="95.3000%" y="1189" width="0.0500%" height="15" fill="rgb(225,208,6)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1199.50"></text></g><g><title>arvz`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.05%)</title><rect x="95.3000%" y="1173" width="0.0500%" height="15" fill="rgb(246,181,16)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1183.50"></text></g><g><title>arvz`clap_builder::builder::command::Command::two_args_of::_{{closure}} (1 samples, 0.05%)</title><rect x="95.3000%" y="1157" width="0.0500%" height="15" fill="rgb(227,129,36)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1167.50"></text></g><g><title>arvz`clap_builder::builder::debug_asserts::assert_app::_{{closure}} (1 samples, 0.05%)</title><rect x="95.3000%" y="1141" width="0.0500%" height="15" fill="rgb(248,117,24)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1151.50"></text></g><g><title>arvz`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.05%)</title><rect x="95.3000%" y="1125" width="0.0500%" height="15" fill="rgb(214,185,35)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1135.50"></text></g><g><title>arvz`&lt;clap_builder::util::id::Id as core::cmp::PartialEq&gt;::eq (1 samples, 0.05%)</title><rect x="95.3000%" y="1109" width="0.0500%" height="15" fill="rgb(236,150,34)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1119.50"></text></g><g><title>arvz`&lt;clap_builder::builder::str::Str as core::cmp::PartialEq&gt;::eq (1 samples, 0.05%)</title><rect x="95.3000%" y="1093" width="0.0500%" height="15" fill="rgb(243,228,27)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1103.50"></text></g><g><title>arvz`clap_builder::builder::str::_&lt;impl core::cmp::PartialEq for clap_builder::builder::str::inner::Inner&gt;::eq (1 samples, 0.05%)</title><rect x="95.3000%" y="1077" width="0.0500%" height="15" fill="rgb(245,77,44)" fg:x="1906" fg:w="1"/><text x="95.5500%" y="1087.50"></text></g><g><title>arvz`main (1,904 samples, 95.20%)</title><rect x="0.3000%" y="1605" width="95.2000%" height="15" fill="rgb(235,214,42)" fg:x="6" fg:w="1904"/><text x="0.5500%" y="1615.50">arvz`main</text></g><g><title>arvz`std::rt::lang_start (1,904 samples, 95.20%)</title><rect x="0.3000%" y="1589" width="95.2000%" height="15" fill="rgb(221,74,3)" fg:x="6" fg:w="1904"/><text x="0.5500%" y="1599.50">arvz`std::rt::lang_start</text></g><g><title>arvz`std::rt::lang_start_internal (1,904 samples, 95.20%)</title><rect x="0.3000%" y="1573" width="95.2000%" height="15" fill="rgb(206,121,29)" fg:x="6" fg:w="1904"/><text x="0.5500%" y="1583.50">arvz`std::rt::lang_start_internal</text></g><g><title>arvz`std::rt::lang_start::_{{closure}} (1,904 samples, 95.20%)</title><rect x="0.3000%" y="1557" width="95.2000%" height="15" fill="rgb(249,131,53)" fg:x="6" fg:w="1904"/><text x="0.5500%" y="1567.50">arvz`std::rt::lang_start::_{{closure}}</text></g><g><title>arvz`std::sys_common::backtrace::__rust_begin_short_backtrace (1,904 samples, 95.20%)</title><rect x="0.3000%" y="1541" width="95.2000%" height="15" fill="rgb(236,170,29)" fg:x="6" fg:w="1904"/><text x="0.5500%" y="1551.50">arvz`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>arvz`core::ops::function::FnOnce::call_once (1,904 samples, 95.20%)</title><rect x="0.3000%" y="1525" width="95.2000%" height="15" fill="rgb(247,96,15)" fg:x="6" fg:w="1904"/><text x="0.5500%" y="1535.50">arvz`core::ops::function::FnOnce::call_once</text></g><g><title>arvz`arvz::main (1,904 samples, 95.20%)</title><rect x="0.3000%" y="1509" width="95.2000%" height="15" fill="rgb(211,210,7)" fg:x="6" fg:w="1904"/><text x="0.5500%" y="1519.50">arvz`arvz::main</text></g><g><title>arvz`tokio::runtime::runtime::Runtime::block_on (1,903 samples, 95.15%)</title><rect x="0.3500%" y="1493" width="95.1500%" height="15" fill="rgb(240,88,50)" fg:x="7" fg:w="1903"/><text x="0.6000%" y="1503.50">arvz`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::MultiThread::block_on (1,903 samples, 95.15%)</title><rect x="0.3500%" y="1477" width="95.1500%" height="15" fill="rgb(209,229,26)" fg:x="7" fg:w="1903"/><text x="0.6000%" y="1487.50">arvz`tokio::runtime::scheduler::multi_thread::MultiThread::block_on</text></g><g><title>arvz`tokio::runtime::context::runtime::enter_runtime (1,903 samples, 95.15%)</title><rect x="0.3500%" y="1461" width="95.1500%" height="15" fill="rgb(210,68,23)" fg:x="7" fg:w="1903"/><text x="0.6000%" y="1471.50">arvz`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (1,903 samples, 95.15%)</title><rect x="0.3500%" y="1445" width="95.1500%" height="15" fill="rgb(229,180,13)" fg:x="7" fg:w="1903"/><text x="0.6000%" y="1455.50">arvz`tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}}</text></g><g><title>arvz`tokio::runtime::context::blocking::BlockingRegionGuard::block_on (1,903 samples, 95.15%)</title><rect x="0.3500%" y="1429" width="95.1500%" height="15" fill="rgb(236,53,44)" fg:x="7" fg:w="1903"/><text x="0.6000%" y="1439.50">arvz`tokio::runtime::context::blocking::BlockingRegionGuard::block_on</text></g><g><title>arvz`tokio::runtime::park::CachedParkThread::block_on (1,903 samples, 95.15%)</title><rect x="0.3500%" y="1413" width="95.1500%" height="15" fill="rgb(244,214,29)" fg:x="7" fg:w="1903"/><text x="0.6000%" y="1423.50">arvz`tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>arvz`tokio::runtime::park::CachedParkThread::park (3 samples, 0.15%)</title><rect x="95.3500%" y="1397" width="0.1500%" height="15" fill="rgb(220,75,29)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1407.50"></text></g><g><title>arvz`tokio::runtime::park::CachedParkThread::with_current (3 samples, 0.15%)</title><rect x="95.3500%" y="1381" width="0.1500%" height="15" fill="rgb(214,183,37)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1391.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.15%)</title><rect x="95.3500%" y="1365" width="0.1500%" height="15" fill="rgb(239,117,29)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1375.50"></text></g><g><title>arvz`tokio::runtime::park::CachedParkThread::with_current::_{{closure}} (3 samples, 0.15%)</title><rect x="95.3500%" y="1349" width="0.1500%" height="15" fill="rgb(237,171,35)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1359.50"></text></g><g><title>arvz`tokio::runtime::park::CachedParkThread::park::_{{closure}} (3 samples, 0.15%)</title><rect x="95.3500%" y="1333" width="0.1500%" height="15" fill="rgb(229,178,53)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1343.50"></text></g><g><title>arvz`tokio::runtime::park::Inner::park (3 samples, 0.15%)</title><rect x="95.3500%" y="1317" width="0.1500%" height="15" fill="rgb(210,102,19)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1327.50"></text></g><g><title>arvz`tokio::loom::std::parking_lot::Condvar::wait (3 samples, 0.15%)</title><rect x="95.3500%" y="1301" width="0.1500%" height="15" fill="rgb(235,127,22)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1311.50"></text></g><g><title>arvz`parking_lot::condvar::Condvar::wait (3 samples, 0.15%)</title><rect x="95.3500%" y="1285" width="0.1500%" height="15" fill="rgb(244,31,31)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1295.50"></text></g><g><title>arvz`parking_lot::condvar::Condvar::wait_until_internal (3 samples, 0.15%)</title><rect x="95.3500%" y="1269" width="0.1500%" height="15" fill="rgb(231,43,21)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1279.50"></text></g><g><title>arvz`parking_lot_core::parking_lot::park (3 samples, 0.15%)</title><rect x="95.3500%" y="1253" width="0.1500%" height="15" fill="rgb(217,131,35)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1263.50"></text></g><g><title>arvz`parking_lot_core::parking_lot::park::_{{closure}} (3 samples, 0.15%)</title><rect x="95.3500%" y="1237" width="0.1500%" height="15" fill="rgb(221,149,4)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1247.50"></text></g><g><title>arvz`&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (3 samples, 0.15%)</title><rect x="95.3500%" y="1221" width="0.1500%" height="15" fill="rgb(232,170,28)" fg:x="1907" fg:w="3"/><text x="95.6000%" y="1231.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.10%)</title><rect x="95.4000%" y="1205" width="0.1000%" height="15" fill="rgb(238,56,10)" fg:x="1908" fg:w="2"/><text x="95.6500%" y="1215.50"></text></g><g><title>dyld`start (1,905 samples, 95.25%)</title><rect x="0.3000%" y="1621" width="95.2500%" height="15" fill="rgb(235,196,14)" fg:x="6" fg:w="1905"/><text x="0.5500%" y="1631.50">dyld`start</text></g><g><title>dyld`lsl::EphemeralAllocator::~EphemeralAllocator (1 samples, 0.05%)</title><rect x="95.5000%" y="1605" width="0.0500%" height="15" fill="rgb(216,45,48)" fg:x="1910" fg:w="1"/><text x="95.7500%" y="1615.50"></text></g><g><title>dyld`lsl::EphemeralAllocator::reset (1 samples, 0.05%)</title><rect x="95.5000%" y="1589" width="0.0500%" height="15" fill="rgb(238,213,17)" fg:x="1910" fg:w="1"/><text x="95.7500%" y="1599.50"></text></g><g><title>dyld`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.05%)</title><rect x="95.5000%" y="1573" width="0.0500%" height="15" fill="rgb(212,13,2)" fg:x="1910" fg:w="1"/><text x="95.7500%" y="1583.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.05%)</title><rect x="95.5500%" y="1621" width="0.0500%" height="15" fill="rgb(240,114,20)" fg:x="1911" fg:w="1"/><text x="95.8000%" y="1631.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (1 samples, 0.05%)</title><rect x="95.6000%" y="1621" width="0.0500%" height="15" fill="rgb(228,41,40)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1631.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (1 samples, 0.05%)</title><rect x="95.6000%" y="1605" width="0.0500%" height="15" fill="rgb(244,132,35)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1615.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (1 samples, 0.05%)</title><rect x="95.6000%" y="1589" width="0.0500%" height="15" fill="rgb(253,189,4)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1599.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (1 samples, 0.05%)</title><rect x="95.6000%" y="1573" width="0.0500%" height="15" fill="rgb(224,37,19)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1583.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (1 samples, 0.05%)</title><rect x="95.6000%" y="1557" width="0.0500%" height="15" fill="rgb(235,223,18)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1567.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1 samples, 0.05%)</title><rect x="95.6000%" y="1541" width="0.0500%" height="15" fill="rgb(235,163,25)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1551.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.05%)</title><rect x="95.6000%" y="1525" width="0.0500%" height="15" fill="rgb(217,145,28)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1535.50"></text></g><g><title>libdispatch.dylib`_dispatch_block_async_invoke2 (1 samples, 0.05%)</title><rect x="95.6000%" y="1509" width="0.0500%" height="15" fill="rgb(223,223,32)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1519.50"></text></g><g><title>CoreAnalytics`invocation function for block in CoreAnalytics::Client::sendXpcMessage_sync (1 samples, 0.05%)</title><rect x="95.6000%" y="1493" width="0.0500%" height="15" fill="rgb(227,189,39)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1503.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.05%)</title><rect x="95.6000%" y="1477" width="0.0500%" height="15" fill="rgb(248,10,22)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1487.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.05%)</title><rect x="95.6000%" y="1461" width="0.0500%" height="15" fill="rgb(248,46,39)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1471.50"></text></g><g><title>CoreAnalytics`invocation function for block in CoreAnalytics::Client::acquireSendTransaction (1 samples, 0.05%)</title><rect x="95.6000%" y="1445" width="0.0500%" height="15" fill="rgb(248,113,48)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1455.50"></text></g><g><title>libxpc.dylib`os_transaction_create (1 samples, 0.05%)</title><rect x="95.6000%" y="1429" width="0.0500%" height="15" fill="rgb(245,16,25)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1439.50"></text></g><g><title>libxpc.dylib`_xpc_os_transaction_alloc (1 samples, 0.05%)</title><rect x="95.6000%" y="1413" width="0.0500%" height="15" fill="rgb(249,152,16)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1423.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.05%)</title><rect x="95.6000%" y="1397" width="0.0500%" height="15" fill="rgb(250,16,1)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1407.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.05%)</title><rect x="95.6000%" y="1381" width="0.0500%" height="15" fill="rgb(249,138,3)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1391.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, locker_mixin&lt;lockdebug::lock_mixin (1 samples, 0.05%)</title><rect x="95.6000%" y="1365" width="0.0500%" height="15" fill="rgb(227,71,41)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1375.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (1 samples, 0.05%)</title><rect x="95.6000%" y="1349" width="0.0500%" height="15" fill="rgb(209,184,23)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1359.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (1 samples, 0.05%)</title><rect x="95.6000%" y="1333" width="0.0500%" height="15" fill="rgb(223,215,31)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1343.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.05%)</title><rect x="95.6000%" y="1317" width="0.0500%" height="15" fill="rgb(210,146,28)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1327.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.05%)</title><rect x="95.6000%" y="1301" width="0.0500%" height="15" fill="rgb(209,183,41)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1311.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.05%)</title><rect x="95.6000%" y="1285" width="0.0500%" height="15" fill="rgb(209,224,45)" fg:x="1912" fg:w="1"/><text x="95.8500%" y="1295.50"></text></g><g><title>arvz`&lt;crossterm::event::stream::EventStream as core::default::Default&gt;::default::_{{closure}} (1 samples, 0.05%)</title><rect x="95.6500%" y="1445" width="0.0500%" height="15" fill="rgb(224,209,51)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1455.50"></text></g><g><title>arvz`std::sync::mpsc::Receiver&lt;T&gt;::recv (1 samples, 0.05%)</title><rect x="95.6500%" y="1429" width="0.0500%" height="15" fill="rgb(223,17,39)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1439.50"></text></g><g><title>arvz`std::sync::mpmc::Receiver&lt;T&gt;::recv (1 samples, 0.05%)</title><rect x="95.6500%" y="1413" width="0.0500%" height="15" fill="rgb(234,204,37)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1423.50"></text></g><g><title>arvz`std::sync::mpmc::array::Channel&lt;T&gt;::recv (1 samples, 0.05%)</title><rect x="95.6500%" y="1397" width="0.0500%" height="15" fill="rgb(236,120,5)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1407.50"></text></g><g><title>arvz`std::sync::mpmc::context::Context::with (1 samples, 0.05%)</title><rect x="95.6500%" y="1381" width="0.0500%" height="15" fill="rgb(248,97,27)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1391.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="95.6500%" y="1365" width="0.0500%" height="15" fill="rgb(240,66,17)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1375.50"></text></g><g><title>arvz`std::sync::mpmc::context::Context::with::_{{closure}} (1 samples, 0.05%)</title><rect x="95.6500%" y="1349" width="0.0500%" height="15" fill="rgb(210,79,3)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1359.50"></text></g><g><title>arvz`std::sync::mpmc::array::Channel&lt;T&gt;::recv::_{{closure}} (1 samples, 0.05%)</title><rect x="95.6500%" y="1333" width="0.0500%" height="15" fill="rgb(214,176,27)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1343.50"></text></g><g><title>arvz`std::sync::mpmc::context::Context::wait_until (1 samples, 0.05%)</title><rect x="95.6500%" y="1317" width="0.0500%" height="15" fill="rgb(235,185,3)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1327.50"></text></g><g><title>arvz`std::thread::park (1 samples, 0.05%)</title><rect x="95.6500%" y="1301" width="0.0500%" height="15" fill="rgb(227,24,12)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1311.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (1 samples, 0.05%)</title><rect x="95.6500%" y="1285" width="0.0500%" height="15" fill="rgb(252,169,48)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1295.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (1 samples, 0.05%)</title><rect x="95.6500%" y="1269" width="0.0500%" height="15" fill="rgb(212,65,1)" fg:x="1913" fg:w="1"/><text x="95.9000%" y="1279.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1 samples, 0.05%)</title><rect x="95.7500%" y="981" width="0.0500%" height="15" fill="rgb(242,39,24)" fg:x="1915" fg:w="1"/><text x="96.0000%" y="991.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (1 samples, 0.05%)</title><rect x="95.9000%" y="917" width="0.0500%" height="15" fill="rgb(249,32,23)" fg:x="1918" fg:w="1"/><text x="96.1500%" y="927.50"></text></g><g><title>arvz`tokio::loom::std::parking_lot::Condvar::wait (1 samples, 0.05%)</title><rect x="95.9000%" y="901" width="0.0500%" height="15" fill="rgb(251,195,23)" fg:x="1918" fg:w="1"/><text x="96.1500%" y="911.50"></text></g><g><title>arvz`parking_lot::condvar::Condvar::wait (1 samples, 0.05%)</title><rect x="95.9000%" y="885" width="0.0500%" height="15" fill="rgb(236,174,8)" fg:x="1918" fg:w="1"/><text x="96.1500%" y="895.50"></text></g><g><title>arvz`parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.05%)</title><rect x="95.9000%" y="869" width="0.0500%" height="15" fill="rgb(220,197,8)" fg:x="1918" fg:w="1"/><text x="96.1500%" y="879.50"></text></g><g><title>arvz`parking_lot_core::parking_lot::park (1 samples, 0.05%)</title><rect x="95.9000%" y="853" width="0.0500%" height="15" fill="rgb(240,108,37)" fg:x="1918" fg:w="1"/><text x="96.1500%" y="863.50"></text></g><g><title>arvz`parking_lot_core::parking_lot::park::_{{closure}} (1 samples, 0.05%)</title><rect x="95.9000%" y="837" width="0.0500%" height="15" fill="rgb(232,176,24)" fg:x="1918" fg:w="1"/><text x="96.1500%" y="847.50"></text></g><g><title>arvz`&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.05%)</title><rect x="95.9000%" y="821" width="0.0500%" height="15" fill="rgb(243,35,29)" fg:x="1918" fg:w="1"/><text x="96.1500%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.05%)</title><rect x="95.9000%" y="805" width="0.0500%" height="15" fill="rgb(210,37,18)" fg:x="1918" fg:w="1"/><text x="96.1500%" y="815.50"></text></g><g><title>arvz`core::time::Duration::from_millis (1 samples, 0.05%)</title><rect x="95.9500%" y="837" width="0.0500%" height="15" fill="rgb(224,184,40)" fg:x="1919" fg:w="1"/><text x="96.2000%" y="847.50"></text></g><g><title>arvz`core::time::Duration::new (1 samples, 0.05%)</title><rect x="95.9500%" y="821" width="0.0500%" height="15" fill="rgb(236,39,29)" fg:x="1919" fg:w="1"/><text x="96.2000%" y="831.50"></text></g><g><title>arvz`tokio::process::imp::GlobalOrphanQueue::reap_orphans (1 samples, 0.05%)</title><rect x="96.0500%" y="789" width="0.0500%" height="15" fill="rgb(232,48,39)" fg:x="1921" fg:w="1"/><text x="96.3000%" y="799.50"></text></g><g><title>arvz`tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (1 samples, 0.05%)</title><rect x="96.0500%" y="773" width="0.0500%" height="15" fill="rgb(236,34,42)" fg:x="1921" fg:w="1"/><text x="96.3000%" y="783.50"></text></g><g><title>arvz`tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (1 samples, 0.05%)</title><rect x="96.0500%" y="757" width="0.0500%" height="15" fill="rgb(243,106,37)" fg:x="1921" fg:w="1"/><text x="96.3000%" y="767.50"></text></g><g><title>arvz`lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (1 samples, 0.05%)</title><rect x="96.0500%" y="741" width="0.0500%" height="15" fill="rgb(218,96,6)" fg:x="1921" fg:w="1"/><text x="96.3000%" y="751.50"></text></g><g><title>arvz`&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (1 samples, 0.05%)</title><rect x="96.0500%" y="725" width="0.0500%" height="15" fill="rgb(235,130,12)" fg:x="1921" fg:w="1"/><text x="96.3000%" y="735.50"></text></g><g><title>arvz`core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.05%)</title><rect x="96.0500%" y="709" width="0.0500%" height="15" fill="rgb(231,95,0)" fg:x="1921" fg:w="1"/><text x="96.3000%" y="719.50"></text></g><g><title>arvz`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.05%)</title><rect x="96.1000%" y="757" width="0.0500%" height="15" fill="rgb(228,12,23)" fg:x="1922" fg:w="1"/><text x="96.3500%" y="767.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="96.2000%" y="741" width="0.0500%" height="15" fill="rgb(216,12,1)" fg:x="1924" fg:w="1"/><text x="96.4500%" y="751.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::map (2 samples, 0.10%)</title><rect x="96.2500%" y="725" width="0.1000%" height="15" fill="rgb(219,59,3)" fg:x="1925" fg:w="2"/><text x="96.5000%" y="735.50"></text></g><g><title>arvz`tokio::runtime::time::Driver::park_thread_timeout (22 samples, 1.10%)</title><rect x="96.0000%" y="837" width="1.1000%" height="15" fill="rgb(215,208,46)" fg:x="1920" fg:w="22"/><text x="96.2500%" y="847.50"></text></g><g><title>arvz`tokio::runtime::driver::IoStack::park_timeout (21 samples, 1.05%)</title><rect x="96.0500%" y="821" width="1.0500%" height="15" fill="rgb(254,224,29)" fg:x="1921" fg:w="21"/><text x="96.3000%" y="831.50"></text></g><g><title>arvz`tokio::runtime::process::Driver::park_timeout (21 samples, 1.05%)</title><rect x="96.0500%" y="805" width="1.0500%" height="15" fill="rgb(232,14,29)" fg:x="1921" fg:w="21"/><text x="96.3000%" y="815.50"></text></g><g><title>arvz`tokio::runtime::signal::Driver::park_timeout (20 samples, 1.00%)</title><rect x="96.1000%" y="789" width="1.0000%" height="15" fill="rgb(208,45,52)" fg:x="1922" fg:w="20"/><text x="96.3500%" y="799.50"></text></g><g><title>arvz`tokio::runtime::io::driver::Driver::park_timeout (20 samples, 1.00%)</title><rect x="96.1000%" y="773" width="1.0000%" height="15" fill="rgb(234,191,28)" fg:x="1922" fg:w="20"/><text x="96.3500%" y="783.50"></text></g><g><title>arvz`tokio::runtime::io::driver::Driver::turn (19 samples, 0.95%)</title><rect x="96.1500%" y="757" width="0.9500%" height="15" fill="rgb(244,67,43)" fg:x="1923" fg:w="19"/><text x="96.4000%" y="767.50"></text></g><g><title>arvz`mio::poll::Poll::poll (17 samples, 0.85%)</title><rect x="96.2500%" y="741" width="0.8500%" height="15" fill="rgb(236,189,24)" fg:x="1925" fg:w="17"/><text x="96.5000%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`kevent (15 samples, 0.75%)</title><rect x="96.3500%" y="725" width="0.7500%" height="15" fill="rgb(239,214,33)" fg:x="1927" fg:w="15"/><text x="96.6000%" y="735.50"></text></g><g><title>arvz`core::mem::drop (1 samples, 0.05%)</title><rect x="97.1000%" y="821" width="0.0500%" height="15" fill="rgb(226,176,41)" fg:x="1942" fg:w="1"/><text x="97.3500%" y="831.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="97.1500%" y="581" width="0.0500%" height="15" fill="rgb(248,47,8)" fg:x="1943" fg:w="1"/><text x="97.4000%" y="591.50"></text></g><g><title>arvz`&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="97.1500%" y="565" width="0.0500%" height="15" fill="rgb(218,81,44)" fg:x="1943" fg:w="1"/><text x="97.4000%" y="575.50"></text></g><g><title>arvz`core::task::wake::Waker::wake (2 samples, 0.10%)</title><rect x="97.1500%" y="805" width="0.1000%" height="15" fill="rgb(213,98,6)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="815.50"></text></g><g><title>arvz`tokio::runtime::task::waker::wake_by_val (2 samples, 0.10%)</title><rect x="97.1500%" y="789" width="0.1000%" height="15" fill="rgb(222,85,22)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="799.50"></text></g><g><title>arvz`tokio::runtime::task::harness::_&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (2 samples, 0.10%)</title><rect x="97.1500%" y="773" width="0.1000%" height="15" fill="rgb(239,46,39)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="783.50"></text></g><g><title>arvz`tokio::runtime::task::raw::RawTask::schedule (2 samples, 0.10%)</title><rect x="97.1500%" y="757" width="0.1000%" height="15" fill="rgb(237,12,29)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="767.50"></text></g><g><title>arvz`tokio::runtime::task::raw::schedule (2 samples, 0.10%)</title><rect x="97.1500%" y="741" width="0.1000%" height="15" fill="rgb(214,77,8)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="751.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (2 samples, 0.10%)</title><rect x="97.1500%" y="725" width="0.1000%" height="15" fill="rgb(217,168,37)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="735.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (2 samples, 0.10%)</title><rect x="97.1500%" y="709" width="0.1000%" height="15" fill="rgb(221,217,23)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="719.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::with_current (2 samples, 0.10%)</title><rect x="97.1500%" y="693" width="0.1000%" height="15" fill="rgb(243,229,36)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="703.50"></text></g><g><title>arvz`tokio::runtime::context::with_scheduler (2 samples, 0.10%)</title><rect x="97.1500%" y="677" width="0.1000%" height="15" fill="rgb(251,163,40)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="687.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.10%)</title><rect x="97.1500%" y="661" width="0.1000%" height="15" fill="rgb(237,222,12)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="671.50"></text></g><g><title>arvz`tokio::runtime::context::with_scheduler::_{{closure}} (2 samples, 0.10%)</title><rect x="97.1500%" y="645" width="0.1000%" height="15" fill="rgb(248,132,6)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="655.50"></text></g><g><title>arvz`tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.10%)</title><rect x="97.1500%" y="629" width="0.1000%" height="15" fill="rgb(227,167,50)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="639.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (2 samples, 0.10%)</title><rect x="97.1500%" y="613" width="0.1000%" height="15" fill="rgb(242,84,37)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="623.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 0.10%)</title><rect x="97.1500%" y="597" width="0.1000%" height="15" fill="rgb(212,4,50)" fg:x="1943" fg:w="2"/><text x="97.4000%" y="607.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.05%)</title><rect x="97.2000%" y="581" width="0.0500%" height="15" fill="rgb(230,228,32)" fg:x="1944" fg:w="1"/><text x="97.4500%" y="591.50"></text></g><g><title>arvz`tokio::runtime::metrics::mock::MetricsBatch::inc_local_schedule_count (1 samples, 0.05%)</title><rect x="97.2000%" y="565" width="0.0500%" height="15" fill="rgb(248,217,23)" fg:x="1944" fg:w="1"/><text x="97.4500%" y="575.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.05%)</title><rect x="97.2500%" y="789" width="0.0500%" height="15" fill="rgb(238,197,32)" fg:x="1945" fg:w="1"/><text x="97.5000%" y="799.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::Wheel::no_expirations_before (1 samples, 0.05%)</title><rect x="97.2500%" y="773" width="0.0500%" height="15" fill="rgb(236,106,1)" fg:x="1945" fg:w="1"/><text x="97.5000%" y="783.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.05%)</title><rect x="97.2500%" y="757" width="0.0500%" height="15" fill="rgb(219,228,13)" fg:x="1945" fg:w="1"/><text x="97.5000%" y="767.50"></text></g><g><title>arvz`tokio::runtime::time::entry::TimerHandle::mark_pending (1 samples, 0.05%)</title><rect x="97.3000%" y="773" width="0.0500%" height="15" fill="rgb(238,30,35)" fg:x="1946" fg:w="1"/><text x="97.5500%" y="783.50"></text></g><g><title>arvz`tokio::runtime::time::entry::TimerShared::set_cached_when (1 samples, 0.05%)</title><rect x="97.3000%" y="757" width="0.0500%" height="15" fill="rgb(236,70,23)" fg:x="1946" fg:w="1"/><text x="97.5500%" y="767.50"></text></g><g><title>arvz`core::sync::atomic::AtomicU64::store (1 samples, 0.05%)</title><rect x="97.3000%" y="741" width="0.0500%" height="15" fill="rgb(249,104,48)" fg:x="1946" fg:w="1"/><text x="97.5500%" y="751.50"></text></g><g><title>arvz`core::sync::atomic::atomic_store (1 samples, 0.05%)</title><rect x="97.3000%" y="725" width="0.0500%" height="15" fill="rgb(254,117,50)" fg:x="1946" fg:w="1"/><text x="97.5500%" y="735.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::Wheel::poll (3 samples, 0.15%)</title><rect x="97.2500%" y="805" width="0.1500%" height="15" fill="rgb(223,152,4)" fg:x="1945" fg:w="3"/><text x="97.5000%" y="815.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::Wheel::process_expiration (2 samples, 0.10%)</title><rect x="97.3000%" y="789" width="0.1000%" height="15" fill="rgb(245,6,2)" fg:x="1946" fg:w="2"/><text x="97.5500%" y="799.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::Wheel::take_entries (1 samples, 0.05%)</title><rect x="97.3500%" y="773" width="0.0500%" height="15" fill="rgb(249,150,24)" fg:x="1947" fg:w="1"/><text x="97.6000%" y="783.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::level::Level::take_slot (1 samples, 0.05%)</title><rect x="97.3500%" y="757" width="0.0500%" height="15" fill="rgb(228,185,42)" fg:x="1947" fg:w="1"/><text x="97.6000%" y="767.50"></text></g><g><title>arvz`&lt;tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt; as core::default::Default&gt;::default (1 samples, 0.05%)</title><rect x="97.3500%" y="741" width="0.0500%" height="15" fill="rgb(226,39,33)" fg:x="1947" fg:w="1"/><text x="97.6000%" y="751.50"></text></g><g><title>arvz`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (6 samples, 0.30%)</title><rect x="97.1500%" y="821" width="0.3000%" height="15" fill="rgb(221,166,19)" fg:x="1943" fg:w="6"/><text x="97.4000%" y="831.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::Wheel::poll_at (1 samples, 0.05%)</title><rect x="97.4000%" y="805" width="0.0500%" height="15" fill="rgb(209,109,2)" fg:x="1948" fg:w="1"/><text x="97.6500%" y="815.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.05%)</title><rect x="97.4000%" y="789" width="0.0500%" height="15" fill="rgb(252,216,26)" fg:x="1948" fg:w="1"/><text x="97.6500%" y="799.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::Wheel::no_expirations_before (1 samples, 0.05%)</title><rect x="97.4000%" y="773" width="0.0500%" height="15" fill="rgb(227,173,36)" fg:x="1948" fg:w="1"/><text x="97.6500%" y="783.50"></text></g><g><title>arvz`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.05%)</title><rect x="97.4000%" y="757" width="0.0500%" height="15" fill="rgb(209,90,7)" fg:x="1948" fg:w="1"/><text x="97.6500%" y="767.50"></text></g><g><title>arvz`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.05%)</title><rect x="97.4000%" y="741" width="0.0500%" height="15" fill="rgb(250,194,11)" fg:x="1948" fg:w="1"/><text x="97.6500%" y="751.50"></text></g><g><title>arvz`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process (8 samples, 0.40%)</title><rect x="97.1000%" y="837" width="0.4000%" height="15" fill="rgb(220,72,50)" fg:x="1942" fg:w="8"/><text x="97.3500%" y="847.50"></text></g><g><title>arvz`tokio::runtime::time::source::TimeSource::now (1 samples, 0.05%)</title><rect x="97.4500%" y="821" width="0.0500%" height="15" fill="rgb(222,106,48)" fg:x="1949" fg:w="1"/><text x="97.7000%" y="831.50"></text></g><g><title>arvz`tokio::time::clock::Clock::now (1 samples, 0.05%)</title><rect x="97.4500%" y="805" width="0.0500%" height="15" fill="rgb(216,220,45)" fg:x="1949" fg:w="1"/><text x="97.7000%" y="815.50"></text></g><g><title>arvz`tokio::time::clock::now (1 samples, 0.05%)</title><rect x="97.4500%" y="789" width="0.0500%" height="15" fill="rgb(234,112,18)" fg:x="1949" fg:w="1"/><text x="97.7000%" y="799.50"></text></g><g><title>arvz`std::sys::unix::time::Timespec::now (1 samples, 0.05%)</title><rect x="97.4500%" y="773" width="0.0500%" height="15" fill="rgb(206,179,9)" fg:x="1949" fg:w="1"/><text x="97.7000%" y="783.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.05%)</title><rect x="97.4500%" y="757" width="0.0500%" height="15" fill="rgb(215,115,40)" fg:x="1949" fg:w="1"/><text x="97.7000%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.05%)</title><rect x="97.4500%" y="741" width="0.0500%" height="15" fill="rgb(222,69,34)" fg:x="1949" fg:w="1"/><text x="97.7000%" y="751.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (33 samples, 1.65%)</title><rect x="95.9000%" y="965" width="1.6500%" height="15" fill="rgb(209,161,10)" fg:x="1918" fg:w="33"/><text x="96.1500%" y="975.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::park::Parker::park (33 samples, 1.65%)</title><rect x="95.9000%" y="949" width="1.6500%" height="15" fill="rgb(217,6,38)" fg:x="1918" fg:w="33"/><text x="96.1500%" y="959.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::park::Inner::park (33 samples, 1.65%)</title><rect x="95.9000%" y="933" width="1.6500%" height="15" fill="rgb(229,229,48)" fg:x="1918" fg:w="33"/><text x="96.1500%" y="943.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (32 samples, 1.60%)</title><rect x="95.9500%" y="917" width="1.6000%" height="15" fill="rgb(225,21,28)" fg:x="1919" fg:w="32"/><text x="96.2000%" y="927.50"></text></g><g><title>arvz`tokio::runtime::driver::Driver::park (32 samples, 1.60%)</title><rect x="95.9500%" y="901" width="1.6000%" height="15" fill="rgb(206,33,13)" fg:x="1919" fg:w="32"/><text x="96.2000%" y="911.50"></text></g><g><title>arvz`tokio::runtime::driver::TimeDriver::park (32 samples, 1.60%)</title><rect x="95.9500%" y="885" width="1.6000%" height="15" fill="rgb(242,178,17)" fg:x="1919" fg:w="32"/><text x="96.2000%" y="895.50"></text></g><g><title>arvz`tokio::runtime::time::Driver::park (32 samples, 1.60%)</title><rect x="95.9500%" y="869" width="1.6000%" height="15" fill="rgb(220,162,5)" fg:x="1919" fg:w="32"/><text x="96.2000%" y="879.50"></text></g><g><title>arvz`tokio::runtime::time::Driver::park_internal (32 samples, 1.60%)</title><rect x="95.9500%" y="853" width="1.6000%" height="15" fill="rgb(210,33,43)" fg:x="1919" fg:w="32"/><text x="96.2000%" y="863.50"></text></g><g><title>arvz`tokio::time::clock::Clock::now (1 samples, 0.05%)</title><rect x="97.5000%" y="837" width="0.0500%" height="15" fill="rgb(216,116,54)" fg:x="1950" fg:w="1"/><text x="97.7500%" y="847.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::park (36 samples, 1.80%)</title><rect x="95.8000%" y="981" width="1.8000%" height="15" fill="rgb(249,92,24)" fg:x="1916" fg:w="36"/><text x="96.0500%" y="991.50">a..</text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (1 samples, 0.05%)</title><rect x="97.5500%" y="965" width="0.0500%" height="15" fill="rgb(231,189,14)" fg:x="1951" fg:w="1"/><text x="97.8000%" y="975.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (1 samples, 0.05%)</title><rect x="97.5500%" y="949" width="0.0500%" height="15" fill="rgb(230,8,41)" fg:x="1951" fg:w="1"/><text x="97.8000%" y="959.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.05%)</title><rect x="97.5500%" y="933" width="0.0500%" height="15" fill="rgb(249,7,27)" fg:x="1951" fg:w="1"/><text x="97.8000%" y="943.50"></text></g><g><title>arvz`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.05%)</title><rect x="97.5500%" y="917" width="0.0500%" height="15" fill="rgb(232,86,5)" fg:x="1951" fg:w="1"/><text x="97.8000%" y="927.50"></text></g><g><title>arvz`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (1 samples, 0.05%)</title><rect x="97.6000%" y="517" width="0.0500%" height="15" fill="rgb(224,175,18)" fg:x="1952" fg:w="1"/><text x="97.8500%" y="527.50"></text></g><g><title>arvz`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (1 samples, 0.05%)</title><rect x="97.6000%" y="501" width="0.0500%" height="15" fill="rgb(220,129,12)" fg:x="1952" fg:w="1"/><text x="97.8500%" y="511.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;hyper::body::body::Sender&gt; (1 samples, 0.05%)</title><rect x="97.6500%" y="501" width="0.0500%" height="15" fill="rgb(210,19,36)" fg:x="1953" fg:w="1"/><text x="97.9000%" y="511.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;futures_channel::mpsc::Sender&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="97.6500%" y="485" width="0.0500%" height="15" fill="rgb(219,96,14)" fg:x="1953" fg:w="1"/><text x="97.9000%" y="495.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;core::option::Option&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="97.6500%" y="469" width="0.0500%" height="15" fill="rgb(249,106,1)" fg:x="1953" fg:w="1"/><text x="97.9000%" y="479.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="97.6500%" y="453" width="0.0500%" height="15" fill="rgb(249,155,20)" fg:x="1953" fg:w="1"/><text x="97.9000%" y="463.50"></text></g><g><title>arvz`&lt;futures_channel::mpsc::BoundedSenderInner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="97.6500%" y="437" width="0.0500%" height="15" fill="rgb(244,168,9)" fg:x="1953" fg:w="1"/><text x="97.9000%" y="447.50"></text></g><g><title>arvz`futures_channel::mpsc::BoundedInner&lt;T&gt;::set_closed (1 samples, 0.05%)</title><rect x="97.6500%" y="421" width="0.0500%" height="15" fill="rgb(216,23,50)" fg:x="1953" fg:w="1"/><text x="97.9000%" y="431.50"></text></g><g><title>arvz`hyper::body::body::Sender::try_send_data (1 samples, 0.05%)</title><rect x="97.7000%" y="501" width="0.0500%" height="15" fill="rgb(224,219,20)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="511.50"></text></g><g><title>arvz`futures_channel::mpsc::Sender&lt;T&gt;::try_send (1 samples, 0.05%)</title><rect x="97.7000%" y="485" width="0.0500%" height="15" fill="rgb(222,156,15)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="495.50"></text></g><g><title>arvz`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (1 samples, 0.05%)</title><rect x="97.7000%" y="469" width="0.0500%" height="15" fill="rgb(231,97,17)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="479.50"></text></g><g><title>arvz`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (1 samples, 0.05%)</title><rect x="97.7000%" y="453" width="0.0500%" height="15" fill="rgb(218,70,48)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="463.50"></text></g><g><title>arvz`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (1 samples, 0.05%)</title><rect x="97.7000%" y="437" width="0.0500%" height="15" fill="rgb(212,196,52)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="447.50"></text></g><g><title>arvz`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1 samples, 0.05%)</title><rect x="97.7000%" y="421" width="0.0500%" height="15" fill="rgb(243,203,18)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="431.50"></text></g><g><title>arvz`core::task::wake::Waker::wake (1 samples, 0.05%)</title><rect x="97.7000%" y="405" width="0.0500%" height="15" fill="rgb(252,125,41)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="415.50"></text></g><g><title>arvz`tokio::runtime::task::waker::wake_by_val (1 samples, 0.05%)</title><rect x="97.7000%" y="389" width="0.0500%" height="15" fill="rgb(223,180,33)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="399.50"></text></g><g><title>arvz`tokio::runtime::task::harness::_&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 0.05%)</title><rect x="97.7000%" y="373" width="0.0500%" height="15" fill="rgb(254,159,46)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="383.50"></text></g><g><title>arvz`tokio::runtime::task::raw::RawTask::schedule (1 samples, 0.05%)</title><rect x="97.7000%" y="357" width="0.0500%" height="15" fill="rgb(254,38,10)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="367.50"></text></g><g><title>arvz`tokio::runtime::task::raw::schedule (1 samples, 0.05%)</title><rect x="97.7000%" y="341" width="0.0500%" height="15" fill="rgb(208,217,32)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="351.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 0.05%)</title><rect x="97.7000%" y="325" width="0.0500%" height="15" fill="rgb(221,120,13)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="335.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.05%)</title><rect x="97.7000%" y="309" width="0.0500%" height="15" fill="rgb(246,54,52)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="319.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::with_current (1 samples, 0.05%)</title><rect x="97.7000%" y="293" width="0.0500%" height="15" fill="rgb(242,34,25)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="303.50"></text></g><g><title>arvz`tokio::runtime::context::with_scheduler (1 samples, 0.05%)</title><rect x="97.7000%" y="277" width="0.0500%" height="15" fill="rgb(247,209,9)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="287.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="97.7000%" y="261" width="0.0500%" height="15" fill="rgb(228,71,26)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="271.50"></text></g><g><title>arvz`tokio::runtime::context::with_scheduler::_{{closure}} (1 samples, 0.05%)</title><rect x="97.7000%" y="245" width="0.0500%" height="15" fill="rgb(222,145,49)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="255.50"></text></g><g><title>arvz`tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="97.7000%" y="229" width="0.0500%" height="15" fill="rgb(218,121,17)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="239.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (1 samples, 0.05%)</title><rect x="97.7000%" y="213" width="0.0500%" height="15" fill="rgb(244,50,7)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="223.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (1 samples, 0.05%)</title><rect x="97.7000%" y="197" width="0.0500%" height="15" fill="rgb(246,229,37)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="207.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="97.7000%" y="181" width="0.0500%" height="15" fill="rgb(225,18,5)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="191.50"></text></g><g><title>arvz`&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="97.7000%" y="165" width="0.0500%" height="15" fill="rgb(213,204,8)" fg:x="1954" fg:w="1"/><text x="97.9500%" y="175.50"></text></g><g><title>arvz`&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (1 samples, 0.05%)</title><rect x="97.8000%" y="469" width="0.0500%" height="15" fill="rgb(238,103,6)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="479.50"></text></g><g><title>arvz`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.05%)</title><rect x="97.8000%" y="453" width="0.0500%" height="15" fill="rgb(222,25,35)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="463.50"></text></g><g><title>arvz`&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.05%)</title><rect x="97.8000%" y="437" width="0.0500%" height="15" fill="rgb(213,203,35)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="447.50"></text></g><g><title>arvz`&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.05%)</title><rect x="97.8000%" y="421" width="0.0500%" height="15" fill="rgb(221,79,53)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="431.50"></text></g><g><title>arvz`&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.05%)</title><rect x="97.8000%" y="405" width="0.0500%" height="15" fill="rgb(243,200,35)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="415.50"></text></g><g><title>arvz`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.05%)</title><rect x="97.8000%" y="389" width="0.0500%" height="15" fill="rgb(248,60,25)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="399.50"></text></g><g><title>arvz`tokio_native_tls::TlsStream&lt;S&gt;::with_context (1 samples, 0.05%)</title><rect x="97.8000%" y="373" width="0.0500%" height="15" fill="rgb(227,53,46)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="383.50"></text></g><g><title>arvz`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::_{{closure}} (1 samples, 0.05%)</title><rect x="97.8000%" y="357" width="0.0500%" height="15" fill="rgb(216,120,32)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="367.50"></text></g><g><title>arvz`&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.05%)</title><rect x="97.8000%" y="341" width="0.0500%" height="15" fill="rgb(220,134,1)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="351.50"></text></g><g><title>arvz`&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.05%)</title><rect x="97.8000%" y="325" width="0.0500%" height="15" fill="rgb(237,168,5)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="335.50"></text></g><g><title>arvz`&lt;security_framework::secure_transport::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.05%)</title><rect x="97.8000%" y="309" width="0.0500%" height="15" fill="rgb(231,100,33)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="319.50"></text></g><g><title>Security`SSLRead (1 samples, 0.05%)</title><rect x="97.8000%" y="293" width="0.0500%" height="15" fill="rgb(236,177,47)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="303.50"></text></g><g><title>Security`SSLRecordReadInternal (1 samples, 0.05%)</title><rect x="97.8000%" y="277" width="0.0500%" height="15" fill="rgb(235,7,49)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="287.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypt (1 samples, 0.05%)</title><rect x="97.8000%" y="261" width="0.0500%" height="15" fill="rgb(232,119,22)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="271.50"></text></g><g><title>libcoretls.dylib`SSLDecryptRecord (1 samples, 0.05%)</title><rect x="97.8000%" y="245" width="0.0500%" height="15" fill="rgb(254,73,53)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="255.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADDecrypt (1 samples, 0.05%)</title><rect x="97.8000%" y="229" width="0.0500%" height="15" fill="rgb(251,35,20)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="239.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_update (1 samples, 0.05%)</title><rect x="97.8000%" y="213" width="0.0500%" height="15" fill="rgb(241,119,20)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="223.50"></text></g><g><title>libcorecrypto.dylib`Decrypt_Main_Loop (1 samples, 0.05%)</title><rect x="97.8000%" y="197" width="0.0500%" height="15" fill="rgb(207,102,14)" fg:x="1956" fg:w="1"/><text x="98.0500%" y="207.50"></text></g><g><title>arvz`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (3 samples, 0.15%)</title><rect x="97.7500%" y="501" width="0.1500%" height="15" fill="rgb(248,201,50)" fg:x="1955" fg:w="3"/><text x="98.0000%" y="511.50"></text></g><g><title>arvz`hyper::proto::h1::decode::Decoder::decode (3 samples, 0.15%)</title><rect x="97.7500%" y="485" width="0.1500%" height="15" fill="rgb(222,185,44)" fg:x="1955" fg:w="3"/><text x="98.0000%" y="495.50"></text></g><g><title>arvz`hyper::proto::h1::decode::Decoder::decode::_{{closure}} (1 samples, 0.05%)</title><rect x="97.8500%" y="469" width="0.0500%" height="15" fill="rgb(218,107,18)" fg:x="1957" fg:w="1"/><text x="98.1000%" y="479.50"></text></g><g><title>arvz`tracing_core::event::Event::dispatch (1 samples, 0.05%)</title><rect x="97.8500%" y="453" width="0.0500%" height="15" fill="rgb(237,177,39)" fg:x="1957" fg:w="1"/><text x="98.1000%" y="463.50"></text></g><g><title>arvz`tracing_core::dispatcher::get_default (1 samples, 0.05%)</title><rect x="97.8500%" y="437" width="0.0500%" height="15" fill="rgb(246,69,6)" fg:x="1957" fg:w="1"/><text x="98.1000%" y="447.50"></text></g><g><title>arvz`tracing_core::event::Event::dispatch::_{{closure}} (1 samples, 0.05%)</title><rect x="97.8500%" y="421" width="0.0500%" height="15" fill="rgb(234,208,37)" fg:x="1957" fg:w="1"/><text x="98.1000%" y="431.50"></text></g><g><title>arvz`tracing_core::dispatcher::Dispatch::event (1 samples, 0.05%)</title><rect x="97.8500%" y="405" width="0.0500%" height="15" fill="rgb(225,4,6)" fg:x="1957" fg:w="1"/><text x="98.1000%" y="415.50"></text></g><g><title>arvz`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (1 samples, 0.05%)</title><rect x="97.8500%" y="389" width="0.0500%" height="15" fill="rgb(233,45,0)" fg:x="1957" fg:w="1"/><text x="98.1000%" y="399.50"></text></g><g><title>arvz`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (1 samples, 0.05%)</title><rect x="97.8500%" y="373" width="0.0500%" height="15" fill="rgb(226,136,5)" fg:x="1957" fg:w="1"/><text x="98.1000%" y="383.50"></text></g><g><title>arvz`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (1 samples, 0.05%)</title><rect x="97.8500%" y="357" width="0.0500%" height="15" fill="rgb(211,91,47)" fg:x="1957" fg:w="1"/><text x="98.1000%" y="367.50"></text></g><g><title>arvz`tracing_subscriber::filter::layer_filters::FilterState::event_enabled (1 samples, 0.05%)</title><rect x="97.8500%" y="341" width="0.0500%" height="15" fill="rgb(242,88,51)" fg:x="1957" fg:w="1"/><text x="98.1000%" y="351.50"></text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="97.8500%" y="325" width="0.0500%" height="15" fill="rgb(230,91,28)" fg:x="1957" fg:w="1"/><text x="98.1000%" y="335.50"></text></g><g><title>arvz`&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (1 samples, 0.05%)</title><rect x="97.9000%" y="485" width="0.0500%" height="15" fill="rgb(254,186,29)" fg:x="1958" fg:w="1"/><text x="98.1500%" y="495.50"></text></g><g><title>arvz`hyper::proto::MessageHead&lt;http::status::StatusCode&gt;::into_response (1 samples, 0.05%)</title><rect x="97.9000%" y="469" width="0.0500%" height="15" fill="rgb(238,6,4)" fg:x="1958" fg:w="1"/><text x="98.1500%" y="479.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.05%)</title><rect x="97.9000%" y="453" width="0.0500%" height="15" fill="rgb(221,151,16)" fg:x="1958" fg:w="1"/><text x="98.1500%" y="463.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="97.9000%" y="437" width="0.0500%" height="15" fill="rgb(251,143,52)" fg:x="1958" fg:w="1"/><text x="98.1500%" y="447.50"></text></g><g><title>arvz`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.40%)</title><rect x="97.6000%" y="725" width="0.4000%" height="15" fill="rgb(206,90,15)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="735.50"></text></g><g><title>arvz`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.40%)</title><rect x="97.6000%" y="709" width="0.4000%" height="15" fill="rgb(218,35,8)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="719.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.40%)</title><rect x="97.6000%" y="693" width="0.4000%" height="15" fill="rgb(239,215,6)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="703.50"></text></g><g><title>arvz`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.40%)</title><rect x="97.6000%" y="677" width="0.4000%" height="15" fill="rgb(245,116,39)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="687.50"></text></g><g><title>arvz`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.40%)</title><rect x="97.6000%" y="661" width="0.4000%" height="15" fill="rgb(242,65,28)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="671.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (8 samples, 0.40%)</title><rect x="97.6000%" y="645" width="0.4000%" height="15" fill="rgb(252,132,53)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="655.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (8 samples, 0.40%)</title><rect x="97.6000%" y="629" width="0.4000%" height="15" fill="rgb(224,159,50)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="639.50"></text></g><g><title>arvz`&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (8 samples, 0.40%)</title><rect x="97.6000%" y="613" width="0.4000%" height="15" fill="rgb(224,93,4)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="623.50"></text></g><g><title>arvz`&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (8 samples, 0.40%)</title><rect x="97.6000%" y="597" width="0.4000%" height="15" fill="rgb(208,81,34)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="607.50"></text></g><g><title>arvz`&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.40%)</title><rect x="97.6000%" y="581" width="0.4000%" height="15" fill="rgb(233,92,54)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="591.50"></text></g><g><title>arvz`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (8 samples, 0.40%)</title><rect x="97.6000%" y="565" width="0.4000%" height="15" fill="rgb(237,21,14)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="575.50"></text></g><g><title>arvz`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (8 samples, 0.40%)</title><rect x="97.6000%" y="549" width="0.4000%" height="15" fill="rgb(249,128,51)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="559.50"></text></g><g><title>arvz`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (8 samples, 0.40%)</title><rect x="97.6000%" y="533" width="0.4000%" height="15" fill="rgb(223,129,24)" fg:x="1952" fg:w="8"/><text x="97.8500%" y="543.50"></text></g><g><title>arvz`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (7 samples, 0.35%)</title><rect x="97.6500%" y="517" width="0.3500%" height="15" fill="rgb(231,168,25)" fg:x="1953" fg:w="7"/><text x="97.9000%" y="527.50"></text></g><g><title>arvz`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (2 samples, 0.10%)</title><rect x="97.9000%" y="501" width="0.1000%" height="15" fill="rgb(224,39,20)" fg:x="1958" fg:w="2"/><text x="98.1500%" y="511.50"></text></g><g><title>arvz`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1 samples, 0.05%)</title><rect x="97.9500%" y="485" width="0.0500%" height="15" fill="rgb(225,152,53)" fg:x="1959" fg:w="1"/><text x="98.2000%" y="495.50"></text></g><g><title>arvz`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1 samples, 0.05%)</title><rect x="97.9500%" y="469" width="0.0500%" height="15" fill="rgb(252,17,24)" fg:x="1959" fg:w="1"/><text x="98.2000%" y="479.50"></text></g><g><title>arvz`hyper::proto::h1::role::parse_headers (1 samples, 0.05%)</title><rect x="97.9500%" y="453" width="0.0500%" height="15" fill="rgb(250,114,30)" fg:x="1959" fg:w="1"/><text x="98.2000%" y="463.50"></text></g><g><title>arvz`httparse::ParserConfig::parse_response_with_uninit_headers (1 samples, 0.05%)</title><rect x="97.9500%" y="437" width="0.0500%" height="15" fill="rgb(229,5,4)" fg:x="1959" fg:w="1"/><text x="98.2000%" y="447.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="693" width="0.0500%" height="15" fill="rgb(225,176,49)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="703.50"></text></g><g><title>arvz`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="677" width="0.0500%" height="15" fill="rgb(224,221,49)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="687.50"></text></g><g><title>arvz`&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="661" width="0.0500%" height="15" fill="rgb(253,169,27)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="671.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (1 samples, 0.05%)</title><rect x="98.0000%" y="645" width="0.0500%" height="15" fill="rgb(211,206,16)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="655.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::send_request::_{{closure}} (1 samples, 0.05%)</title><rect x="98.0000%" y="629" width="0.0500%" height="15" fill="rgb(244,87,35)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="639.50"></text></g><g><title>arvz`hyper::client::client::Client&lt;C,B&gt;::connection_for::_{{closure}} (1 samples, 0.05%)</title><rect x="98.0000%" y="613" width="0.0500%" height="15" fill="rgb(246,28,10)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="623.50"></text></g><g><title>arvz`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="597" width="0.0500%" height="15" fill="rgb(229,12,44)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="607.50"></text></g><g><title>arvz`futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.05%)</title><rect x="98.0000%" y="581" width="0.0500%" height="15" fill="rgb(210,145,37)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="591.50"></text></g><g><title>arvz`&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="565" width="0.0500%" height="15" fill="rgb(227,112,52)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="575.50"></text></g><g><title>arvz`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="549" width="0.0500%" height="15" fill="rgb(238,155,34)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="559.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="533" width="0.0500%" height="15" fill="rgb(239,226,36)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="543.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="517" width="0.0500%" height="15" fill="rgb(230,16,23)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="527.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="501" width="0.0500%" height="15" fill="rgb(236,171,36)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="511.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="98.0000%" y="485" width="0.0500%" height="15" fill="rgb(221,22,14)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="495.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="469" width="0.0500%" height="15" fill="rgb(242,43,11)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="479.50"></text></g><g><title>arvz`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="453" width="0.0500%" height="15" fill="rgb(232,69,23)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="463.50"></text></g><g><title>arvz`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="437" width="0.0500%" height="15" fill="rgb(216,180,54)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="447.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="421" width="0.0500%" height="15" fill="rgb(216,5,24)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="431.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="98.0000%" y="405" width="0.0500%" height="15" fill="rgb(225,89,9)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="415.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="389" width="0.0500%" height="15" fill="rgb(243,75,33)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="399.50"></text></g><g><title>arvz`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="373" width="0.0500%" height="15" fill="rgb(247,141,45)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="383.50"></text></g><g><title>arvz`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="357" width="0.0500%" height="15" fill="rgb(232,177,36)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="367.50"></text></g><g><title>arvz`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="341" width="0.0500%" height="15" fill="rgb(219,125,36)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="351.50"></text></g><g><title>arvz`&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.05%)</title><rect x="98.0000%" y="325" width="0.0500%" height="15" fill="rgb(227,94,9)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="335.50"></text></g><g><title>arvz`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="309" width="0.0500%" height="15" fill="rgb(240,34,52)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="319.50"></text></g><g><title>arvz`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="98.0000%" y="293" width="0.0500%" height="15" fill="rgb(216,45,12)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="303.50"></text></g><g><title>arvz`reqwest::connect::with_timeout::_{{closure}} (1 samples, 0.05%)</title><rect x="98.0000%" y="277" width="0.0500%" height="15" fill="rgb(246,21,19)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="287.50"></text></g><g><title>arvz`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (1 samples, 0.05%)</title><rect x="98.0000%" y="261" width="0.0500%" height="15" fill="rgb(213,98,42)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="271.50"></text></g><g><title>arvz`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call (1 samples, 0.05%)</title><rect x="98.0000%" y="245" width="0.0500%" height="15" fill="rgb(250,136,47)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="255.50"></text></g><g><title>arvz`http::uri::Uri::host (1 samples, 0.05%)</title><rect x="98.0000%" y="229" width="0.0500%" height="15" fill="rgb(251,124,27)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="239.50"></text></g><g><title>arvz`core::option::Option&lt;T&gt;::map (1 samples, 0.05%)</title><rect x="98.0000%" y="213" width="0.0500%" height="15" fill="rgb(229,180,14)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="223.50"></text></g><g><title>arvz`http::uri::Uri::host::_{{closure}} (1 samples, 0.05%)</title><rect x="98.0000%" y="197" width="0.0500%" height="15" fill="rgb(245,216,25)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="207.50"></text></g><g><title>arvz`http::uri::authority::Authority::host (1 samples, 0.05%)</title><rect x="98.0000%" y="181" width="0.0500%" height="15" fill="rgb(251,43,5)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="191.50"></text></g><g><title>arvz`http::uri::authority::host (1 samples, 0.05%)</title><rect x="98.0000%" y="165" width="0.0500%" height="15" fill="rgb(250,128,24)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="175.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::rsplitn (1 samples, 0.05%)</title><rect x="98.0000%" y="149" width="0.0500%" height="15" fill="rgb(217,117,27)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="159.50"></text></g><g><title>arvz`core::str::_&lt;impl str&gt;::split (1 samples, 0.05%)</title><rect x="98.0000%" y="133" width="0.0500%" height="15" fill="rgb(245,147,4)" fg:x="1960" fg:w="1"/><text x="98.2500%" y="143.50"></text></g><g><title>arvz`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.05%)</title><rect x="98.0500%" y="293" width="0.0500%" height="15" fill="rgb(242,201,35)" fg:x="1961" fg:w="1"/><text x="98.3000%" y="303.50"></text></g><g><title>arvz`serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.05%)</title><rect x="98.0500%" y="277" width="0.0500%" height="15" fill="rgb(218,181,1)" fg:x="1961" fg:w="1"/><text x="98.3000%" y="287.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::map (1 samples, 0.05%)</title><rect x="98.0500%" y="261" width="0.0500%" height="15" fill="rgb(222,6,29)" fg:x="1961" fg:w="1"/><text x="98.3000%" y="271.50"></text></g><g><title>arvz`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.10%)</title><rect x="98.0500%" y="357" width="0.1000%" height="15" fill="rgb(208,186,3)" fg:x="1961" fg:w="2"/><text x="98.3000%" y="367.50"></text></g><g><title>arvz`&lt;arvz::models::task::_::&lt;impl serde::de::Deserialize for arvz::models::task::Task&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.10%)</title><rect x="98.0500%" y="341" width="0.1000%" height="15" fill="rgb(216,36,26)" fg:x="1961" fg:w="2"/><text x="98.3000%" y="351.50"></text></g><g><title>arvz`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.10%)</title><rect x="98.0500%" y="325" width="0.1000%" height="15" fill="rgb(248,201,23)" fg:x="1961" fg:w="2"/><text x="98.3000%" y="335.50"></text></g><g><title>arvz`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.10%)</title><rect x="98.0500%" y="309" width="0.1000%" height="15" fill="rgb(251,170,31)" fg:x="1961" fg:w="2"/><text x="98.3000%" y="319.50"></text></g><g><title>arvz`serde_json::de::Deserializer&lt;R&gt;::eat_char (1 samples, 0.05%)</title><rect x="98.1000%" y="293" width="0.0500%" height="15" fill="rgb(207,110,25)" fg:x="1962" fg:w="1"/><text x="98.3500%" y="303.50"></text></g><g><title>arvz`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.05%)</title><rect x="98.1000%" y="277" width="0.0500%" height="15" fill="rgb(250,54,15)" fg:x="1962" fg:w="1"/><text x="98.3500%" y="287.50"></text></g><g><title>arvz`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.05%)</title><rect x="98.1000%" y="261" width="0.0500%" height="15" fill="rgb(227,68,33)" fg:x="1962" fg:w="1"/><text x="98.3500%" y="271.50"></text></g><g><title>arvz`serde::de::MapAccess::next_key (5 samples, 0.25%)</title><rect x="98.0500%" y="389" width="0.2500%" height="15" fill="rgb(238,34,41)" fg:x="1961" fg:w="5"/><text x="98.3000%" y="399.50"></text></g><g><title>arvz`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.25%)</title><rect x="98.0500%" y="373" width="0.2500%" height="15" fill="rgb(220,11,15)" fg:x="1961" fg:w="5"/><text x="98.3000%" y="383.50"></text></g><g><title>arvz`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (3 samples, 0.15%)</title><rect x="98.1500%" y="357" width="0.1500%" height="15" fill="rgb(246,111,35)" fg:x="1963" fg:w="3"/><text x="98.4000%" y="367.50"></text></g><g><title>arvz`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.05%)</title><rect x="98.2500%" y="341" width="0.0500%" height="15" fill="rgb(209,88,53)" fg:x="1965" fg:w="1"/><text x="98.5000%" y="351.50"></text></g><g><title>arvz`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.05%)</title><rect x="98.3500%" y="341" width="0.0500%" height="15" fill="rgb(231,185,47)" fg:x="1967" fg:w="1"/><text x="98.6000%" y="351.50"></text></g><g><title>arvz`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.05%)</title><rect x="98.3500%" y="325" width="0.0500%" height="15" fill="rgb(233,154,1)" fg:x="1967" fg:w="1"/><text x="98.6000%" y="335.50"></text></g><g><title>arvz`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.05%)</title><rect x="98.3500%" y="309" width="0.0500%" height="15" fill="rgb(225,15,46)" fg:x="1967" fg:w="1"/><text x="98.6000%" y="319.50"></text></g><g><title>arvz`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.05%)</title><rect x="98.3500%" y="293" width="0.0500%" height="15" fill="rgb(211,135,41)" fg:x="1967" fg:w="1"/><text x="98.6000%" y="303.50"></text></g><g><title>arvz`serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.05%)</title><rect x="98.3500%" y="277" width="0.0500%" height="15" fill="rgb(208,54,0)" fg:x="1967" fg:w="1"/><text x="98.6000%" y="287.50"></text></g><g><title>arvz`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::ignore_str (1 samples, 0.05%)</title><rect x="98.4500%" y="149" width="0.0500%" height="15" fill="rgb(244,136,14)" fg:x="1969" fg:w="1"/><text x="98.7000%" y="159.50"></text></g><g><title>arvz`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (1 samples, 0.05%)</title><rect x="98.4500%" y="133" width="0.0500%" height="15" fill="rgb(241,56,14)" fg:x="1969" fg:w="1"/><text x="98.7000%" y="143.50"></text></g><g><title>arvz`arvz::models::task::_::_&lt;impl serde::de::Deserialize for arvz::models::task::RenderedFields&gt;::deserialize (3 samples, 0.15%)</title><rect x="98.4000%" y="293" width="0.1500%" height="15" fill="rgb(205,80,24)" fg:x="1968" fg:w="3"/><text x="98.6500%" y="303.50"></text></g><g><title>arvz`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.15%)</title><rect x="98.4000%" y="277" width="0.1500%" height="15" fill="rgb(220,57,4)" fg:x="1968" fg:w="3"/><text x="98.6500%" y="287.50"></text></g><g><title>arvz`&lt;arvz::models::task::_::&lt;impl serde::de::Deserialize for arvz::models::task::RenderedFields&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.15%)</title><rect x="98.4000%" y="261" width="0.1500%" height="15" fill="rgb(226,193,50)" fg:x="1968" fg:w="3"/><text x="98.6500%" y="271.50"></text></g><g><title>arvz`serde::de::MapAccess::next_value (3 samples, 0.15%)</title><rect x="98.4000%" y="245" width="0.1500%" height="15" fill="rgb(231,168,22)" fg:x="1968" fg:w="3"/><text x="98.6500%" y="255.50"></text></g><g><title>arvz`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.15%)</title><rect x="98.4000%" y="229" width="0.1500%" height="15" fill="rgb(254,215,14)" fg:x="1968" fg:w="3"/><text x="98.6500%" y="239.50"></text></g><g><title>arvz`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.15%)</title><rect x="98.4000%" y="213" width="0.1500%" height="15" fill="rgb(211,115,16)" fg:x="1968" fg:w="3"/><text x="98.6500%" y="223.50"></text></g><g><title>arvz`&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (3 samples, 0.15%)</title><rect x="98.4000%" y="197" width="0.1500%" height="15" fill="rgb(236,210,16)" fg:x="1968" fg:w="3"/><text x="98.6500%" y="207.50"></text></g><g><title>arvz`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (3 samples, 0.15%)</title><rect x="98.4000%" y="181" width="0.1500%" height="15" fill="rgb(221,94,12)" fg:x="1968" fg:w="3"/><text x="98.6500%" y="191.50"></text></g><g><title>arvz`serde_json::de::Deserializer&lt;R&gt;::ignore_value (3 samples, 0.15%)</title><rect x="98.4000%" y="165" width="0.1500%" height="15" fill="rgb(235,218,49)" fg:x="1968" fg:w="3"/><text x="98.6500%" y="175.50"></text></g><g><title>arvz`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.05%)</title><rect x="98.5000%" y="149" width="0.0500%" height="15" fill="rgb(217,114,14)" fg:x="1970" fg:w="1"/><text x="98.7500%" y="159.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::map (1 samples, 0.05%)</title><rect x="98.5500%" y="293" width="0.0500%" height="15" fill="rgb(216,145,22)" fg:x="1971" fg:w="1"/><text x="98.8000%" y="303.50"></text></g><g><title>arvz`&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (5 samples, 0.25%)</title><rect x="98.4000%" y="309" width="0.2500%" height="15" fill="rgb(217,112,39)" fg:x="1968" fg:w="5"/><text x="98.6500%" y="319.50"></text></g><g><title>arvz`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.05%)</title><rect x="98.6000%" y="293" width="0.0500%" height="15" fill="rgb(225,85,32)" fg:x="1972" fg:w="1"/><text x="98.8500%" y="303.50"></text></g><g><title>arvz`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.05%)</title><rect x="98.6000%" y="277" width="0.0500%" height="15" fill="rgb(245,209,47)" fg:x="1972" fg:w="1"/><text x="98.8500%" y="287.50"></text></g><g><title>arvz`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.05%)</title><rect x="98.6000%" y="261" width="0.0500%" height="15" fill="rgb(218,220,15)" fg:x="1972" fg:w="1"/><text x="98.8500%" y="271.50"></text></g><g><title>arvz`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.05%)</title><rect x="98.6000%" y="245" width="0.0500%" height="15" fill="rgb(222,202,31)" fg:x="1972" fg:w="1"/><text x="98.8500%" y="255.50"></text></g><g><title>arvz`serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.05%)</title><rect x="98.6000%" y="229" width="0.0500%" height="15" fill="rgb(243,203,4)" fg:x="1972" fg:w="1"/><text x="98.8500%" y="239.50"></text></g><g><title>arvz`core::result::Result&lt;T,E&gt;::map (1 samples, 0.05%)</title><rect x="98.6000%" y="213" width="0.0500%" height="15" fill="rgb(237,92,17)" fg:x="1972" fg:w="1"/><text x="98.8500%" y="223.50"></text></g><g><title>arvz`&lt;arvz::models::task::_::&lt;impl serde::de::Deserialize for arvz::models::task::Task&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (13 samples, 0.65%)</title><rect x="98.0500%" y="405" width="0.6500%" height="15" fill="rgb(231,119,7)" fg:x="1961" fg:w="13"/><text x="98.3000%" y="415.50"></text></g><g><title>arvz`serde::de::MapAccess::next_value (8 samples, 0.40%)</title><rect x="98.3000%" y="389" width="0.4000%" height="15" fill="rgb(237,82,41)" fg:x="1966" fg:w="8"/><text x="98.5500%" y="399.50"></text></g><g><title>arvz`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (8 samples, 0.40%)</title><rect x="98.3000%" y="373" width="0.4000%" height="15" fill="rgb(226,81,48)" fg:x="1966" fg:w="8"/><text x="98.5500%" y="383.50"></text></g><g><title>arvz`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.35%)</title><rect x="98.3500%" y="357" width="0.3500%" height="15" fill="rgb(234,70,51)" fg:x="1967" fg:w="7"/><text x="98.6000%" y="367.50"></text></g><g><title>arvz`serde::de::impls::_&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (6 samples, 0.30%)</title><rect x="98.4000%" y="341" width="0.3000%" height="15" fill="rgb(251,86,4)" fg:x="1968" fg:w="6"/><text x="98.6500%" y="351.50"></text></g><g><title>arvz`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (6 samples, 0.30%)</title><rect x="98.4000%" y="325" width="0.3000%" height="15" fill="rgb(244,144,28)" fg:x="1968" fg:w="6"/><text x="98.6500%" y="335.50"></text></g><g><title>arvz`serde_json::de::Deserializer&lt;R&gt;::parse_ident (1 samples, 0.05%)</title><rect x="98.6500%" y="309" width="0.0500%" height="15" fill="rgb(232,161,39)" fg:x="1973" fg:w="1"/><text x="98.9000%" y="319.50"></text></g><g><title>arvz`serde_json::de::Deserializer&lt;R&gt;::next_char (1 samples, 0.05%)</title><rect x="98.6500%" y="293" width="0.0500%" height="15" fill="rgb(247,34,51)" fg:x="1973" fg:w="1"/><text x="98.9000%" y="303.50"></text></g><g><title>arvz`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::next (1 samples, 0.05%)</title><rect x="98.6500%" y="277" width="0.0500%" height="15" fill="rgb(225,132,2)" fg:x="1973" fg:w="1"/><text x="98.9000%" y="287.50"></text></g><g><title>arvz`arvz::context_data::ContextData::get_deserialize (14 samples, 0.70%)</title><rect x="98.0500%" y="693" width="0.7000%" height="15" fill="rgb(209,159,44)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="703.50"></text></g><g><title>arvz`&lt;arvz::models::tasks::Tasks as arvz::models::model_airflow::ModelAirflow&gt;::deserialize (14 samples, 0.70%)</title><rect x="98.0500%" y="677" width="0.7000%" height="15" fill="rgb(251,214,1)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="687.50"></text></g><g><title>arvz`serde_json::de::from_str (14 samples, 0.70%)</title><rect x="98.0500%" y="661" width="0.7000%" height="15" fill="rgb(247,84,47)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="671.50"></text></g><g><title>arvz`serde_json::de::from_trait (14 samples, 0.70%)</title><rect x="98.0500%" y="645" width="0.7000%" height="15" fill="rgb(240,111,43)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="655.50"></text></g><g><title>arvz`arvz::models::tasks::_::_&lt;impl serde::de::Deserialize for arvz::models::tasks::Tasks&gt;::deserialize (14 samples, 0.70%)</title><rect x="98.0500%" y="629" width="0.7000%" height="15" fill="rgb(215,214,35)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="639.50"></text></g><g><title>arvz`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (14 samples, 0.70%)</title><rect x="98.0500%" y="613" width="0.7000%" height="15" fill="rgb(248,207,23)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="623.50"></text></g><g><title>arvz`&lt;arvz::models::tasks::_::&lt;impl serde::de::Deserialize for arvz::models::tasks::Tasks&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (14 samples, 0.70%)</title><rect x="98.0500%" y="597" width="0.7000%" height="15" fill="rgb(214,186,4)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="607.50"></text></g><g><title>arvz`serde::de::MapAccess::next_value (14 samples, 0.70%)</title><rect x="98.0500%" y="581" width="0.7000%" height="15" fill="rgb(220,133,22)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="591.50"></text></g><g><title>arvz`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (14 samples, 0.70%)</title><rect x="98.0500%" y="565" width="0.7000%" height="15" fill="rgb(239,134,19)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="575.50"></text></g><g><title>arvz`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.70%)</title><rect x="98.0500%" y="549" width="0.7000%" height="15" fill="rgb(250,140,9)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="559.50"></text></g><g><title>arvz`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (14 samples, 0.70%)</title><rect x="98.0500%" y="533" width="0.7000%" height="15" fill="rgb(225,59,14)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="543.50"></text></g><g><title>arvz`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (14 samples, 0.70%)</title><rect x="98.0500%" y="517" width="0.7000%" height="15" fill="rgb(214,152,51)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="527.50"></text></g><g><title>arvz`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (14 samples, 0.70%)</title><rect x="98.0500%" y="501" width="0.7000%" height="15" fill="rgb(251,227,43)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="511.50"></text></g><g><title>arvz`serde::de::SeqAccess::next_element (14 samples, 0.70%)</title><rect x="98.0500%" y="485" width="0.7000%" height="15" fill="rgb(241,96,17)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="495.50"></text></g><g><title>arvz`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14 samples, 0.70%)</title><rect x="98.0500%" y="469" width="0.7000%" height="15" fill="rgb(234,198,43)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="479.50"></text></g><g><title>arvz`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.70%)</title><rect x="98.0500%" y="453" width="0.7000%" height="15" fill="rgb(220,108,29)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="463.50"></text></g><g><title>arvz`arvz::models::task::_::_&lt;impl serde::de::Deserialize for arvz::models::task::Task&gt;::deserialize (14 samples, 0.70%)</title><rect x="98.0500%" y="437" width="0.7000%" height="15" fill="rgb(226,163,33)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="447.50"></text></g><g><title>arvz`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (14 samples, 0.70%)</title><rect x="98.0500%" y="421" width="0.7000%" height="15" fill="rgb(205,194,45)" fg:x="1961" fg:w="14"/><text x="98.3000%" y="431.50"></text></g><g><title>arvz`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="98.7000%" y="405" width="0.0500%" height="15" fill="rgb(206,143,44)" fg:x="1974" fg:w="1"/><text x="98.9500%" y="415.50"></text></g><g><title>arvz`reqwest::async_impl::request::RequestBuilder::basic_auth (1 samples, 0.05%)</title><rect x="98.7500%" y="693" width="0.0500%" height="15" fill="rgb(236,136,36)" fg:x="1975" fg:w="1"/><text x="99.0000%" y="703.50"></text></g><g><title>arvz`reqwest::util::basic_auth (1 samples, 0.05%)</title><rect x="98.7500%" y="677" width="0.0500%" height="15" fill="rgb(249,172,42)" fg:x="1975" fg:w="1"/><text x="99.0000%" y="687.50"></text></g><g><title>arvz`std::io::Write::write_fmt (1 samples, 0.05%)</title><rect x="98.7500%" y="661" width="0.0500%" height="15" fill="rgb(216,139,23)" fg:x="1975" fg:w="1"/><text x="99.0000%" y="671.50"></text></g><g><title>arvz`core::fmt::write (1 samples, 0.05%)</title><rect x="98.7500%" y="645" width="0.0500%" height="15" fill="rgb(207,166,20)" fg:x="1975" fg:w="1"/><text x="99.0000%" y="655.50"></text></g><g><title>arvz`&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.05%)</title><rect x="98.7500%" y="629" width="0.0500%" height="15" fill="rgb(210,209,22)" fg:x="1975" fg:w="1"/><text x="99.0000%" y="639.50"></text></g><g><title>arvz`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.05%)</title><rect x="98.7500%" y="613" width="0.0500%" height="15" fill="rgb(232,118,20)" fg:x="1975" fg:w="1"/><text x="99.0000%" y="623.50"></text></g><g><title>arvz`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="98.7500%" y="597" width="0.0500%" height="15" fill="rgb(238,113,42)" fg:x="1975" fg:w="1"/><text x="99.0000%" y="607.50"></text></g><g><title>arvz`std::io::Write::write_all (1 samples, 0.05%)</title><rect x="98.7500%" y="581" width="0.0500%" height="15" fill="rgb(231,42,5)" fg:x="1975" fg:w="1"/><text x="99.0000%" y="591.50"></text></g><g><title>arvz`&lt;base64::write::encoder::EncoderWriter&lt;E,W&gt; as std::io::Write&gt;::write (1 samples, 0.05%)</title><rect x="98.7500%" y="565" width="0.0500%" height="15" fill="rgb(243,166,24)" fg:x="1975" fg:w="1"/><text x="99.0000%" y="575.50"></text></g><g><title>arvz`&lt;base64::engine::general_purpose::GeneralPurpose as base64::engine::Engine&gt;::internal_encode (1 samples, 0.05%)</title><rect x="98.7500%" y="549" width="0.0500%" height="15" fill="rgb(237,226,12)" fg:x="1975" fg:w="1"/><text x="99.0000%" y="559.50"></text></g><g><title>arvz`alloc::borrow::Cow&lt;B&gt;::into_owned (1 samples, 0.05%)</title><rect x="98.8000%" y="661" width="0.0500%" height="15" fill="rgb(229,133,24)" fg:x="1976" fg:w="1"/><text x="99.0500%" y="671.50"></text></g><g><title>arvz`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.05%)</title><rect x="98.8000%" y="645" width="0.0500%" height="15" fill="rgb(238,33,43)" fg:x="1976" fg:w="1"/><text x="99.0500%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="98.8000%" y="629" width="0.0500%" height="15" fill="rgb(227,59,38)" fg:x="1976" fg:w="1"/><text x="99.0500%" y="639.50"></text></g><g><title>arvz`arvz::app::App::run::_{{closure}}::_{{closure}} (18 samples, 0.90%)</title><rect x="98.0000%" y="725" width="0.9000%" height="15" fill="rgb(230,97,0)" fg:x="1960" fg:w="18"/><text x="98.2500%" y="735.50"></text></g><g><title>arvz`arvz::context_data::ContextData::refresh::_{{closure}} (18 samples, 0.90%)</title><rect x="98.0000%" y="709" width="0.9000%" height="15" fill="rgb(250,173,50)" fg:x="1960" fg:w="18"/><text x="98.2500%" y="719.50"></text></g><g><title>arvz`reqwest::async_impl::response::Response::text::_{{closure}} (2 samples, 0.10%)</title><rect x="98.8000%" y="693" width="0.1000%" height="15" fill="rgb(240,15,50)" fg:x="1976" fg:w="2"/><text x="99.0500%" y="703.50"></text></g><g><title>arvz`reqwest::async_impl::response::Response::text_with_charset::_{{closure}} (2 samples, 0.10%)</title><rect x="98.8000%" y="677" width="0.1000%" height="15" fill="rgb(221,93,22)" fg:x="1976" fg:w="2"/><text x="99.0500%" y="687.50"></text></g><g><title>arvz`reqwest::async_impl::response::Response::bytes::_{{closure}} (1 samples, 0.05%)</title><rect x="98.8500%" y="661" width="0.0500%" height="15" fill="rgb(245,180,53)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="671.50"></text></g><g><title>arvz`hyper::body::to_bytes::to_bytes::_{{closure}} (1 samples, 0.05%)</title><rect x="98.8500%" y="645" width="0.0500%" height="15" fill="rgb(231,88,51)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="655.50"></text></g><g><title>arvz`&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put (1 samples, 0.05%)</title><rect x="98.8500%" y="629" width="0.0500%" height="15" fill="rgb(240,58,21)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="639.50"></text></g><g><title>arvz`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="98.8500%" y="613" width="0.0500%" height="15" fill="rgb(237,21,10)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="623.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="98.8500%" y="597" width="0.0500%" height="15" fill="rgb(218,43,11)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="607.50"></text></g><g><title>arvz`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="98.8500%" y="581" width="0.0500%" height="15" fill="rgb(218,221,29)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="591.50"></text></g><g><title>arvz`alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="98.8500%" y="565" width="0.0500%" height="15" fill="rgb(214,118,42)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="575.50"></text></g><g><title>arvz`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.05%)</title><rect x="98.8500%" y="549" width="0.0500%" height="15" fill="rgb(251,200,26)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="559.50"></text></g><g><title>arvz`alloc::alloc::Global::grow_impl (1 samples, 0.05%)</title><rect x="98.8500%" y="533" width="0.0500%" height="15" fill="rgb(237,101,39)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.05%)</title><rect x="98.8500%" y="517" width="0.0500%" height="15" fill="rgb(251,117,11)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.05%)</title><rect x="98.8500%" y="501" width="0.0500%" height="15" fill="rgb(216,223,23)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.05%)</title><rect x="98.8500%" y="485" width="0.0500%" height="15" fill="rgb(251,54,12)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="98.8500%" y="469" width="0.0500%" height="15" fill="rgb(254,176,54)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (1 samples, 0.05%)</title><rect x="98.8500%" y="453" width="0.0500%" height="15" fill="rgb(210,32,8)" fg:x="1977" fg:w="1"/><text x="99.1000%" y="463.50"></text></g><g><title>arvz`parking_lot_core::parking_lot::park (1 samples, 0.05%)</title><rect x="98.9000%" y="533" width="0.0500%" height="15" fill="rgb(235,52,38)" fg:x="1978" fg:w="1"/><text x="99.1500%" y="543.50"></text></g><g><title>arvz`core::cell::Cell&lt;T&gt;::set (1 samples, 0.05%)</title><rect x="98.9000%" y="517" width="0.0500%" height="15" fill="rgb(231,4,44)" fg:x="1978" fg:w="1"/><text x="99.1500%" y="527.50"></text></g><g><title>arvz`&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.15%)</title><rect x="98.9000%" y="677" width="0.1500%" height="15" fill="rgb(249,2,32)" fg:x="1978" fg:w="3"/><text x="99.1500%" y="687.50"></text></g><g><title>arvz`&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (3 samples, 0.15%)</title><rect x="98.9000%" y="661" width="0.1500%" height="15" fill="rgb(224,65,26)" fg:x="1978" fg:w="3"/><text x="99.1500%" y="671.50"></text></g><g><title>arvz`futures_util::stream::stream::StreamExt::poll_next_unpin (3 samples, 0.15%)</title><rect x="98.9000%" y="645" width="0.1500%" height="15" fill="rgb(250,73,40)" fg:x="1978" fg:w="3"/><text x="99.1500%" y="655.50"></text></g><g><title>arvz`&lt;crossterm::event::stream::EventStream as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.15%)</title><rect x="98.9000%" y="629" width="0.1500%" height="15" fill="rgb(253,177,16)" fg:x="1978" fg:w="3"/><text x="99.1500%" y="639.50"></text></g><g><title>arvz`crossterm::event::poll_internal (3 samples, 0.15%)</title><rect x="98.9000%" y="613" width="0.1500%" height="15" fill="rgb(217,32,34)" fg:x="1978" fg:w="3"/><text x="99.1500%" y="623.50"></text></g><g><title>arvz`crossterm::event::try_lock_internal_event_reader_for (3 samples, 0.15%)</title><rect x="98.9000%" y="597" width="0.1500%" height="15" fill="rgb(212,7,10)" fg:x="1978" fg:w="3"/><text x="99.1500%" y="607.50"></text></g><g><title>arvz`lock_api::mutex::Mutex&lt;R,T&gt;::try_lock_for (3 samples, 0.15%)</title><rect x="98.9000%" y="581" width="0.1500%" height="15" fill="rgb(245,89,8)" fg:x="1978" fg:w="3"/><text x="99.1500%" y="591.50"></text></g><g><title>arvz`&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutexTimed&gt;::try_lock_for (3 samples, 0.15%)</title><rect x="98.9000%" y="565" width="0.1500%" height="15" fill="rgb(237,16,53)" fg:x="1978" fg:w="3"/><text x="99.1500%" y="575.50"></text></g><g><title>arvz`parking_lot::raw_mutex::RawMutex::lock_slow (3 samples, 0.15%)</title><rect x="98.9000%" y="549" width="0.1500%" height="15" fill="rgb(250,204,30)" fg:x="1978" fg:w="3"/><text x="99.1500%" y="559.50"></text></g><g><title>arvz`parking_lot_core::spinwait::SpinWait::spin (2 samples, 0.10%)</title><rect x="98.9500%" y="533" width="0.1000%" height="15" fill="rgb(208,77,27)" fg:x="1979" fg:w="2"/><text x="99.2000%" y="543.50"></text></g><g><title>arvz`parking_lot_core::thread_parker::imp::thread_yield (2 samples, 0.10%)</title><rect x="98.9500%" y="517" width="0.1000%" height="15" fill="rgb(250,204,28)" fg:x="1979" fg:w="2"/><text x="99.2000%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (2 samples, 0.10%)</title><rect x="98.9500%" y="501" width="0.1000%" height="15" fill="rgb(244,63,21)" fg:x="1979" fg:w="2"/><text x="99.2000%" y="511.50"></text></g><g><title>arvz`&lt;tokio_util::sync::cancellation_token::WaitForCancellationFuture as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="99.0500%" y="677" width="0.0500%" height="15" fill="rgb(236,85,44)" fg:x="1981" fg:w="1"/><text x="99.3000%" y="687.50"></text></g><g><title>arvz`&lt;&amp;mut T as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="99.1000%" y="549" width="0.0500%" height="15" fill="rgb(215,98,4)" fg:x="1982" fg:w="1"/><text x="99.3500%" y="559.50"></text></g><g><title>arvz`core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.10%)</title><rect x="99.1500%" y="501" width="0.1000%" height="15" fill="rgb(235,38,11)" fg:x="1983" fg:w="2"/><text x="99.4000%" y="511.50"></text></g><g><title>arvz`core::sync::atomic::atomic_compare_exchange (2 samples, 0.10%)</title><rect x="99.1500%" y="485" width="0.1000%" height="15" fill="rgb(254,186,25)" fg:x="1983" fg:w="2"/><text x="99.4000%" y="495.50"></text></g><g><title>arvz`tokio::runtime::time::entry::StateCell::poll (3 samples, 0.15%)</title><rect x="99.1500%" y="549" width="0.1500%" height="15" fill="rgb(225,55,31)" fg:x="1983" fg:w="3"/><text x="99.4000%" y="559.50"></text></g><g><title>arvz`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (3 samples, 0.15%)</title><rect x="99.1500%" y="533" width="0.1500%" height="15" fill="rgb(211,15,21)" fg:x="1983" fg:w="3"/><text x="99.4000%" y="543.50"></text></g><g><title>arvz`tokio::sync::task::atomic_waker::AtomicWaker::do_register (3 samples, 0.15%)</title><rect x="99.1500%" y="517" width="0.1500%" height="15" fill="rgb(215,187,41)" fg:x="1983" fg:w="3"/><text x="99.4000%" y="527.50"></text></g><g><title>arvz`tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (1 samples, 0.05%)</title><rect x="99.2500%" y="501" width="0.0500%" height="15" fill="rgb(248,69,32)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="511.50"></text></g><g><title>arvz`std::panic::catch_unwind (1 samples, 0.05%)</title><rect x="99.2500%" y="485" width="0.0500%" height="15" fill="rgb(252,102,52)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="495.50"></text></g><g><title>arvz`std::panicking::try (1 samples, 0.05%)</title><rect x="99.2500%" y="469" width="0.0500%" height="15" fill="rgb(253,140,32)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="479.50"></text></g><g><title>arvz`__rust_try (1 samples, 0.05%)</title><rect x="99.2500%" y="453" width="0.0500%" height="15" fill="rgb(216,56,42)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="463.50"></text></g><g><title>arvz`std::panicking::try::do_call (1 samples, 0.05%)</title><rect x="99.2500%" y="437" width="0.0500%" height="15" fill="rgb(216,184,14)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="447.50"></text></g><g><title>arvz`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.05%)</title><rect x="99.2500%" y="421" width="0.0500%" height="15" fill="rgb(237,187,27)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="431.50"></text></g><g><title>arvz`tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (1 samples, 0.05%)</title><rect x="99.2500%" y="405" width="0.0500%" height="15" fill="rgb(219,65,3)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="415.50"></text></g><g><title>arvz`core::mem::drop (1 samples, 0.05%)</title><rect x="99.2500%" y="389" width="0.0500%" height="15" fill="rgb(245,83,25)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="399.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.05%)</title><rect x="99.2500%" y="373" width="0.0500%" height="15" fill="rgb(214,205,45)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="383.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.05%)</title><rect x="99.2500%" y="357" width="0.0500%" height="15" fill="rgb(241,20,18)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="367.50"></text></g><g><title>arvz`&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="99.2500%" y="341" width="0.0500%" height="15" fill="rgb(232,163,23)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="351.50"></text></g><g><title>arvz`tokio::runtime::task::waker::drop_waker (1 samples, 0.05%)</title><rect x="99.2500%" y="325" width="0.0500%" height="15" fill="rgb(214,5,46)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="335.50"></text></g><g><title>arvz`tokio::runtime::task::harness::_&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (1 samples, 0.05%)</title><rect x="99.2500%" y="309" width="0.0500%" height="15" fill="rgb(229,78,17)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="319.50"></text></g><g><title>arvz`tokio::runtime::task::state::State::ref_dec (1 samples, 0.05%)</title><rect x="99.2500%" y="293" width="0.0500%" height="15" fill="rgb(248,89,10)" fg:x="1985" fg:w="1"/><text x="99.5000%" y="303.50"></text></g><g><title>arvz`tokio::runtime::driver::IoHandle::unpark (2 samples, 0.10%)</title><rect x="99.3000%" y="517" width="0.1000%" height="15" fill="rgb(248,54,15)" fg:x="1986" fg:w="2"/><text x="99.5500%" y="527.50"></text></g><g><title>arvz`tokio::runtime::io::driver::Handle::unpark (2 samples, 0.10%)</title><rect x="99.3000%" y="501" width="0.1000%" height="15" fill="rgb(223,116,6)" fg:x="1986" fg:w="2"/><text x="99.5500%" y="511.50"></text></g><g><title>arvz`mio::waker::Waker::wake (2 samples, 0.10%)</title><rect x="99.3000%" y="485" width="0.1000%" height="15" fill="rgb(205,125,38)" fg:x="1986" fg:w="2"/><text x="99.5500%" y="495.50"></text></g><g><title>arvz`mio::sys::unix::waker::kqueue::Waker::wake (2 samples, 0.10%)</title><rect x="99.3000%" y="469" width="0.1000%" height="15" fill="rgb(251,78,38)" fg:x="1986" fg:w="2"/><text x="99.5500%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 0.10%)</title><rect x="99.3000%" y="453" width="0.1000%" height="15" fill="rgb(253,78,28)" fg:x="1986" fg:w="2"/><text x="99.5500%" y="463.50"></text></g><g><title>arvz`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.35%)</title><rect x="99.1000%" y="613" width="0.3500%" height="15" fill="rgb(209,120,3)" fg:x="1982" fg:w="7"/><text x="99.3500%" y="623.50"></text></g><g><title>arvz`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (7 samples, 0.35%)</title><rect x="99.1000%" y="597" width="0.3500%" height="15" fill="rgb(238,229,9)" fg:x="1982" fg:w="7"/><text x="99.3500%" y="607.50"></text></g><g><title>arvz`tokio::time::sleep::Sleep::poll_elapsed (7 samples, 0.35%)</title><rect x="99.1000%" y="581" width="0.3500%" height="15" fill="rgb(253,159,18)" fg:x="1982" fg:w="7"/><text x="99.3500%" y="591.50"></text></g><g><title>arvz`tokio::runtime::time::entry::TimerEntry::poll_elapsed (7 samples, 0.35%)</title><rect x="99.1000%" y="565" width="0.3500%" height="15" fill="rgb(244,42,34)" fg:x="1982" fg:w="7"/><text x="99.3500%" y="575.50"></text></g><g><title>arvz`tokio::runtime::time::entry::TimerEntry::reset (3 samples, 0.15%)</title><rect x="99.3000%" y="549" width="0.1500%" height="15" fill="rgb(224,8,7)" fg:x="1986" fg:w="3"/><text x="99.5500%" y="559.50"></text></g><g><title>arvz`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (3 samples, 0.15%)</title><rect x="99.3000%" y="533" width="0.1500%" height="15" fill="rgb(210,201,45)" fg:x="1986" fg:w="3"/><text x="99.5500%" y="543.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::Wheel::insert (1 samples, 0.05%)</title><rect x="99.4000%" y="517" width="0.0500%" height="15" fill="rgb(252,185,21)" fg:x="1988" fg:w="1"/><text x="99.6500%" y="527.50"></text></g><g><title>arvz`tokio::runtime::time::wheel::level::Level::add_entry (1 samples, 0.05%)</title><rect x="99.4000%" y="501" width="0.0500%" height="15" fill="rgb(223,131,1)" fg:x="1988" fg:w="1"/><text x="99.6500%" y="511.50"></text></g><g><title>arvz`tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (1 samples, 0.05%)</title><rect x="99.4000%" y="485" width="0.0500%" height="15" fill="rgb(245,141,16)" fg:x="1988" fg:w="1"/><text x="99.6500%" y="495.50"></text></g><g><title>arvz`&lt;tokio::runtime::time::entry::TimerShared as tokio::util::linked_list::Link&gt;::pointers (1 samples, 0.05%)</title><rect x="99.4000%" y="469" width="0.0500%" height="15" fill="rgb(229,55,45)" fg:x="1988" fg:w="1"/><text x="99.6500%" y="479.50"></text></g><g><title>arvz`tokio::runtime::time::entry::TimerShared::addr_of_pointers (1 samples, 0.05%)</title><rect x="99.4000%" y="453" width="0.0500%" height="15" fill="rgb(208,92,15)" fg:x="1988" fg:w="1"/><text x="99.6500%" y="463.50"></text></g><g><title>arvz`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.60%)</title><rect x="98.9000%" y="709" width="0.6000%" height="15" fill="rgb(234,185,47)" fg:x="1978" fg:w="12"/><text x="99.1500%" y="719.50"></text></g><g><title>arvz`arvz::tui::Tui::start::_{{closure}}::_{{closure}} (12 samples, 0.60%)</title><rect x="98.9000%" y="693" width="0.6000%" height="15" fill="rgb(253,104,50)" fg:x="1978" fg:w="12"/><text x="99.1500%" y="703.50"></text></g><g><title>arvz`tokio::time::interval::Interval::tick::_{{closure}} (8 samples, 0.40%)</title><rect x="99.1000%" y="677" width="0.4000%" height="15" fill="rgb(205,70,7)" fg:x="1982" fg:w="8"/><text x="99.3500%" y="687.50"></text></g><g><title>arvz`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.40%)</title><rect x="99.1000%" y="661" width="0.4000%" height="15" fill="rgb(240,178,43)" fg:x="1982" fg:w="8"/><text x="99.3500%" y="671.50"></text></g><g><title>arvz`tokio::time::interval::Interval::tick::_{{closure}}::_{{closure}} (8 samples, 0.40%)</title><rect x="99.1000%" y="645" width="0.4000%" height="15" fill="rgb(214,112,2)" fg:x="1982" fg:w="8"/><text x="99.3500%" y="655.50"></text></g><g><title>arvz`tokio::time::interval::Interval::poll_tick (8 samples, 0.40%)</title><rect x="99.1000%" y="629" width="0.4000%" height="15" fill="rgb(206,46,17)" fg:x="1982" fg:w="8"/><text x="99.3500%" y="639.50"></text></g><g><title>arvz`tokio::time::sleep::Sleep::reset_without_reregister (1 samples, 0.05%)</title><rect x="99.4500%" y="613" width="0.0500%" height="15" fill="rgb(225,220,16)" fg:x="1989" fg:w="1"/><text x="99.7000%" y="623.50"></text></g><g><title>arvz`tokio::runtime::time::entry::TimerEntry::reset (1 samples, 0.05%)</title><rect x="99.4500%" y="597" width="0.0500%" height="15" fill="rgb(238,65,40)" fg:x="1989" fg:w="1"/><text x="99.7000%" y="607.50"></text></g><g><title>arvz`tokio::runtime::time::source::TimeSource::deadline_to_tick (1 samples, 0.05%)</title><rect x="99.4500%" y="581" width="0.0500%" height="15" fill="rgb(230,151,21)" fg:x="1989" fg:w="1"/><text x="99.7000%" y="591.50"></text></g><g><title>arvz`core::time::Duration::new (1 samples, 0.05%)</title><rect x="99.4500%" y="565" width="0.0500%" height="15" fill="rgb(218,58,49)" fg:x="1989" fg:w="1"/><text x="99.7000%" y="575.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;(tokio_util::sync::cancellation_token::WaitForCancellationFuture,futures_util::future::future::fuse::Fuse&lt;futures_util::stream::stream::next::Next&lt;crossterm::event::stream::EventStream&gt;&gt;,tokio::time::interval::Interval::tick::{{closure}},tokio::time::interval::Interval::tick::{{closure}},tokio::time::interval::Interval::tick::{{closure}})&gt; (1 samples, 0.05%)</title><rect x="99.5000%" y="709" width="0.0500%" height="15" fill="rgb(219,179,14)" fg:x="1990" fg:w="1"/><text x="99.7500%" y="719.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;tokio_util::sync::cancellation_token::WaitForCancellationFuture&gt; (1 samples, 0.05%)</title><rect x="99.5000%" y="693" width="0.0500%" height="15" fill="rgb(223,72,1)" fg:x="1990" fg:w="1"/><text x="99.7500%" y="703.50"></text></g><g><title>arvz`core::ptr::drop_in_place&lt;tokio::sync::notify::Notified&gt; (1 samples, 0.05%)</title><rect x="99.5000%" y="677" width="0.0500%" height="15" fill="rgb(238,126,10)" fg:x="1990" fg:w="1"/><text x="99.7500%" y="687.50"></text></g><g><title>arvz`&lt;tokio::sync::notify::Notified as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="99.5000%" y="661" width="0.0500%" height="15" fill="rgb(224,206,38)" fg:x="1990" fg:w="1"/><text x="99.7500%" y="671.50"></text></g><g><title>arvz`tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (1 samples, 0.05%)</title><rect x="99.5000%" y="645" width="0.0500%" height="15" fill="rgb(212,201,54)" fg:x="1990" fg:w="1"/><text x="99.7500%" y="655.50"></text></g><g><title>arvz`tokio::sync::mpsc::list::Tx&lt;T&gt;::push (1 samples, 0.05%)</title><rect x="99.5500%" y="661" width="0.0500%" height="15" fill="rgb(218,154,48)" fg:x="1991" fg:w="1"/><text x="99.8000%" y="671.50"></text></g><g><title>arvz`tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (1 samples, 0.05%)</title><rect x="99.5500%" y="645" width="0.0500%" height="15" fill="rgb(232,93,24)" fg:x="1991" fg:w="1"/><text x="99.8000%" y="655.50"></text></g><g><title>arvz`alloc::sync::Arc&lt;T&gt;::from_raw (1 samples, 0.05%)</title><rect x="99.6000%" y="613" width="0.0500%" height="15" fill="rgb(245,30,21)" fg:x="1992" fg:w="1"/><text x="99.8500%" y="623.50"></text></g><g><title>arvz`&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (2 samples, 0.10%)</title><rect x="99.6500%" y="533" width="0.1000%" height="15" fill="rgb(242,148,29)" fg:x="1993" fg:w="2"/><text x="99.9000%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.10%)</title><rect x="99.6500%" y="517" width="0.1000%" height="15" fill="rgb(244,153,54)" fg:x="1993" fg:w="2"/><text x="99.9000%" y="527.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (44 samples, 2.20%)</title><rect x="97.6000%" y="981" width="2.2000%" height="15" fill="rgb(252,87,22)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="991.50">a..</text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (44 samples, 2.20%)</title><rect x="97.6000%" y="965" width="2.2000%" height="15" fill="rgb(210,51,29)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="975.50">a..</text></g><g><title>arvz`tokio::runtime::task::LocalNotified&lt;S&gt;::run (44 samples, 2.20%)</title><rect x="97.6000%" y="949" width="2.2000%" height="15" fill="rgb(242,136,47)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="959.50">a..</text></g><g><title>arvz`tokio::runtime::task::raw::RawTask::poll (44 samples, 2.20%)</title><rect x="97.6000%" y="933" width="2.2000%" height="15" fill="rgb(238,68,4)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="943.50">a..</text></g><g><title>arvz`tokio::runtime::task::raw::poll (44 samples, 2.20%)</title><rect x="97.6000%" y="917" width="2.2000%" height="15" fill="rgb(242,161,30)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="927.50">a..</text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (44 samples, 2.20%)</title><rect x="97.6000%" y="901" width="2.2000%" height="15" fill="rgb(218,58,44)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="911.50">a..</text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (44 samples, 2.20%)</title><rect x="97.6000%" y="885" width="2.2000%" height="15" fill="rgb(252,125,32)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="895.50">a..</text></g><g><title>arvz`tokio::runtime::task::harness::poll_future (44 samples, 2.20%)</title><rect x="97.6000%" y="869" width="2.2000%" height="15" fill="rgb(219,178,0)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="879.50">a..</text></g><g><title>arvz`std::panic::catch_unwind (44 samples, 2.20%)</title><rect x="97.6000%" y="853" width="2.2000%" height="15" fill="rgb(213,152,7)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="863.50">a..</text></g><g><title>arvz`std::panicking::try (44 samples, 2.20%)</title><rect x="97.6000%" y="837" width="2.2000%" height="15" fill="rgb(249,109,34)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="847.50">a..</text></g><g><title>arvz`__rust_try (44 samples, 2.20%)</title><rect x="97.6000%" y="821" width="2.2000%" height="15" fill="rgb(232,96,21)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="831.50">a..</text></g><g><title>arvz`std::panicking::try::do_call (44 samples, 2.20%)</title><rect x="97.6000%" y="805" width="2.2000%" height="15" fill="rgb(228,27,39)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="815.50">a..</text></g><g><title>arvz`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44 samples, 2.20%)</title><rect x="97.6000%" y="789" width="2.2000%" height="15" fill="rgb(211,182,52)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="799.50">a..</text></g><g><title>arvz`tokio::runtime::task::harness::poll_future::_{{closure}} (44 samples, 2.20%)</title><rect x="97.6000%" y="773" width="2.2000%" height="15" fill="rgb(234,178,38)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="783.50">a..</text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (44 samples, 2.20%)</title><rect x="97.6000%" y="757" width="2.2000%" height="15" fill="rgb(221,111,3)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="767.50">a..</text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (44 samples, 2.20%)</title><rect x="97.6000%" y="741" width="2.2000%" height="15" fill="rgb(228,175,21)" fg:x="1952" fg:w="44"/><text x="97.8500%" y="751.50">a..</text></g><g><title>arvz`arvz::tui::Tui::start::_{{closure}} (18 samples, 0.90%)</title><rect x="98.9000%" y="725" width="0.9000%" height="15" fill="rgb(228,174,43)" fg:x="1978" fg:w="18"/><text x="99.1500%" y="735.50"></text></g><g><title>arvz`tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (5 samples, 0.25%)</title><rect x="99.5500%" y="709" width="0.2500%" height="15" fill="rgb(211,191,0)" fg:x="1991" fg:w="5"/><text x="99.8000%" y="719.50"></text></g><g><title>arvz`tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (5 samples, 0.25%)</title><rect x="99.5500%" y="693" width="0.2500%" height="15" fill="rgb(253,117,3)" fg:x="1991" fg:w="5"/><text x="99.8000%" y="703.50"></text></g><g><title>arvz`tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (5 samples, 0.25%)</title><rect x="99.5500%" y="677" width="0.2500%" height="15" fill="rgb(241,127,19)" fg:x="1991" fg:w="5"/><text x="99.8000%" y="687.50"></text></g><g><title>arvz`tokio::sync::task::atomic_waker::AtomicWaker::wake (4 samples, 0.20%)</title><rect x="99.6000%" y="661" width="0.2000%" height="15" fill="rgb(218,103,12)" fg:x="1992" fg:w="4"/><text x="99.8500%" y="671.50"></text></g><g><title>arvz`core::task::wake::Waker::wake (4 samples, 0.20%)</title><rect x="99.6000%" y="645" width="0.2000%" height="15" fill="rgb(236,214,43)" fg:x="1992" fg:w="4"/><text x="99.8500%" y="655.50"></text></g><g><title>arvz`tokio::runtime::park::wake (4 samples, 0.20%)</title><rect x="99.6000%" y="629" width="0.2000%" height="15" fill="rgb(244,144,19)" fg:x="1992" fg:w="4"/><text x="99.8500%" y="639.50"></text></g><g><title>arvz`tokio::runtime::park::Inner::unpark (3 samples, 0.15%)</title><rect x="99.6500%" y="613" width="0.1500%" height="15" fill="rgb(246,188,10)" fg:x="1993" fg:w="3"/><text x="99.9000%" y="623.50"></text></g><g><title>arvz`tokio::loom::std::parking_lot::Condvar::notify_one (3 samples, 0.15%)</title><rect x="99.6500%" y="597" width="0.1500%" height="15" fill="rgb(212,193,33)" fg:x="1993" fg:w="3"/><text x="99.9000%" y="607.50"></text></g><g><title>arvz`parking_lot::condvar::Condvar::notify_one (3 samples, 0.15%)</title><rect x="99.6500%" y="581" width="0.1500%" height="15" fill="rgb(241,51,29)" fg:x="1993" fg:w="3"/><text x="99.9000%" y="591.50"></text></g><g><title>arvz`parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.15%)</title><rect x="99.6500%" y="565" width="0.1500%" height="15" fill="rgb(211,58,19)" fg:x="1993" fg:w="3"/><text x="99.9000%" y="575.50"></text></g><g><title>arvz`parking_lot_core::parking_lot::unpark_requeue (3 samples, 0.15%)</title><rect x="99.6500%" y="549" width="0.1500%" height="15" fill="rgb(229,111,26)" fg:x="1993" fg:w="3"/><text x="99.9000%" y="559.50"></text></g><g><title>arvz`parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.05%)</title><rect x="99.7500%" y="533" width="0.0500%" height="15" fill="rgb(213,115,40)" fg:x="1995" fg:w="1"/><text x="100.0000%" y="543.50"></text></g><g><title>arvz`std::sys::unix::time::Timespec::now (1 samples, 0.05%)</title><rect x="99.7500%" y="517" width="0.0500%" height="15" fill="rgb(209,56,44)" fg:x="1995" fg:w="1"/><text x="100.0000%" y="527.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.05%)</title><rect x="99.7500%" y="501" width="0.0500%" height="15" fill="rgb(230,108,32)" fg:x="1995" fg:w="1"/><text x="100.0000%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.05%)</title><rect x="99.7500%" y="485" width="0.0500%" height="15" fill="rgb(216,165,31)" fg:x="1995" fg:w="1"/><text x="100.0000%" y="495.50"></text></g><g><title>arvz`tokio::loom::std::atomic_u32::AtomicU32::unsync_load (1 samples, 0.05%)</title><rect x="99.8000%" y="949" width="0.0500%" height="15" fill="rgb(218,122,21)" fg:x="1996" fg:w="1"/><text x="100.0500%" y="959.50"></text></g><g><title>arvz`core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="99.8000%" y="933" width="0.0500%" height="15" fill="rgb(223,224,47)" fg:x="1996" fg:w="1"/><text x="100.0500%" y="943.50"></text></g><g><title>arvz`core::sync::atomic::AtomicU32::load (1 samples, 0.05%)</title><rect x="99.8500%" y="933" width="0.0500%" height="15" fill="rgb(238,102,44)" fg:x="1997" fg:w="1"/><text x="100.1000%" y="943.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (3 samples, 0.15%)</title><rect x="99.8000%" y="981" width="0.1500%" height="15" fill="rgb(236,46,40)" fg:x="1996" fg:w="3"/><text x="100.0500%" y="991.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (3 samples, 0.15%)</title><rect x="99.8000%" y="965" width="0.1500%" height="15" fill="rgb(247,202,50)" fg:x="1996" fg:w="3"/><text x="100.0500%" y="975.50"></text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (2 samples, 0.10%)</title><rect x="99.8500%" y="949" width="0.1000%" height="15" fill="rgb(209,99,20)" fg:x="1997" fg:w="2"/><text x="100.1000%" y="959.50"></text></g><g><title>arvz`core::sync::atomic::AtomicU64::load (1 samples, 0.05%)</title><rect x="99.9000%" y="933" width="0.0500%" height="15" fill="rgb(252,27,34)" fg:x="1998" fg:w="1"/><text x="100.1500%" y="943.50"></text></g><g><title>arvz`core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="99.9000%" y="917" width="0.0500%" height="15" fill="rgb(215,206,23)" fg:x="1998" fg:w="1"/><text x="100.1500%" y="927.50"></text></g><g><title>all (2,000 samples, 100%)</title><rect x="0.0000%" y="1637" width="100.0000%" height="15" fill="rgb(212,135,36)" fg:x="0" fg:w="2000"/><text x="0.2500%" y="1647.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (87 samples, 4.35%)</title><rect x="95.6500%" y="1621" width="4.3500%" height="15" fill="rgb(240,189,1)" fg:x="1913" fg:w="87"/><text x="95.9000%" y="1631.50">libsy..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (87 samples, 4.35%)</title><rect x="95.6500%" y="1605" width="4.3500%" height="15" fill="rgb(242,56,20)" fg:x="1913" fg:w="87"/><text x="95.9000%" y="1615.50">libsy..</text></g><g><title>arvz`std::sys::unix::thread::Thread::new::thread_start (87 samples, 4.35%)</title><rect x="95.6500%" y="1589" width="4.3500%" height="15" fill="rgb(247,132,33)" fg:x="1913" fg:w="87"/><text x="95.9000%" y="1599.50">arvz`..</text></g><g><title>arvz`core::ops::function::FnOnce::call_once{{vtable.shim}} (87 samples, 4.35%)</title><rect x="95.6500%" y="1573" width="4.3500%" height="15" fill="rgb(208,149,11)" fg:x="1913" fg:w="87"/><text x="95.9000%" y="1583.50">arvz`..</text></g><g><title>arvz`std::thread::Builder::spawn_unchecked_::_{{closure}} (87 samples, 4.35%)</title><rect x="95.6500%" y="1557" width="4.3500%" height="15" fill="rgb(211,33,11)" fg:x="1913" fg:w="87"/><text x="95.9000%" y="1567.50">arvz`..</text></g><g><title>arvz`std::panicking::try (87 samples, 4.35%)</title><rect x="95.6500%" y="1541" width="4.3500%" height="15" fill="rgb(221,29,38)" fg:x="1913" fg:w="87"/><text x="95.9000%" y="1551.50">arvz`..</text></g><g><title>arvz`__rust_try (87 samples, 4.35%)</title><rect x="95.6500%" y="1525" width="4.3500%" height="15" fill="rgb(206,182,49)" fg:x="1913" fg:w="87"/><text x="95.9000%" y="1535.50">arvz`..</text></g><g><title>arvz`std::panicking::try::do_call (87 samples, 4.35%)</title><rect x="95.6500%" y="1509" width="4.3500%" height="15" fill="rgb(216,140,1)" fg:x="1913" fg:w="87"/><text x="95.9000%" y="1519.50">arvz`..</text></g><g><title>arvz`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (87 samples, 4.35%)</title><rect x="95.6500%" y="1493" width="4.3500%" height="15" fill="rgb(232,57,40)" fg:x="1913" fg:w="87"/><text x="95.9000%" y="1503.50">arvz`..</text></g><g><title>arvz`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (87 samples, 4.35%)</title><rect x="95.6500%" y="1477" width="4.3500%" height="15" fill="rgb(224,186,18)" fg:x="1913" fg:w="87"/><text x="95.9000%" y="1487.50">arvz`..</text></g><g><title>arvz`std::sys_common::backtrace::__rust_begin_short_backtrace (87 samples, 4.35%)</title><rect x="95.6500%" y="1461" width="4.3500%" height="15" fill="rgb(215,121,11)" fg:x="1913" fg:w="87"/><text x="95.9000%" y="1471.50">arvz`..</text></g><g><title>arvz`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (86 samples, 4.30%)</title><rect x="95.7000%" y="1445" width="4.3000%" height="15" fill="rgb(245,147,10)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1455.50">arvz`..</text></g><g><title>arvz`tokio::runtime::blocking::pool::Inner::run (86 samples, 4.30%)</title><rect x="95.7000%" y="1429" width="4.3000%" height="15" fill="rgb(238,153,13)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1439.50">arvz`..</text></g><g><title>arvz`tokio::runtime::blocking::pool::Task::run (86 samples, 4.30%)</title><rect x="95.7000%" y="1413" width="4.3000%" height="15" fill="rgb(233,108,0)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1423.50">arvz`..</text></g><g><title>arvz`tokio::runtime::task::UnownedTask&lt;S&gt;::run (86 samples, 4.30%)</title><rect x="95.7000%" y="1397" width="4.3000%" height="15" fill="rgb(212,157,17)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1407.50">arvz`..</text></g><g><title>arvz`tokio::runtime::task::raw::RawTask::poll (86 samples, 4.30%)</title><rect x="95.7000%" y="1381" width="4.3000%" height="15" fill="rgb(225,213,38)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1391.50">arvz`..</text></g><g><title>arvz`tokio::runtime::task::raw::poll (86 samples, 4.30%)</title><rect x="95.7000%" y="1365" width="4.3000%" height="15" fill="rgb(248,16,11)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1375.50">arvz`..</text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (86 samples, 4.30%)</title><rect x="95.7000%" y="1349" width="4.3000%" height="15" fill="rgb(241,33,4)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1359.50">arvz`..</text></g><g><title>arvz`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (86 samples, 4.30%)</title><rect x="95.7000%" y="1333" width="4.3000%" height="15" fill="rgb(222,26,43)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1343.50">arvz`..</text></g><g><title>arvz`tokio::runtime::task::harness::poll_future (86 samples, 4.30%)</title><rect x="95.7000%" y="1317" width="4.3000%" height="15" fill="rgb(243,29,36)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1327.50">arvz`..</text></g><g><title>arvz`std::panic::catch_unwind (86 samples, 4.30%)</title><rect x="95.7000%" y="1301" width="4.3000%" height="15" fill="rgb(241,9,27)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1311.50">arvz`..</text></g><g><title>arvz`std::panicking::try (86 samples, 4.30%)</title><rect x="95.7000%" y="1285" width="4.3000%" height="15" fill="rgb(205,117,26)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1295.50">arvz`..</text></g><g><title>arvz`__rust_try (86 samples, 4.30%)</title><rect x="95.7000%" y="1269" width="4.3000%" height="15" fill="rgb(209,80,39)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1279.50">arvz`..</text></g><g><title>arvz`std::panicking::try::do_call (86 samples, 4.30%)</title><rect x="95.7000%" y="1253" width="4.3000%" height="15" fill="rgb(239,155,6)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1263.50">arvz`..</text></g><g><title>arvz`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (86 samples, 4.30%)</title><rect x="95.7000%" y="1237" width="4.3000%" height="15" fill="rgb(212,104,12)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1247.50">arvz`..</text></g><g><title>arvz`tokio::runtime::task::harness::poll_future::_{{closure}} (86 samples, 4.30%)</title><rect x="95.7000%" y="1221" width="4.3000%" height="15" fill="rgb(234,204,3)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1231.50">arvz`..</text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (86 samples, 4.30%)</title><rect x="95.7000%" y="1205" width="4.3000%" height="15" fill="rgb(251,218,7)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1215.50">arvz`..</text></g><g><title>arvz`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (86 samples, 4.30%)</title><rect x="95.7000%" y="1189" width="4.3000%" height="15" fill="rgb(221,81,32)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1199.50">arvz`..</text></g><g><title>arvz`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (86 samples, 4.30%)</title><rect x="95.7000%" y="1173" width="4.3000%" height="15" fill="rgb(214,152,26)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1183.50">arvz`..</text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (86 samples, 4.30%)</title><rect x="95.7000%" y="1157" width="4.3000%" height="15" fill="rgb(223,22,3)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1167.50">arvz`..</text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run (86 samples, 4.30%)</title><rect x="95.7000%" y="1141" width="4.3000%" height="15" fill="rgb(207,174,7)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1151.50">arvz`..</text></g><g><title>arvz`tokio::runtime::context::runtime::enter_runtime (86 samples, 4.30%)</title><rect x="95.7000%" y="1125" width="4.3000%" height="15" fill="rgb(224,19,52)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1135.50">arvz`..</text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (86 samples, 4.30%)</title><rect x="95.7000%" y="1109" width="4.3000%" height="15" fill="rgb(228,24,14)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1119.50">arvz`..</text></g><g><title>arvz`tokio::runtime::context::set_scheduler (86 samples, 4.30%)</title><rect x="95.7000%" y="1093" width="4.3000%" height="15" fill="rgb(230,153,43)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1103.50">arvz`..</text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::with (86 samples, 4.30%)</title><rect x="95.7000%" y="1077" width="4.3000%" height="15" fill="rgb(231,106,12)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1087.50">arvz`..</text></g><g><title>arvz`std::thread::local::LocalKey&lt;T&gt;::try_with (86 samples, 4.30%)</title><rect x="95.7000%" y="1061" width="4.3000%" height="15" fill="rgb(215,92,2)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1071.50">arvz`..</text></g><g><title>arvz`tokio::runtime::context::set_scheduler::_{{closure}} (86 samples, 4.30%)</title><rect x="95.7000%" y="1045" width="4.3000%" height="15" fill="rgb(249,143,25)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1055.50">arvz`..</text></g><g><title>arvz`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (86 samples, 4.30%)</title><rect x="95.7000%" y="1029" width="4.3000%" height="15" fill="rgb(252,7,35)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1039.50">arvz`..</text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (86 samples, 4.30%)</title><rect x="95.7000%" y="1013" width="4.3000%" height="15" fill="rgb(216,69,40)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1023.50">arvz`..</text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Context::run (86 samples, 4.30%)</title><rect x="95.7000%" y="997" width="4.3000%" height="15" fill="rgb(240,36,33)" fg:x="1914" fg:w="86"/><text x="95.9500%" y="1007.50">arvz`..</text></g><g><title>arvz`tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (1 samples, 0.05%)</title><rect x="99.9500%" y="981" width="0.0500%" height="15" fill="rgb(231,128,14)" fg:x="1999" fg:w="1"/><text x="100.2000%" y="991.50"></text></g></svg></svg>